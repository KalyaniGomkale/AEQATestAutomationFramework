<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="120" total="386" passed="208" failed="36" skipped="22">
  <reporter-output>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Failure message after entering same org code : Duplicate org code [KG01].]]>
    </line>
    <line>
      <![CDATA[New Usernot created due to duplicate orgcode.]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[License status verified]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[System Admin is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[System User details got edited.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Actual message when user both passwords are not same: Passwords Mismatch!]]>
    </line>
    <line>
      <![CDATA[Got correct error when there is mismatch in password]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User details got edited.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked the download button]]>
    </line>
    <line>
      <![CDATA[Audit logs download started Successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 2]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 2]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Description]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Source]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[Upload button is clicked]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[Failure message for Invalid Artifact name: Artifact name for Process Studio distribution is case-sensitive. Please enter name as "Process Studio".]]>
    </line>
    <line>
      <![CDATA[Please upload artifacts with valid name]]>
    </line>
    <line>
      <![CDATA[Artifact name has given correctly]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[Success message for valid Artifact name: Artifact uploaded successfully]]>
    </line>
    <line>
      <![CDATA[Artifact uploaded successfully]]>
    </line>
    <line>
      <![CDATA[Actual Entity after uploading PS Upload: ARTIFACT]]>
    </line>
    <line>
      <![CDATA[Actual Operation after uploading PS Upload: UPLOAD]]>
    </line>
    <line>
      <![CDATA[Entry and Operation in Logs after uploading PS is verified]]>
    </line>
    <line>
      <![CDATA[Entity after uploading PS is verified]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[Upload zip button clicked]]>
    </line>
    <line>
      <![CDATA[Plugin zip started uploading]]>
    </line>
    <line>
      <![CDATA[Upgrade all plugin checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Assign to all checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Save button is selected]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[Upload zip button clicked]]>
    </line>
    <line>
      <![CDATA[Plugin zip started uploading]]>
    </line>
    <line>
      <![CDATA[Upgrade all plugin checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Assign to all checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Save button is selected]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Server Settings are not done, validated successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[When server settings are not done & user try to download agent.Popup is : It seems you have not configured the server URL for this server. Please contact administrator]]>
    </line>
    <line>
      <![CDATA[Agent can't be download due ro server settings,Error validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Server URL field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Clean Up Requests Hours field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Add smtp config button clicked]]>
    </line>
    <line>
      <![CDATA[Test connection successfully]]>
    </line>
    <line>
      <![CDATA[SMTP configured successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User skipped the set security question and navigated to Tenants Tab]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions can not be updated due to wrong password]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions updated successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User first skip the security question and then set security questions successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[Password policy updated]]>
    </line>
    <line>
      <![CDATA[Password History of sysadmin validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Sysadmin Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Last login time displayed successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Profile details validation successfully.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Server URL field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Clean Up Requests Hours field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[LOGOUT]]>
    </line>
    <line>
      <![CDATA[UPDATE]]>
    </line>
    <line>
      <![CDATA[AUTHENTICATE]]>
    </line>
    <line>
      <![CDATA[Operations in audit logs validated in table]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Error when notification history is gretaer than wf requestNotification History Duration has be less than or equal to Workflow Requests Duration]]>
    </line>
    <line>
      <![CDATA[Expected Error when notification history is gretaer than wf request:Notification History Duration has be less than or equal to Workflow Requests Duration]]>
    </line>
    <line>
      <![CDATA[Getting correct error message.]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Purge policy saved successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Purge policy saved successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Add button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule created for day of Month]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Forgotten password link is Present]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Set new password successfully]]>
    </line>
    <line>
      <![CDATA[Password set successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Import is not possible w/o License ]]>
    </line>
    <line>
      <![CDATA[HomeTab is clicked]]>
    </line>
    <line>
      <![CDATA[Upload Licens ebox is clicked]]>
    </line>
    <line>
      <![CDATA[License file submitted]]>
    </line>
    <line>
      <![CDATA[Upload button is clicked]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully for Tenant]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Workflow Admin]]>
    </line>
    <line>
      <![CDATA[Workflow Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Workflow Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant Admin]]>
    </line>
    <line>
      <![CDATA[Tenant Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Admin]]>
    </line>
    <line>
      <![CDATA[User Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[User Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Group]]>
    </line>
    <line>
      <![CDATA[Actual Username:User group created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User group created successfully]]>
    </line>
    <line>
      <![CDATA[New user group is created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Description of user group updated]]>
    </line>
    <line>
      <![CDATA[Actual Username:Changes saved to user group]]>
    </line>
    <line>
      <![CDATA[Expected Username:Changes saved to user group]]>
    </line>
    <line>
      <![CDATA[User group got edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users Tab clicked]]>
    </line>
    <line>
      <![CDATA[UsersGroup Tab clicked]]>
    </line>
    <line>
      <![CDATA[Show Member button is clicked]]>
    </line>
    <line>
      <![CDATA[assigning user1]]>
    </line>
    <line>
      <![CDATA[Actual Username:User(s) added to the group successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User(s) added to the group successfully]]>
    </line>
    <line>
      <![CDATA[User1 assigned and validated]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab clicked]]>
    </line>
    <line>
      <![CDATA[Users group tab clicked]]>
    </line>
    <line>
      <![CDATA[Show Member button is clicked]]>
    </line>
    <line>
      <![CDATA[Removing user1]]>
    </line>
    <line>
      <![CDATA[Actual Username:User(s) removed from the group successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User(s) removed from the group successfully]]>
    </line>
    <line>
      <![CDATA[User1 removed]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Group]]>
    </line>
    <line>
      <![CDATA[Actual Username:Duplicate user group name [HRGroup]]]>
    </line>
    <line>
      <![CDATA[Expected Username:Duplicate user group name [HRGroup]]]>
    </line>
    <line>
      <![CDATA[User group with duplicate name can not be created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Alert Message when user dont configure smtpEmail server not configured for the tenant. Email notification cannot be enabled]]>
    </line>
    <line>
      <![CDATA[Getting correct message for email notification as smtp not configured]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Icon Updation done successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Icon Updation done successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is Clicked]]>
    </line>
    <line>
      <![CDATA[Aactual Success Message after editing workflow: Workflow updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Message after editing workflow: Workflow updated successfully]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category name is entered which is only mandatory field]]>
    </line>
    <line>
      <![CDATA[Actual Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Category created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit Button corresponding to required category is clicked]]>
    </line>
    <line>
      <![CDATA[Category Description is entered]]>
    </line>
    <line>
      <![CDATA[Actual Category edited message is :Workflow category updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category edited message is :Workflow category updated successfully]]>
    </line>
    <line>
      <![CDATA[Category edited succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Workflow which needs to move is checked]]>
    </line>
    <line>
      <![CDATA[category in which wf needs to move is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Actual message is :Workflow(s) category changed successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Workflow(s) category changed successfully]]>
    </line>
    <line>
      <![CDATA[Workflow assigned to category succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category name is entered which is only mandatory field]]>
    </line>
    <line>
      <![CDATA[Actual message is :Duplicate category name [WebGUI]]]>
    </line>
    <line>
      <![CDATA[Expected message is :Duplicate category name [WebGUI]]]>
    </line>
    <line>
      <![CDATA[Category can't be created with duplicate name]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for KG_Private1 credential found in table]]>
    </line>
    <line>
      <![CDATA[Credentials created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button corresponding to credentials clicked]]>
    </line>
    <line>
      <![CDATA[Year selected from Calender]]>
    </line>
    <line>
      <![CDATA[Month selected from Calender]]>
    </line>
    <line>
      <![CDATA[Expiry Date selected from Calender]]>
    </line>
    <line>
      <![CDATA[Update button is clicked]]>
    </line>
    <line>
      <![CDATA[Credentials edited succesfully with all fields]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
    </line>
    <line>
      <![CDATA[Expected Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
    </line>
    <line>
      <![CDATA[Credentials with duplicate name can't created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential Pool button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for AE1 credential Pool found in table]]>
    </line>
    <line>
      <![CDATA[Credential Pool created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential Pool button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
    </line>
    <line>
      <![CDATA[Expected Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
    </line>
    <line>
      <![CDATA[Credential Pool with duplicate name can't created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential which needs to add in crenetial pool is selcted]]>
    </line>
    <line>
      <![CDATA[Credential pool in which redential needs to move is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Move Button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual message is :Credential(s) moved successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential(s) moved successfully]]>
    </line>
    <line>
      <![CDATA[Credential moved to credential pool successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to workflow assignment Tab]]>
    </line>
    <line>
      <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
    </line>
    <line>
      <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
    </line>
    <line>
      <![CDATA[Now User needs to download agent first]]>
    </line>
    <line>
      <![CDATA[User navigated to Agent List Tab]]>
    </line>
    <line>
      <![CDATA[Agent download started]]>
    </line>
    <line>
      <![CDATA[File unzipped properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Additional status details is clicked]]>
    </line>
    <line>
      <![CDATA[Message after execution of wf:Message : Execution Successful]]>
    </line>
    <line>
      <![CDATA[Workflow status is:Complete]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked the download button]]>
    </line>
    <line>
      <![CDATA[Audit logs download started Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 2]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 2]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Description]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Source]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Status of New Tenant user is :UNVERIFIED]]>
    </line>
    <line>
      <![CDATA[Expected Status of New Tenant user is :UNVERIFIED]]>
    </line>
    <line>
      <![CDATA[Status of newly created user is UNVERIFIED, verified successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Login into TA to verify status]]>
    </line>
    <line>
      <![CDATA[Actual Status of Tenant user after changing password is :ACTIVE]]>
    </line>
    <line>
      <![CDATA[Expected Status of Tenant user after changing password is :ACTIVE]]>
    </line>
    <line>
      <![CDATA[Status of user whose First time password changed is ACTIVE, verified successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Daily Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[End date changed]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Start day selected]]>
    </line>
    <line>
      <![CDATA[End day selected]]>
    </line>
    <line>
      <![CDATA[Schedule type selected]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[End Time is selected]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[End Time is selected]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Run Schedule Infinitely checbox selected]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Infinite Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add Transfer Schedule button is clicked]]>
    </line>
    <line>
      <![CDATA[User from whom schedule needs to transfer is selcted]]>
    </line>
    <line>
      <![CDATA[User to whom schedule needs to is selcted]]>
    </line>
    <line>
      <![CDATA[Transfer button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedules transferred successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedules transferred successfully]]>
    </line>
    <line>
      <![CDATA[Schedule transfered successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 3]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 3]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Agent Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Resource Utilization]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Agent Name,Status and Resource Utilization.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Agent Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Execution Threads]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Executing Workflows]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Resource Utilization]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 3]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 3]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Workflow Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Id,Workflow Name,Status.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Workflow Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Priority]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Completed]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Download button is clicked & request download started]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[agent Radio button is selected by default]]>
    </line>
    <line>
      <![CDATA[Agent is been selected]]>
    </line>
    <line>
      <![CDATA[Start Date selected]]>
    </line>
    <line>
      <![CDATA[End Date selected]]>
    </line>
    <line>
      <![CDATA[Agent log submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Agent logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Agents log downloaded successfully for Agent kalyani.gomkale@aedbserver]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[Request Radio Button is selected]]>
    </line>
    <line>
      <![CDATA[Request ID entered.]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Workflow logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Workflow log downloaded successfully for Workflow InstanceID 1]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration None selected]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at None level created successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Zip File found in File Structure:Boolean.zip]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Update option from dropdown]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Second workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Today selected]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Relative selected]]>
    </line>
    <line>
      <![CDATA[Create Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at None level created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Edit report is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Custom selected]]>
    </line>
    <line>
      <![CDATA[Update Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard Saved Successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard Saved Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at Custom level updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a Table]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Set as Default option clicked]]>
    </line>
    <line>
      <![CDATA[Report set as a default successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Pin to Home option clicked]]>
    </line>
    <line>
      <![CDATA[After Pin to Home actual message get is: Dashboard [DashboardCustom] set as home dashboard]]>
    </line>
    <line>
      <![CDATA[Report set as a default successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Make Public option clicked]]>
    </line>
    <line>
      <![CDATA[After making dashboard public actual message get is: Dashboard [DashboardCustom], Access Level set to Public]]>
    </line>
    <line>
      <![CDATA[Dashboard made as public successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Delete Dashboard option clicked]]>
    </line>
    <line>
      <![CDATA[Delete button clicked on popup]]>
    </line>
    <line>
      <![CDATA[After deleting dashboard with report, actual message get is: Dashboard Deleted successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard with report deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration None selected]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Report tab clicked]]>
    </line>
    <line>
      <![CDATA[DataSource  tab clicked]]>
    </line>
    <line>
      <![CDATA[Data-Source Form opened]]>
    </line>
    <line>
      <![CDATA[Button Clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked.]]>
    </line>
    <line>
      <![CDATA[Datsource created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Add smtp config button clicked]]>
    </line>
    <line>
      <![CDATA[Tested connection successfully]]>
    </line>
    <line>
      <![CDATA[Smtp configured successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button clicked]]>
    </line>
    <line>
      <![CDATA[Tested connection successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked save button now validate the password complexity at confirm policy popup]]>
    </line>
    <line>
      <![CDATA[Expected Arraylist is:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&, Password length should be between 6-19]]]>
    </line>
    <line>
      <![CDATA[Values in arrayList Before:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&]]]>
    </line>
    <line>
      <![CDATA[Validation done as Password complexity match while changing password]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[Password policy updated]]>
    </line>
    <line>
      <![CDATA[Password History of sysadmin validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Save button clicked & Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
    </line>
    <line>
      <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
    </line>
    <line>
      <![CDATA[Ok button clicked in confirm policy popup]]>
    </line>
    <line>
      <![CDATA[Actual Message after password policy update:Password policy updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Message after password policy update:Password policy updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Actual_msg:]]>
    </line>
    <line>
      <![CDATA[Expected_msg:Your account is inaccessible . Please contact your Administrator.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Last login time displayed successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Profile details validation successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant logo removed successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Locked button clicked]]>
    </line>
    <line>
      <![CDATA[Action is selected to UNLOCK user and next button is clicked]]>
    </line>
    <line>
      <![CDATA[MadhuRani1enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[Tenant is created successfully, now assign specific plugin to that tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin assigned to single tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single plugin assigned to desired tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[New plugin jar is uploaded now we will assign it to all tenants]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin assigned to all tenant successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Upload Button is clicked]]>
    </line>
    <line>
      <![CDATA[Plugin Name is selected]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Chrome driver uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Opertaion of Disable all workflows is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Opertaion of Enable all workflows is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[ Actual message after updating artifact: Artifact updated successfully]]>
    </line>
    <line>
      <![CDATA[Artifact updated successfully]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Set new password successfully]]>
    </line>
    <line>
      <![CDATA[Password set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: LPT-0919]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: KalyaniG]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 10.81.24.109]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 5901]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Expected details of Integration service in table are: [LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Integration service details verified in table]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button clicked, Service with IntService1 name is editing]]>
    </line>
    <line>
      <![CDATA[UserName is edited]]>
    </line>
    <line>
      <![CDATA[Update Button is clicked, now validate the change in table]]>
    </line>
    <line>
      <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
    </line>
    <line>
      <![CDATA[Integration service edited successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Download button clicked and downloading integrtration service started]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Enable button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration service enable for Tenant1: KG01 and allowed number of configuration is: 2]]>
    </line>
    <line>
      <![CDATA[Integration service enable for Tenant2: KG02 and allowed number of configuration is: 1]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type created successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Logs and Found is: Logs]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Single Sign-On and Found is: Single Sign-On]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Type selected from dropdown]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single Sign-on Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenants tab is clicked]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Tenants and Expected page title is: Tenants]]>
    </line>
    <line>
      <![CDATA[Search Functionality working fine for Tenants & Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: System Users and Expected page title is: System Users]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Tenant Users and Expected page title is: Tenant Users]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Workflow Operations and Expected page title is: Workflow Operations]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Audit Logs and Expected page title is: Audit Logs]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Artifacts and Expected page title is: Artifacts]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Plugins and Expected page title is: Plugins]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Plugin Assignments and Expected page title is: Plugin Assignments]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Plugin Files and Expected page title is: Plugin Files]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: System Settings and Expected page title is: System Settings]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Email Configuration and Expected page title is: Email Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Sysadmin Policy and Expected page title is: Sysadmin Policy]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Reset Security Questions and Expected page title is: Reset Security Questions]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Scheduler and Expected page title is: Scheduler]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Requests and Expected page title is: Requests]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Agent Logs and Expected page title is: Agent Logs]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Workflow Files and Expected page title is: Workflow Files]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dropdown Selector button is selected]]>
    </line>
    <line>
      <![CDATA[Native Users is Selected]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Rohil]]>
    </line>
    <line>
      <![CDATA[Omkar]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dropdown Selector button is selected]]>
    </line>
    <line>
      <![CDATA[Native Users is Selected]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Suyash]]>
    </line>
    <line>
      <![CDATA[Jitin]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for KG_Private2 credential found in table]]>
    </line>
    <line>
      <![CDATA[Credentials created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Configuration Parameters dropdown is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked on Credentials Radio Button]]>
    </line>
    <line>
      <![CDATA[Clicked on Credentials Pool Radio Button]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button on popup is confirmed]]>
    </line>
    <line>
      <![CDATA[Actual message is :]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential pool [AE1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button on popup is confirmed]]>
    </line>
    <line>
      <![CDATA[Actual message is :Credential [KG_Private1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential [KG_Private1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Credential deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab clicked]]>
    </line>
    <line>
      <![CDATA[Users group tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Username:User group deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User group deleted successfully]]>
    </line>
    <line>
      <![CDATA[User group deleted]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Home Tab is clicked]]>
    </line>
    <line>
      <![CDATA[License Details Tab is clicked]]>
    </line>
    <line>
      <![CDATA[DEVELOPMENT]]>
    </line>
    <line>
      <![CDATA[10]]>
    </line>
    <line>
      <![CDATA[20]]>
    </line>
    <line>
      <![CDATA[3]]>
    </line>
    <line>
      <![CDATA[10000]]>
    </line>
    <line>
      <![CDATA[30]]>
    </line>
    <line>
      <![CDATA[15-Sep-2022]]>
    </line>
    <line>
      <![CDATA[14-Sep-2023]]>
    </line>
    <line>
      <![CDATA[Actual License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
    </line>
    <line>
      <![CDATA[Expected License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
    </line>
    <line>
      <![CDATA[License details are validated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Agent Thread count:-20]]>
    </line>
    <line>
      <![CDATA[Actual Step Units count:-10000]]>
    </line>
    <line>
      <![CDATA[Actual Expiry Date:-14-Sep-2023]]>
    </line>
    <line>
      <![CDATA[License details on Homepage are validated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflows checkbox is clicked]]>
    </line>
    <line>
      <![CDATA[All workflow are selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Holiday Calendar and Expected page title is: Holiday Calendar]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Schedule got disable]]>
    </line>
    <line>
      <![CDATA[Delete schedule button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:For automation deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:For automation deleted successfully]]>
    </line>
    <line>
      <![CDATA[Schedule deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Same plugin jar not uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[actual success msg is: Duplicate plugin name [GUI-Automation]]]>
    </line>
    <line>
      <![CDATA[expected success msg is: Duplicate plugin name [GUI-Automation]]]>
    </line>
    <line>
      <![CDATA[Single plugin jar with same version is not uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single plugin jar of lower version is uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Chrome driver is edited successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Chrome driver is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin Tab is Selected]]>
    </line>
    <line>
      <![CDATA[Plugin Assignment tab is Selected]]>
    </line>
    <line>
      <![CDATA[Save Button is Clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[HexColor of WF Slider:-#ced4da]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Plugin permission is removed so workflow cannot be made inactive]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin Tab is Selected]]>
    </line>
    <line>
      <![CDATA[Plugin Assignment tab is Selected]]>
    </line>
    <line>
      <![CDATA[Save Button is Clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[HexColor of WF Slider:-#4492d6]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Status of Integration service: Stopped and Expected Status of Integration service: table: Stopped]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success msg is: Integration type [RemedyForce] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected success msg is: Integration type [RemedyForce] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Integration type is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[Restart button is clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Restart Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Restart button is clicked and agent is going in Stopped Status successfully]]>
    </line>
    <line>
      <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
    </line>
    <line>
      <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in Stopped mode]]>
    </line>
    <line>
      <![CDATA[Current status of Agent after being Restart is: Stopped]]>
    </line>
    <line>
      <![CDATA[Current status of Agent after being Restart is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode after being restart]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Category:-Default]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Category:-WebGUI]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Upload Button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Name is selected]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Filename:- WFWithConfigParam.zip Expected Filename:- WFWithConfigParam.zip]]>
    </line>
    <line>
      <![CDATA[Workflow is uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow file is edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Workflow file is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Integration type is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Process-studio download started]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Process studio license is unassigned correctly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Process Studio and Expected page title is: Process Studio]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Additional status details is clicked]]>
    </line>
    <line>
      <![CDATA[Message after execution of wf:Error!]]>
    </line>
    <line>
      <![CDATA[Workflow status is:Failure]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[PS download button for Linux is clicked successfully]]>
    </line>
    <line>
      <![CDATA[PS for Linux is downloaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Restart icon is clicked]]>
    </line>
    <line>
      <![CDATA[Request Status is Failure So Restart button is visible and clicked]]>
    </line>
    <line>
      <![CDATA[Request [4] has been restarted]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Config Parameter is clicked]]>
    </line>
    <line>
      <![CDATA[Config Parameter is entered]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User is able to access the application as per his role]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant User]]>
    </line>
    <line>
      <![CDATA[Tenant User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User signed in successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Active button is clicked]]>
    </line>
    <line>
      <![CDATA[Disabled button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Actual Message on screen is:  and Expected message is: Your account is inaccessible . Please contact your Administrator.]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Active button is clicked]]>
    </line>
    <line>
      <![CDATA[Disabled button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Delete this user checkbox is selected]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Workflow Admin]]>
    </line>
    <line>
      <![CDATA[Workflow Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Workflow Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Current Tenant Role is Workflow Admin]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Users Tab is Clicked]]>
    </line>
    <line>
      <![CDATA[TenantUsers Tab is Clicked]]>
    </line>
    <line>
      <![CDATA[Edit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Email Id is edited successfully]]>
    </line>
    <line>
      <![CDATA[New Role is edited successfully]]>
    </line>
    <line>
      <![CDATA[Save Button is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Activity Monitor]]>
    </line>
    <line>
      <![CDATA[Activity Monitor is created successfully]]>
    </line>
    <line>
      <![CDATA[Activity Monitor created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Activity Monitor role with space in username is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Agent Admin]]>
    </line>
    <line>
      <![CDATA[Agent Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Agent Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Agent admin role with Apostrophe in last name is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Admin]]>
    </line>
    <line>
      <![CDATA[User Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[User Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User admin role with Email id in username is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category from which wf needs to remove is selected]]>
    </line>
    <line>
      <![CDATA[Workflow assigned to category is removed]]>
    </line>
    <line>
      <![CDATA[Actual message is :Workflow removed from this category successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Workflow removed from this category successfully]]>
    </line>
    <line>
      <![CDATA[Workflow removed from category succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[Stop Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Stop Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Actual_Message:-Stopping agent [kalyani.gomkale@aedbserver] is in progress]]>
    </line>
    <line>
      <![CDATA[Expected Message:- Stopping agent [kalyani.gomkale@aedbserver] is in progress]]>
    </line>
    <line>
      <![CDATA[Agent is stopped successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in Stopped mode]]>
    </line>
    <line>
      <![CDATA[Delete Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Delete Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Agent is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to workflow assignment Tab]]>
    </line>
    <line>
      <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
    </line>
    <line>
      <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
    </line>
    <line>
      <![CDATA[Now User needs to download agent first]]>
    </line>
    <line>
      <![CDATA[User navigated to Agent List Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agent Tab]]>
    </line>
    <line>
      <![CDATA[Assisted Agent download started]]>
    </line>
    <line>
      <![CDATA[File unzipped properly]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Assisted Agent is: Stopped]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Agents and Found is: Agents]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User is not assigned to Assisted agent so Agent tab is not visible]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Agentslist Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User clicked on Edit Btn]]>
    </line>
    <line>
      <![CDATA[Actual message displayed on screen is: Changes saved to the agent and Expected message is: Changes saved to the agent]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked and Assisted agent name is changed successfully]]>
    </line>
    <line>
      <![CDATA[Edited Assisted Agent Name:- kalyani.gomkale@aedbserver]]>
    </line>
    <line>
      <![CDATA[Agent Name Changed successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[assisted Workflow is selected]]>
    </line>
    <line>
      <![CDATA[assisted Workflow is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[agent Radio button is selected by default]]>
    </line>
    <line>
      <![CDATA[Agent is been selected]]>
    </line>
    <line>
      <![CDATA[Start Date selected]]>
    </line>
    <line>
      <![CDATA[End Date selected]]>
    </line>
    <line>
      <![CDATA[Agent log submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Agent logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Agents log downloaded successfully for Agent kalyani.gomkale@aedbserver]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked]]>
    </line>
    <line>
      <![CDATA[Confirmed for deletion of Artifact]]>
    </line>
    <line>
      <![CDATA[ Actual message after deletion of artifact: Artifact <Process Studio> deleted successfully]]>
    </line>
    <line>
      <![CDATA[Artifact deleted successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Category  tab clicked]]>
    </line>
    <line>
      <![CDATA[Actual Category deleted message is :Workflow category deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category deleted message is :Workflow category deleted successfully]]>
    </line>
    <line>
      <![CDATA[Category Deleted succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button clicked]]>
    </line>
    <line>
      <![CDATA[Confirmation popup agree for deletion]]>
    </line>
    <line>
      <![CDATA[Smtp Configuration details deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2023-04-18T20:38:06 IST" name="TestSuite" finished-at="2023-04-19T00:32:13 IST" duration-ms="14046460">
    <groups>
    </groups>
    <test started-at="2023-04-18T20:38:06 IST" name="AESanity" finished-at="2023-04-19T00:32:13 IST" duration-ms="14046460">
      <class name="com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:15:40 IST" name="initialization" finished-at="2023-04-18T23:15:47 IST" duration-ms="6982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateFileManagementPageTATest(java.lang.reflect.Method)[pri:198, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:15:47 IST" name="validateFileManagementPageTATest" finished-at="2023-04-18T23:16:03 IST" duration-ms="16620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateFileManagementPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Workflow Files and Expected page title is: Workflow Files]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateFileManagementPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:16:03 IST" name="getResult" finished-at="2023-04-18T23:16:05 IST" duration-ms="1438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFileManagementPageTATest status=SUCCESS method=FileManagementPageTestTA.validateFileManagementPageTATest(java.lang.reflect.Method)[pri:198, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:54:27 IST" name="initialization" finished-at="2023-04-18T23:54:33 IST" duration-ms="6415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1026, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:54:33 IST" name="validateUploadWFFileManagementTest" finished-at="2023-04-18T23:55:03 IST" duration-ms="29984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateUploadWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Upload Button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Name is selected]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Filename:- WFWithConfigParam.zip Expected Filename:- WFWithConfigParam.zip]]>
            </line>
            <line>
              <![CDATA[Workflow is uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:03 IST" name="getResult" finished-at="2023-04-18T23:55:08 IST" duration-ms="4871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1026, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:08 IST" name="initialization" finished-at="2023-04-18T23:55:14 IST" duration-ms="6316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWFFileManagementTest(java.lang.reflect.Method)[pri:1027, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:14 IST" name="validateEditWFFileManagementTest" finished-at="2023-04-18T23:55:40 IST" duration-ms="25854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateEditWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow file is edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:40 IST" name="getResult" finished-at="2023-04-18T23:55:44 IST" duration-ms="3539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateEditWFFileManagementTest(java.lang.reflect.Method)[pri:1027, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:44 IST" name="initialization" finished-at="2023-04-18T23:55:51 IST" duration-ms="7222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1028, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:55:51 IST" name="validateDeleteUploadWFFileManagementTest" finished-at="2023-04-18T23:56:12 IST" duration-ms="20799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Workflow file is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUploadWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b]" started-at="2023-04-18T23:56:12 IST" name="getResult" finished-at="2023-04-18T23:56:14 IST" duration-ms="1954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUploadWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1028, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@2783717b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:34:35 IST" name="initialization" finished-at="2023-04-18T22:34:42 IST" duration-ms="7165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePswdComplexityTATest(java.lang.reflect.Method)[pri:120, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:34:42 IST" name="validatePswdComplexityTATest" finished-at="2023-04-18T22:35:21 IST" duration-ms="39394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validatePswdComplexityTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked save button now validate the password complexity at confirm policy popup]]>
            </line>
            <line>
              <![CDATA[Expected Arraylist is:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&, Password length should be between 6-19]]]>
            </line>
            <line>
              <![CDATA[Values in arrayList Before:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&]]]>
            </line>
            <line>
              <![CDATA[Validation done as Password complexity match while changing password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePswdComplexityTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:35:21 IST" name="getResult" finished-at="2023-04-18T22:35:25 IST" duration-ms="4194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePswdComplexityTATest status=SUCCESS method=TenantPolicyPageTestTA.validatePswdComplexityTATest(java.lang.reflect.Method)[pri:120, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a] output=Settings tab clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:35:25 IST" name="initialization" finished-at="2023-04-18T22:35:33 IST" duration-ms="7274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordHistoryTATest(java.lang.reflect.Method)[pri:121, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:35:33 IST" name="validatePasswordHistoryTATest" finished-at="2023-04-18T22:36:47 IST" duration-ms="74003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validatePasswordHistoryTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[Password policy updated]]>
            </line>
            <line>
              <![CDATA[Password History of sysadmin validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordHistoryTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:36:47 IST" name="getResult" finished-at="2023-04-18T22:36:49 IST" duration-ms="2157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordHistoryTATest status=SUCCESS method=TenantPolicyPageTestTA.validatePasswordHistoryTATest(java.lang.reflect.Method)[pri:121, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:36:49 IST" name="initialization" finished-at="2023-04-18T22:36:56 IST" duration-ms="7286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateNoOfAttemptsTATest(java.lang.reflect.Method)[pri:122, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:36:56 IST" name="validateNoOfAttemptsTATest" finished-at="2023-04-18T22:39:02 IST" duration-ms="126161" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validateNoOfAttemptsTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Your account is inaccessible . Please contact your Administrator.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Your account is inaccessible . Please contact your Administrator.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.ae.qa.pagesTenantAdmin.TenantPolicyPageTA.validateNoOfAttempts(TenantPolicyPageTA.java:388)
at com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validateNoOfAttemptsTATest(TenantPolicyPageTestTA.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Save button clicked & Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
            </line>
            <line>
              <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
            </line>
            <line>
              <![CDATA[Ok button clicked in confirm policy popup]]>
            </line>
            <line>
              <![CDATA[Actual Message after password policy update:Password policy updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Message after password policy update:Password policy updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Actual_msg:]]>
            </line>
            <line>
              <![CDATA[Expected_msg:Your account is inaccessible . Please contact your Administrator.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateNoOfAttemptsTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a]" started-at="2023-04-18T22:39:02 IST" name="getResult" finished-at="2023-04-18T22:39:08 IST" duration-ms="5910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNoOfAttemptsTATest status=FAILURE method=TenantPolicyPageTestTA.validateNoOfAttemptsTATest(java.lang.reflect.Method)[pri:122, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@5ad10c1a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:33:04 IST" name="initialization" finished-at="2023-04-18T22:33:12 IST" duration-ms="7742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddSmtpServerTATest(java.lang.reflect.Method)[pri:118, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:33:12 IST" name="validateAddSmtpServerTATest" finished-at="2023-04-18T22:33:57 IST" duration-ms="45175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Add smtp config button clicked]]>
            </line>
            <line>
              <![CDATA[Tested connection successfully]]>
            </line>
            <line>
              <![CDATA[Smtp configured successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:33:57 IST" name="getResult" finished-at="2023-04-18T22:34:00 IST" duration-ms="2906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddSmtpServerTATest status=SUCCESS method=SmtpPageTestTA.validateAddSmtpServerTATest(java.lang.reflect.Method)[pri:118, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:34:00 IST" name="initialization" finished-at="2023-04-18T22:34:09 IST" duration-ms="9615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditSmtpServerTATest(java.lang.reflect.Method)[pri:119, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:34:09 IST" name="validateEditSmtpServerTATest" finished-at="2023-04-18T22:34:33 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest" duration-ms="23439" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateEditSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[SMTP configuration Failed expected [AutomationEdge successfully configured for mail services] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: SMTP configuration Failed expected [AutomationEdge successfully configured for mail services] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.SmtpPageTA.validateEditSmtpServerTA(SmtpPageTA.java:158)
at com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateEditSmtpServerTATest(SmtpPageTestTA.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button clicked]]>
            </line>
            <line>
              <![CDATA[Tested connection successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-18T22:34:33 IST" name="getResult" finished-at="2023-04-18T22:34:35 IST" duration-ms="1782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditSmtpServerTATest status=FAILURE method=SmtpPageTestTA.validateEditSmtpServerTATest(java.lang.reflect.Method)[pri:119, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-19T00:31:45 IST" name="initialization" finished-at="2023-04-19T00:31:52 IST" duration-ms="7139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteSmtpServerTATest(java.lang.reflect.Method)[pri:2500, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-19T00:31:52 IST" name="validateDeleteSmtpServerTATest" finished-at="2023-04-19T00:32:09 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest" duration-ms="16389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateDeleteSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button clicked]]>
            </line>
            <line>
              <![CDATA[Confirmation popup agree for deletion]]>
            </line>
            <line>
              <![CDATA[Smtp Configuration details deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e]" started-at="2023-04-19T00:32:09 IST" name="getResult" finished-at="2023-04-19T00:32:12 IST" duration-ms="2916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteSmtpServerTATest status=SUCCESS method=SmtpPageTestTA.validateDeleteSmtpServerTATest(java.lang.reflect.Method)[pri:2500, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@5b04476e] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:08:32 IST" name="initialization" finished-at="2023-04-18T22:08:41 IST" duration-ms="9296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentLogsTest(java.lang.reflect.Method)[pri:95, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:08:41 IST" name="validateAgentLogsTest" finished-at="2023-04-18T22:09:46 IST" duration-ms="64982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAgentLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[agent Radio button is selected by default]]>
            </line>
            <line>
              <![CDATA[Agent is been selected]]>
            </line>
            <line>
              <![CDATA[Start Date selected]]>
            </line>
            <line>
              <![CDATA[End Date selected]]>
            </line>
            <line>
              <![CDATA[Agent log submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Agent logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Agents log downloaded successfully for Agent kalyani.gomkale@aedbserver]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:09:46 IST" name="getResult" finished-at="2023-04-18T22:09:50 IST" duration-ms="3506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateAgentLogsTest(java.lang.reflect.Method)[pri:95, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:09:50 IST" name="initialization" finished-at="2023-04-18T22:09:59 IST" duration-ms="9414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWorkflowLogsTest(java.lang.reflect.Method)[pri:96, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:09:59 IST" name="validateWorkflowLogsTest" finished-at="2023-04-18T22:10:34 IST" duration-ms="35288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateWorkflowLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[Request Radio Button is selected]]>
            </line>
            <line>
              <![CDATA[Request ID entered.]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Workflow logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Workflow log downloaded successfully for Workflow InstanceID 1]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWorkflowLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T22:10:34 IST" name="getResult" finished-at="2023-04-18T22:10:37 IST" duration-ms="2508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWorkflowLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateWorkflowLogsTest(java.lang.reflect.Method)[pri:96, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T23:14:48 IST" name="initialization" finished-at="2023-04-18T23:14:54 IST" duration-ms="5995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentLogsPageTATest(java.lang.reflect.Method)[pri:184, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T23:14:54 IST" name="validateAgentLogsPageTATest" finished-at="2023-04-18T23:15:13 IST" duration-ms="18628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAgentLogsPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Agent Logs and Expected page title is: Agent Logs]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentLogsPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-18T23:15:13 IST" name="getResult" finished-at="2023-04-18T23:15:14 IST" duration-ms="1423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentLogsPageTATest status=SUCCESS method=AgentLogsPageTestTA.validateAgentLogsPageTATest(java.lang.reflect.Method)[pri:184, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-19T00:28:58 IST" name="initialization" finished-at="2023-04-19T00:29:09 IST" duration-ms="11697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssistedAgentLogsTest(java.lang.reflect.Method)[pri:2008, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-19T00:29:09 IST" name="validateAssistedAgentLogsTest" finished-at="2023-04-19T00:30:15 IST" duration-ms="65411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAssistedAgentLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[agent Radio button is selected by default]]>
            </line>
            <line>
              <![CDATA[Agent is been selected]]>
            </line>
            <line>
              <![CDATA[Start Date selected]]>
            </line>
            <line>
              <![CDATA[End Date selected]]>
            </line>
            <line>
              <![CDATA[Agent log submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Agent logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Agents log downloaded successfully for Agent kalyani.gomkale@aedbserver]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssistedAgentLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466]" started-at="2023-04-19T00:30:15 IST" name="getResult" finished-at="2023-04-19T00:30:22 IST" duration-ms="7077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssistedAgentLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateAssistedAgentLogsTest(java.lang.reflect.Method)[pri:2008, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@485a3466] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:10:37 IST" name="initialization" finished-at="2023-04-18T22:10:46 IST" duration-ms="8734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboardNoneTest(java.lang.reflect.Method)[pri:97, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:10:46 IST" name="validateDashboardNoneTest" finished-at="2023-04-18T22:11:17 IST" duration-ms="31636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration None selected]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at None level created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboardNoneTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:11:17 IST" name="getResult" finished-at="2023-04-18T22:11:20 IST" duration-ms="2948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboardNoneTest status=SUCCESS method=DashboardsPageTestTA.validateDashboardNoneTest(java.lang.reflect.Method)[pri:97, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:18:16 IST" name="initialization" finished-at="2023-04-18T22:18:25 IST" duration-ms="8806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneMultipleWFTest(java.lang.reflect.Method)[pri:104, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:18:25 IST" name="validateReportNoneMultipleWFTest" finished-at="2023-04-18T22:19:30 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest" duration-ms="65781" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Workflow Execution Summary KG] but found [Workflow Execution Summary KG (Time Unit: Seconds)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Workflow Execution Summary KG] but found [Workflow Execution Summary KG (Time Unit: Seconds)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:515)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportNoneMultipleWF(DashboardsPageTA.java:425)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleWFTest(DashboardsPageTestTA.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Second workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportNoneMultipleWFTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:19:30 IST" name="getResult" finished-at="2023-04-18T22:19:41 IST" duration-ms="10674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportNoneMultipleWFTest status=FAILURE method=DashboardsPageTestTA.validateReportNoneMultipleWFTest(java.lang.reflect.Method)[pri:104, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:19:41 IST" name="initialization" finished-at="2023-04-18T22:19:48 IST" duration-ms="6654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboardTodayTest(java.lang.reflect.Method)[pri:105, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:19:48 IST" name="validateDashboardTodayTest" finished-at="2023-04-18T22:21:32 IST" duration-ms="104606" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='Create']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:60488}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a9565498ba780865eacbb95c301232ce
*** Element info: {Using=xpath, value=//button[text()='Create']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='Create']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:60488}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a9565498ba780865eacbb95c301232ce
*** Element info: {Using=xpath, value=//button[text()='Create']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDashboardToday(DashboardsPageTA.java:215)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest(DashboardsPageTestTA.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Today selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboardTodayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:21:32 IST" name="getResult" finished-at="2023-04-18T22:21:36 IST" duration-ms="4155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboardTodayTest status=FAILURE method=DashboardsPageTestTA.validateDashboardTodayTest(java.lang.reflect.Method)[pri:105, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:21:36 IST" name="initialization" finished-at="2023-04-18T22:21:46 IST" duration-ms="9940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportTodayTest(java.lang.reflect.Method)[pri:106, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:21:46 IST" name="validateReportTodayTest" finished-at="2023-04-18T22:22:44 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest" duration-ms="57510" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportTodayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Workflow Executed time Report KG] but found [Workflow Executed time Report KG ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Workflow Executed time Report KG] but found [Workflow Executed time Report KG ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:515)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportToday(DashboardsPageTA.java:533)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportTodayTest(DashboardsPageTestTA.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportTodayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:22:44 IST" name="getResult" finished-at="2023-04-18T22:22:47 IST" duration-ms="3006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportTodayTest status=FAILURE method=DashboardsPageTestTA.validateReportTodayTest(java.lang.reflect.Method)[pri:106, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:22:47 IST" name="initialization" finished-at="2023-04-18T22:22:55 IST" duration-ms="8355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboarRelativeTest(java.lang.reflect.Method)[pri:107, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:22:55 IST" name="validateDashboarRelativeTest" finished-at="2023-04-18T22:23:39 IST" duration-ms="43685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Relative selected]]>
            </line>
            <line>
              <![CDATA[Create Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at None level created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboarRelativeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:23:39 IST" name="getResult" finished-at="2023-04-18T22:23:41 IST" duration-ms="2248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboarRelativeTest status=SUCCESS method=DashboardsPageTestTA.validateDashboarRelativeTest(java.lang.reflect.Method)[pri:107, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:23:41 IST" name="initialization" finished-at="2023-04-18T22:23:49 IST" duration-ms="7864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportRelativeTest(java.lang.reflect.Method)[pri:108, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:23:49 IST" name="validateReportRelativeTest" finished-at="2023-04-18T22:24:46 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest" duration-ms="57413" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportRelativeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Relative ReportKG] but found [Relative ReportKG ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Relative ReportKG] but found [Relative ReportKG ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:515)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportRelative(DashboardsPageTA.java:549)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportRelativeTest(DashboardsPageTestTA.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportRelativeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:24:46 IST" name="getResult" finished-at="2023-04-18T22:24:54 IST" duration-ms="7803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportRelativeTest status=FAILURE method=DashboardsPageTestTA.validateReportRelativeTest(java.lang.reflect.Method)[pri:108, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:24:54 IST" name="initialization" finished-at="2023-04-18T22:25:01 IST" duration-ms="6782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardToCustomTest(java.lang.reflect.Method)[pri:109, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:25:01 IST" name="validateEditDashboardToCustomTest" finished-at="2023-04-18T22:26:08 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest" duration-ms="66780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardToCustomTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Edit report is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Custom selected]]>
            </line>
            <line>
              <![CDATA[Update Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard Saved Successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard Saved Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at Custom level updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardToCustomTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:26:08 IST" name="getResult" finished-at="2023-04-18T22:26:10 IST" duration-ms="2585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardToCustomTest status=SUCCESS method=DashboardsPageTestTA.validateEditDashboardToCustomTest(java.lang.reflect.Method)[pri:109, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:26:10 IST" name="initialization" finished-at="2023-04-18T22:26:17 IST" duration-ms="6918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportCustomTest(java.lang.reflect.Method)[pri:110, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:26:17 IST" name="validateReportCustomTest" finished-at="2023-04-18T22:27:14 IST" duration-ms="57068" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportCustomTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Custom Report KG] but found [Custom Report KG (Time Unit: Minutes)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Custom Report KG] but found [Custom Report KG (Time Unit: Minutes)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportCustom(DashboardsPageTA.java:646)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportCustomTest(DashboardsPageTestTA.java:224)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a Table]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportCustomTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:27:14 IST" name="getResult" finished-at="2023-04-18T22:27:24 IST" duration-ms="9926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportCustomTest status=FAILURE method=DashboardsPageTestTA.validateReportCustomTest(java.lang.reflect.Method)[pri:110, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:27:24 IST" name="initialization" finished-at="2023-04-18T22:27:33 IST" duration-ms="8324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSetAsDefaultReportTest(java.lang.reflect.Method)[pri:111, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:27:33 IST" name="validateSetAsDefaultReportTest" finished-at="2023-04-18T22:27:57 IST" duration-ms="24373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateSetAsDefaultReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Set as Default option clicked]]>
            </line>
            <line>
              <![CDATA[Report set as a default successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSetAsDefaultReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:27:57 IST" name="getResult" finished-at="2023-04-18T22:28:00 IST" duration-ms="2903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSetAsDefaultReportTest status=SUCCESS method=DashboardsPageTestTA.validateSetAsDefaultReportTest(java.lang.reflect.Method)[pri:111, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:28:00 IST" name="initialization" finished-at="2023-04-18T22:28:09 IST" duration-ms="8946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePinToHomeTest(java.lang.reflect.Method)[pri:112, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:28:09 IST" name="validatePinToHomeTest" finished-at="2023-04-18T22:28:30 IST" duration-ms="21495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validatePinToHomeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Pin to Home option clicked]]>
            </line>
            <line>
              <![CDATA[After Pin to Home actual message get is: Dashboard [DashboardCustom] set as home dashboard]]>
            </line>
            <line>
              <![CDATA[Report set as a default successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePinToHomeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:28:30 IST" name="getResult" finished-at="2023-04-18T22:28:34 IST" duration-ms="3587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePinToHomeTest status=SUCCESS method=DashboardsPageTestTA.validatePinToHomeTest(java.lang.reflect.Method)[pri:112, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:28:34 IST" name="initialization" finished-at="2023-04-18T22:28:41 IST" duration-ms="7483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMakePublicTest(java.lang.reflect.Method)[pri:113, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:28:41 IST" name="validateMakePublicTest" finished-at="2023-04-18T22:29:03 IST" duration-ms="21834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateMakePublicTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Make Public option clicked]]>
            </line>
            <line>
              <![CDATA[After making dashboard public actual message get is: Dashboard [DashboardCustom], Access Level set to Public]]>
            </line>
            <line>
              <![CDATA[Dashboard made as public successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMakePublicTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:29:03 IST" name="getResult" finished-at="2023-04-18T22:29:25 IST" duration-ms="21964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMakePublicTest status=SUCCESS method=DashboardsPageTestTA.validateMakePublicTest(java.lang.reflect.Method)[pri:113, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:29:25 IST" name="initialization" finished-at="2023-04-18T22:29:34 IST" duration-ms="8707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteDashboardWithReportTest(java.lang.reflect.Method)[pri:114, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:29:34 IST" name="validateDeleteDashboardWithReportTest" finished-at="2023-04-18T22:29:59 IST" duration-ms="25292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Delete Dashboard option clicked]]>
            </line>
            <line>
              <![CDATA[Delete button clicked on popup]]>
            </line>
            <line>
              <![CDATA[After deleting dashboard with report, actual message get is: Dashboard Deleted successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard with report deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteDashboardWithReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:29:59 IST" name="getResult" finished-at="2023-04-18T22:30:08 IST" duration-ms="9206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDashboardWithReportTest status=SUCCESS method=DashboardsPageTestTA.validateDeleteDashboardWithReportTest(java.lang.reflect.Method)[pri:114, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:30:08 IST" name="initialization" finished-at="2023-04-18T22:30:17 IST" duration-ms="8205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method)[pri:115, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:30:17 IST" name="validateDeleteDashboardWithoutReportTest" finished-at="2023-04-18T22:30:48 IST" duration-ms="31400" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard not created expected [Dashboard created successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard not created expected [Dashboard created successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDeleteDashboardWithoutReport(DashboardsPageTA.java:758)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(DashboardsPageTestTA.java:270)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration None selected]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteDashboardWithoutReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T22:30:48 IST" name="getResult" finished-at="2023-04-18T22:30:50 IST" duration-ms="1931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDashboardWithoutReportTest status=FAILURE method=DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method)[pri:115, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:22:50 IST" name="initialization" finished-at="2023-04-18T23:22:56 IST" duration-ms="6606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLabelChangeInReportTest(java.lang.reflect.Method)[pri:320, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:22:56 IST" name="ValidateLabelChangeInReportTest" finished-at="2023-04-18T23:24:08 IST" duration-ms="71578" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateLabelChangeInReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Maximize']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50931}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1fc84e4988ef3be38aaf9bd9d5814eb9
*** Element info: {Using=xpath, value=//div[@title='Maximize']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Maximize']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50931}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1fc84e4988ef3be38aaf9bd9d5814eb9
*** Element info: {Using=xpath, value=//div[@title='Maximize']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateLabelChangeInReport(DashboardsPageTA.java:796)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateLabelChangeInReportTest(DashboardsPageTestTA.java:280)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateLabelChangeInReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:24:08 IST" name="getResult" finished-at="2023-04-18T23:24:11 IST" duration-ms="3137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLabelChangeInReportTest status=FAILURE method=DashboardsPageTestTA.ValidateLabelChangeInReportTest(java.lang.reflect.Method)[pri:320, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:24:11 IST" name="initialization" finished-at="2023-04-18T23:24:18 IST" duration-ms="6926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDownloadReportPdfTest(java.lang.reflect.Method)[pri:321, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:24:18 IST" name="ValidateDownloadReportPdfTest" finished-at="2023-04-18T23:25:29 IST" duration-ms="70652" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateDownloadReportPdfTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using xpath=//div[@title='Download as PDF']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=//div[@title='Download as PDF']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDownloadReportPdf(DashboardsPageTA.java:837)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateDownloadReportPdfTest(DashboardsPageTestTA.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDownloadReportPdfTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:25:29 IST" name="getResult" finished-at="2023-04-18T23:25:29 IST" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDownloadReportPdfTest status=FAILURE method=DashboardsPageTestTA.ValidateDownloadReportPdfTest(java.lang.reflect.Method)[pri:321, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:25:29 IST" name="initialization" finished-at="2023-04-18T23:25:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateColumnHideTest(java.lang.reflect.Method)[pri:336, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:25:29 IST" name="validateColumnHideTest" finished-at="2023-04-18T23:25:29 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateColumnHideTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateColumnHideTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:25:29 IST" name="getResult" finished-at="2023-04-18T23:25:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFullScreenModeTest(java.lang.reflect.Method)[pri:590, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:27:36 IST" name="validateFullScreenModeTest" finished-at="2023-04-18T23:27:36 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateFullScreenModeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFullScreenModeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:27:36 IST" name="getResult" finished-at="2023-04-18T23:27:36 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:27:36 IST" name="initialization" finished-at="2023-04-18T23:27:36 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneSingleWFTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:41:29 IST" name="validateReportNoneSingleWFTest" finished-at="2023-04-18T23:41:29 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReportNoneSingleWFTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:41:29 IST" name="initialization" finished-at="2023-04-18T23:41:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:41:29 IST" name="getResult" finished-at="2023-04-18T23:41:29 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReportNoneSingleCategoryTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:42:11 IST" name="validateReportNoneSingleCategoryTest" finished-at="2023-04-18T23:42:11 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReportNoneSingleCategoryTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:42:11 IST" name="initialization" finished-at="2023-04-18T23:42:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:42:11 IST" name="getResult" finished-at="2023-04-18T23:42:11 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReportNoneMultipleCategoryTest(java.lang.reflect.Method)[pri:1003, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="validateReportNoneMultipleCategoryTest" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReportNoneMultipleCategoryTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="initialization" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationHourTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="validateEditDashboardRelativeDurationHourTest" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationHourTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationHourTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="getResult" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="getResult" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:44:00 IST" name="initialization" finished-at="2023-04-18T23:44:00 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRelativeReportDurationHourTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="validateRelativeReportDurationHourTest" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationHourTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationHourTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="initialization" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="getResult" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="initialization" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationDayTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="validateEditDashboardRelativeDurationDayTest" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:45:13 IST" name="getResult" finished-at="2023-04-18T23:45:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:47:43 IST" name="initialization" finished-at="2023-04-18T23:47:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRelativeReportDurationDayTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:47:43 IST" name="validateRelativeReportDurationDayTest" finished-at="2023-04-18T23:47:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:47:43 IST" name="getResult" finished-at="2023-04-18T23:47:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateEditDashboardRelativeDurationMonthTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:48:22 IST" name="validateEditDashboardRelativeDurationMonthTest" finished-at="2023-04-18T23:48:22 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationMonthTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationMonthTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:48:22 IST" name="initialization" finished-at="2023-04-18T23:48:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:48:22 IST" name="getResult" finished-at="2023-04-18T23:48:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateRelativeReportDurationMonthTest(java.lang.reflect.Method)[pri:1009, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="validateRelativeReportDurationMonthTest" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationMonthTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationMonthTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="initialization" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="getResult" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateEditDashboardRelativeDurationYearTest(java.lang.reflect.Method)[pri:1010, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="validateEditDashboardRelativeDurationYearTest" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationYearTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64897}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7893cc9f0378f71eba8043feff0eb4ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationYearTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="initialization" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@25748410]" started-at="2023-04-18T23:49:22 IST" name="getResult" finished-at="2023-04-18T23:49:22 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA -->
      <class name="com.ae.qa.testcases.IntegrationServicePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:53:30 IST" name="initialization" finished-at="2023-04-18T22:53:37 IST" duration-ms="6763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationServicesTest(java.lang.reflect.Method)[pri:138, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:53:37 IST" name="validateAddIntegrationServicesTest" finished-at="2023-04-18T22:54:42 IST" duration-ms="65204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateAddIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: LPT-0919]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: KalyaniG]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 10.81.24.109]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 5901]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Expected details of Integration service in table are: [LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Integration service details verified in table]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:54:42 IST" name="getResult" finished-at="2023-04-18T22:54:48 IST" duration-ms="6472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateAddIntegrationServicesTest(java.lang.reflect.Method)[pri:138, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:54:48 IST" name="initialization" finished-at="2023-04-18T22:54:56 IST" duration-ms="7467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationServicesTest(java.lang.reflect.Method)[pri:139, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:54:56 IST" name="validateEditIntegrationServicesTest" finished-at="2023-04-18T22:55:26 IST" duration-ms="30064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateEditIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button clicked, Service with IntService1 name is editing]]>
            </line>
            <line>
              <![CDATA[UserName is edited]]>
            </line>
            <line>
              <![CDATA[Update Button is clicked, now validate the change in table]]>
            </line>
            <line>
              <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
            </line>
            <line>
              <![CDATA[Integration service edited successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:55:26 IST" name="getResult" finished-at="2023-04-18T22:55:29 IST" duration-ms="2863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateEditIntegrationServicesTest(java.lang.reflect.Method)[pri:139, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:55:29 IST" name="initialization" finished-at="2023-04-18T22:55:37 IST" duration-ms="8086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadIntegrationServicesTest(java.lang.reflect.Method)[pri:140, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:55:37 IST" name="validateDownloadIntegrationServicesTest" finished-at="2023-04-18T22:56:00 IST" duration-ms="23201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateDownloadIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Download button clicked and downloading integrtration service started]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:56:00 IST" name="getResult" finished-at="2023-04-18T22:56:02 IST" duration-ms="1944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateDownloadIntegrationServicesTest(java.lang.reflect.Method)[pri:140, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:56:02 IST" name="initialization" finished-at="2023-04-18T22:56:09 IST" duration-ms="6811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEnableIntForMultipleTATest(java.lang.reflect.Method)[pri:141, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:56:09 IST" name="validateEnableIntForMultipleTATest" finished-at="2023-04-18T22:56:24 IST" duration-ms="15510" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateEnableIntForMultipleTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Integration service not enabled for multiple Tenant. expected [Operation completed successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Integration service not enabled for multiple Tenant. expected [Operation completed successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pages.IntegrationServicesPage.validateEnableIntForMultipleTA(IntegrationServicesPage.java:220)
at com.ae.qa.testcases.IntegrationServicePageTest.validateEnableIntForMultipleTATest(IntegrationServicePageTest.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Enable button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration service enable for Tenant1: KG01 and allowed number of configuration is: 2]]>
            </line>
            <line>
              <![CDATA[Integration service enable for Tenant2: KG02 and allowed number of configuration is: 1]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEnableIntForMultipleTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T22:56:24 IST" name="getResult" finished-at="2023-04-18T22:56:30 IST" duration-ms="5703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEnableIntForMultipleTATest status=FAILURE method=IntegrationServicePageTest.validateEnableIntForMultipleTATest(java.lang.reflect.Method)[pri:141, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:09:33 IST" name="initialization" finished-at="2023-04-18T23:09:41 IST" duration-ms="8112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationServicesPageTest(java.lang.reflect.Method)[pri:162, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:09:41 IST" name="validateIntegrationServicesPageTest" finished-at="2023-04-18T23:10:05 IST" duration-ms="24303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateIntegrationServicesPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationServicesPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:10:05 IST" name="getResult" finished-at="2023-04-18T23:10:07 IST" duration-ms="1387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationServicesPageTest status=SUCCESS method=IntegrationServicePageTest.validateIntegrationServicesPageTest(java.lang.reflect.Method)[pri:162, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:49:22 IST" name="initialization" finished-at="2023-04-18T23:49:31 IST" duration-ms="8981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationServiceStatusTest(java.lang.reflect.Method)[pri:1011, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:49:31 IST" name="validateIntegrationServiceStatusTest" finished-at="2023-04-18T23:49:58 IST" duration-ms="26663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateIntegrationServiceStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Status of Integration service: Stopped and Expected Status of Integration service: table: Stopped]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationServiceStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8]" started-at="2023-04-18T23:49:58 IST" name="getResult" finished-at="2023-04-18T23:50:00 IST" duration-ms="2464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationServiceStatusTest status=SUCCESS method=IntegrationServicePageTest.validateIntegrationServiceStatusTest(java.lang.reflect.Method)[pri:1011, instance:com.ae.qa.testcases.IntegrationServicePageTest@4a335fa8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.IntegrationServicePageTest -->
      <class name="com.ae.qa.testcases.PurgeSchedulePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:19:00 IST" name="initialization" finished-at="2023-04-18T21:19:07 IST" duration-ms="6607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgingScheduleDayTest(java.lang.reflect.Method)[pri:36, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:19:07 IST" name="validatePurgingScheduleDayTest" finished-at="2023-04-18T21:19:52 IST" duration-ms="45684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Add button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule created for day of Month]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgingScheduleDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:19:52 IST" name="getResult" finished-at="2023-04-18T21:19:56 IST" duration-ms="3239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgingScheduleDayTest status=SUCCESS method=PurgeSchedulePageTest.validatePurgingScheduleDayTest(java.lang.reflect.Method)[pri:36, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:19:56 IST" name="initialization" finished-at="2023-04-18T21:20:04 IST" duration-ms="8107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgingScheduleWeekendTest(java.lang.reflect.Method)[pri:37, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:20:04 IST" name="validatePurgingScheduleWeekendTest" finished-at="2023-04-18T21:20:30 IST" duration-ms="26601" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Schedule not created for day of week expected [Schedule created successfully] but found [Next fire time is too close to update/create time, skipping it. Setting the Next fire time as [Tue, 30-May-2023 20:30 PM IST]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Schedule not created for day of week expected [Schedule created successfully] but found [Next fire time is too close to update/create time, skipping it. Setting the Next fire time as [Tue, 30-May-2023 20:30 PM IST]]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pages.PurgeSchedulePage.validatePurgingScheduleWeekend(PurgeSchedulePage.java:158)
at com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(PurgeSchedulePageTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgingScheduleWeekendTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T21:20:30 IST" name="getResult" finished-at="2023-04-18T21:20:39 IST" duration-ms="8110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgingScheduleWeekendTest status=FAILURE method=PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(java.lang.reflect.Method)[pri:37, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T23:08:56 IST" name="initialization" finished-at="2023-04-18T23:09:04 IST" duration-ms="8169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgeSchedulePageTest(java.lang.reflect.Method)[pri:161, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T23:09:04 IST" name="validatePurgeSchedulePageTest" finished-at="2023-04-18T23:09:31 IST" duration-ms="27433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgeSchedulePageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgeSchedulePageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b]" started-at="2023-04-18T23:09:31 IST" name="getResult" finished-at="2023-04-18T23:09:33 IST" duration-ms="1622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgeSchedulePageTest status=SUCCESS method=PurgeSchedulePageTest.validatePurgeSchedulePageTest(java.lang.reflect.Method)[pri:161, instance:com.ae.qa.testcases.PurgeSchedulePageTest@4c37b5b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PurgeSchedulePageTest -->
      <class name="com.ae.qa.testcases.SecurityQuestionsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:02:07 IST" name="initialization" finished-at="2023-04-18T21:02:20 IST" duration-ms="13486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSkipQuesTest(java.lang.reflect.Method)[pri:21, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:02:20 IST" name="validateSkipQuesTest" finished-at="2023-04-18T21:02:44 IST" duration-ms="24048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSkipQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User skipped the set security question and navigated to Tenants Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSkipQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:02:44 IST" name="getResult" finished-at="2023-04-18T21:03:00 IST" duration-ms="15493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSkipQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSkipQuesTest(java.lang.reflect.Method)[pri:21, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:03:00 IST" name="initialization" finished-at="2023-04-18T21:03:09 IST" duration-ms="9241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSecurityQuesTest(java.lang.reflect.Method)[pri:22, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:03:09 IST" name="validateSecurityQuesTest" finished-at="2023-04-18T21:03:48 IST" duration-ms="38580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSecurityQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSecurityQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:03:48 IST" name="getResult" finished-at="2023-04-18T21:04:02 IST" duration-ms="14442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecurityQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSecurityQuesTest(java.lang.reflect.Method)[pri:22, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:04:02 IST" name="initialization" finished-at="2023-04-18T21:04:10 IST" duration-ms="8026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method)[pri:23, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:04:10 IST" name="validateUpdatingSecQuesWithWrongPswdTest" finished-at="2023-04-18T21:04:47 IST" duration-ms="37014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions can not be updated due to wrong password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatingSecQuesWithWrongPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:04:47 IST" name="getResult" finished-at="2023-04-18T21:04:49 IST" duration-ms="2241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatingSecQuesWithWrongPswdTest status=SUCCESS method=SecurityQuestionsPageTest.validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method)[pri:23, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:04:49 IST" name="initialization" finished-at="2023-04-18T21:04:57 IST" duration-ms="7784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatingSecurityQuesTest(java.lang.reflect.Method)[pri:24, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:04:57 IST" name="validateUpdatingSecurityQuesTest" finished-at="2023-04-18T21:05:31 IST" duration-ms="33897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateUpdatingSecurityQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions updated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatingSecurityQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:05:31 IST" name="getResult" finished-at="2023-04-18T21:05:40 IST" duration-ms="8977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatingSecurityQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateUpdatingSecurityQuesTest(java.lang.reflect.Method)[pri:24, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:05:40 IST" name="initialization" finished-at="2023-04-18T21:05:47 IST" duration-ms="7266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSkipThenSetQuesTest(java.lang.reflect.Method)[pri:25, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:05:47 IST" name="validateSkipThenSetQuesTest" finished-at="2023-04-18T21:06:37 IST" duration-ms="49105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSkipThenSetQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User first skip the security question and then set security questions successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSkipThenSetQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T21:06:37 IST" name="getResult" finished-at="2023-04-18T21:06:40 IST" duration-ms="3608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSkipThenSetQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSkipThenSetQuesTest(java.lang.reflect.Method)[pri:25, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T23:13:10 IST" name="initialization" finished-at="2023-04-18T23:13:17 IST" duration-ms="6975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSecurityQuestionsPageTest(java.lang.reflect.Method)[pri:168, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T23:13:17 IST" name="validateSecurityQuestionsPageTest" finished-at="2023-04-18T23:13:41 IST" duration-ms="24568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSecurityQuestionsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Reset Security Questions and Expected page title is: Reset Security Questions]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSecurityQuestionsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1]" started-at="2023-04-18T23:13:41 IST" name="getResult" finished-at="2023-04-18T23:13:48 IST" duration-ms="6270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecurityQuestionsPageTest status=SUCCESS method=SecurityQuestionsPageTest.validateSecurityQuestionsPageTest(java.lang.reflect.Method)[pri:168, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@4e28bdd1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SecurityQuestionsPageTest -->
      <class name="com.ae.qa.testcases.SysadminPolicyPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:06:40 IST" name="initialization" finished-at="2023-04-18T21:06:47 IST" duration-ms="6744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePswdComplexityTest(java.lang.reflect.Method)[pri:26, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:06:47 IST" name="validatePswdComplexityTest" finished-at="2023-04-18T21:07:28 IST" duration-ms="41058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validatePswdComplexityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePswdComplexityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:07:28 IST" name="getResult" finished-at="2023-04-18T21:07:31 IST" duration-ms="2978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePswdComplexityTest status=SUCCESS method=SysadminPolicyPageTest.validatePswdComplexityTest(java.lang.reflect.Method)[pri:26, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:07:31 IST" name="initialization" finished-at="2023-04-18T21:07:37 IST" duration-ms="6129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordHistoryTest(java.lang.reflect.Method)[pri:27, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:07:37 IST" name="validatePasswordHistoryTest" finished-at="2023-04-18T21:09:28 IST" duration-ms="110835" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validatePasswordHistoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[Password policy updated]]>
            </line>
            <line>
              <![CDATA[Password History of sysadmin validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordHistoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:09:28 IST" name="getResult" finished-at="2023-04-18T21:09:38 IST" duration-ms="10247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordHistoryTest status=SUCCESS method=SysadminPolicyPageTest.validatePasswordHistoryTest(java.lang.reflect.Method)[pri:27, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:09:38 IST" name="initialization" finished-at="2023-04-18T21:09:45 IST" duration-ms="7086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateNoOfAttemptsTest(java.lang.reflect.Method)[pri:28, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:09:45 IST" name="validateNoOfAttemptsTest" finished-at="2023-04-18T21:12:41 IST" duration-ms="176146" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validateNoOfAttemptsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Your account is inaccessible . Please contact your Administrator.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Your account is inaccessible . Please contact your Administrator.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.ae.qa.pages.SysadminPolicyPage.validateNoOfAttempts(SysadminPolicyPage.java:375)
at com.ae.qa.testcases.SysadminPolicyPageTest.validateNoOfAttemptsTest(SysadminPolicyPageTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions set successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Sysadmin Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateNoOfAttemptsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T21:12:41 IST" name="getResult" finished-at="2023-04-18T21:12:44 IST" duration-ms="2765" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNoOfAttemptsTest status=FAILURE method=SysadminPolicyPageTest.validateNoOfAttemptsTest(java.lang.reflect.Method)[pri:28, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T23:12:25 IST" name="initialization" finished-at="2023-04-18T23:12:32 IST" duration-ms="6403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSysadminPolicyPageTest(java.lang.reflect.Method)[pri:167, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T23:12:32 IST" name="validateSysadminPolicyPageTest" finished-at="2023-04-18T23:12:58 IST" duration-ms="26534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validateSysadminPolicyPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Sysadmin Policy and Expected page title is: Sysadmin Policy]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSysadminPolicyPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368]" started-at="2023-04-18T23:12:58 IST" name="getResult" finished-at="2023-04-18T23:13:10 IST" duration-ms="11529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSysadminPolicyPageTest status=SUCCESS method=SysadminPolicyPageTest.validateSysadminPolicyPageTest(java.lang.reflect.Method)[pri:167, instance:com.ae.qa.testcases.SysadminPolicyPageTest@53f48368] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SysadminPolicyPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T21:50:58 IST" name="initialization" finished-at="2023-04-18T21:51:06 IST" duration-ms="7895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestTest(java.lang.reflect.Method)[pri:73, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T21:51:06 IST" name="validateSubmitRequestTest" finished-at="2023-04-18T21:51:28 IST" duration-ms="21824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T21:51:28 IST" name="getResult" finished-at="2023-04-18T21:51:30 IST" duration-ms="2300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestTest(java.lang.reflect.Method)[pri:73, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:52:00 IST" name="initialization" finished-at="2023-04-18T23:52:08 IST" duration-ms="8506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method)[pri:1024, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:52:08 IST" name="validateSubmitRequestDefaultCategoryTest" finished-at="2023-04-18T23:53:53 IST" duration-ms="104323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Category:-Default]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestDefaultCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:53:53 IST" name="getResult" finished-at="2023-04-18T23:53:55 IST" duration-ms="1990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestDefaultCategoryTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method)[pri:1024, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:53:55 IST" name="initialization" finished-at="2023-04-18T23:54:02 IST" duration-ms="6987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method)[pri:1025, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:54:02 IST" name="validateSubmitRequestCustomCategoryTest" finished-at="2023-04-18T23:54:26 IST" duration-ms="24079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Category:-WebGUI]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestCustomCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7]" started-at="2023-04-18T23:54:26 IST" name="getResult" finished-at="2023-04-18T23:54:27 IST" duration-ms="848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestCustomCategoryTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method)[pri:1025, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@546ccad7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:34:17 IST" name="initialization" finished-at="2023-04-18T21:34:25 IST" duration-ms="7781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowTest(java.lang.reflect.Method)[pri:54, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:34:25 IST" name="validateImportWorkflowTest" finished-at="2023-04-18T21:35:17 IST" duration-ms="52759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Alert Message when user dont configure smtpEmail server not configured for the tenant. Email notification cannot be enabled]]>
            </line>
            <line>
              <![CDATA[Getting correct message for email notification as smtp not configured]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:17 IST" name="getResult" finished-at="2023-04-18T21:35:19 IST" duration-ms="1304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowTest(java.lang.reflect.Method)[pri:54, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:19 IST" name="initialization" finished-at="2023-04-18T21:35:24 IST" duration-ms="4907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUploadInvalidIconTest(java.lang.reflect.Method)[pri:55, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:24 IST" name="ValidateUploadInvalidIconTest" finished-at="2023-04-18T21:35:45 IST" duration-ms="20995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUploadInvalidIconTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Icon Updation done successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUploadInvalidIconTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:45 IST" name="getResult" finished-at="2023-04-18T21:35:46 IST" duration-ms="1116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUploadInvalidIconTest status=SUCCESS method=WorkflowListPageTestTA.ValidateUploadInvalidIconTest(java.lang.reflect.Method)[pri:55, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:46 IST" name="initialization" finished-at="2023-04-18T21:35:52 IST" duration-ms="6452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUploadIconTest(java.lang.reflect.Method)[pri:56, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:35:52 IST" name="ValidateUploadIconTest" finished-at="2023-04-18T21:36:16 IST" duration-ms="24052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUploadIconTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Icon Updation done successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUploadIconTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:36:16 IST" name="getResult" finished-at="2023-04-18T21:36:18 IST" duration-ms="1437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUploadIconTest status=SUCCESS method=WorkflowListPageTestTA.ValidateUploadIconTest(java.lang.reflect.Method)[pri:56, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:36:18 IST" name="initialization" finished-at="2023-04-18T21:36:23 IST" duration-ms="5513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditManualExecutionTest(java.lang.reflect.Method)[pri:57, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:36:23 IST" name="ValidateEditManualExecutionTest" finished-at="2023-04-18T21:36:55 IST" duration-ms="31740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateEditManualExecutionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is Clicked]]>
            </line>
            <line>
              <![CDATA[Aactual Success Message after editing workflow: Workflow updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Message after editing workflow: Workflow updated successfully]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditManualExecutionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:36:55 IST" name="getResult" finished-at="2023-04-18T21:36:57 IST" duration-ms="1582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditManualExecutionTest status=SUCCESS method=WorkflowListPageTestTA.ValidateEditManualExecutionTest(java.lang.reflect.Method)[pri:57, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:36:57 IST" name="initialization" finished-at="2023-04-18T21:37:03 IST" duration-ms="6647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateExportWorkflowTest(java.lang.reflect.Method)[pri:58, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:37:03 IST" name="ValidateExportWorkflowTest" finished-at="2023-04-18T21:37:33 IST" duration-ms="29698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateExportWorkflowTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateExportWorkflowTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T21:37:33 IST" name="getResult" finished-at="2023-04-18T21:37:35 IST" duration-ms="2492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateExportWorkflowTest status=SUCCESS method=WorkflowListPageTestTA.ValidateExportWorkflowTest(java.lang.reflect.Method)[pri:58, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:11:20 IST" name="initialization" finished-at="2023-04-18T22:11:28 IST" duration-ms="7825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method)[pri:98, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:11:28 IST" name="validateImportWorkflowWithConfigParamTest" finished-at="2023-04-18T22:12:24 IST" duration-ms="56252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:12:24 IST" name="getResult" finished-at="2023-04-18T22:12:27 IST" duration-ms="3221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method)[pri:98, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:12:27 IST" name="initialization" finished-at="2023-04-18T22:12:36 IST" duration-ms="8653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method)[pri:99, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:12:36 IST" name="validateImportWorkflowWithRuntimeParamTest" finished-at="2023-04-18T22:13:26 IST" duration-ms="50272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithRuntimeParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:13:26 IST" name="getResult" finished-at="2023-04-18T22:13:30 IST" duration-ms="3754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithRuntimeParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method)[pri:99, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:13:30 IST" name="initialization" finished-at="2023-04-18T22:13:41 IST" duration-ms="10700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method)[pri:100, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:13:41 IST" name="validateImportWorkflowWithConfigRuntimeParamTest" finished-at="2023-04-18T22:14:37 IST" duration-ms="56180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigRuntimeParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:14:37 IST" name="getResult" finished-at="2023-04-18T22:14:41 IST" duration-ms="3632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigRuntimeParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method)[pri:100, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:14:41 IST" name="initialization" finished-at="2023-04-18T22:14:50 IST" duration-ms="9432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method)[pri:101, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:14:50 IST" name="validateImportWorkflowWithCredConfigParamTest" finished-at="2023-04-18T22:15:51 IST" duration-ms="61339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithCredConfigParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:15:51 IST" name="getResult" finished-at="2023-04-18T22:15:54 IST" duration-ms="2643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithCredConfigParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method)[pri:101, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:15:54 IST" name="initialization" finished-at="2023-04-18T22:16:02 IST" duration-ms="7664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateShowFileStructureTest(java.lang.reflect.Method)[pri:102, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:16:02 IST" name="ValidateShowFileStructureTest" finished-at="2023-04-18T22:16:30 IST" duration-ms="28511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateShowFileStructureTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Zip File found in File Structure:Boolean.zip]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateShowFileStructureTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:16:30 IST" name="getResult" finished-at="2023-04-18T22:16:36 IST" duration-ms="5423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateShowFileStructureTest status=SUCCESS method=WorkflowListPageTestTA.ValidateShowFileStructureTest(java.lang.reflect.Method)[pri:102, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:16:36 IST" name="initialization" finished-at="2023-04-18T22:16:47 IST" duration-ms="11141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method)[pri:103, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:16:47 IST" name="ValidateUpdateWFWithConfigWFTest" finished-at="2023-04-18T22:18:02 IST" duration-ms="74813" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62082}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d53571bd830fd15f40c5297e3120b0e
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62082}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d53571bd830fd15f40c5297e3120b0e
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.ValidateUpdateWFWithConfigWF(WorkflowListPageTA.java:605)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUpdateWFWithConfigWFTest(WorkflowListPageTestTA.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Update option from dropdown]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUpdateWFWithConfigWFTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T22:18:02 IST" name="getResult" finished-at="2023-04-18T22:18:16 IST" duration-ms="14161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUpdateWFWithConfigWFTest status=FAILURE method=WorkflowListPageTestTA.ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method)[pri:103, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T23:20:51 IST" name="initialization" finished-at="2023-04-18T23:20:58 IST" duration-ms="6656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method)[pri:305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T23:20:58 IST" name="validateImportWorkflowWithConfigParamCredAndCredpoolTATest" finished-at="2023-04-18T23:22:47 IST" duration-ms="109068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for KG_Private2 credential found in table]]>
            </line>
            <line>
              <![CDATA[Credentials created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Configuration Parameters dropdown is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked on Credentials Radio Button]]>
            </line>
            <line>
              <![CDATA[Clicked on Credentials Pool Radio Button]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigParamCredAndCredpoolTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-18T23:22:47 IST" name="getResult" finished-at="2023-04-18T23:22:50 IST" duration-ms="2702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigParamCredAndCredpoolTATest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method)[pri:305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:18:36 IST" name="initialization" finished-at="2023-04-19T00:18:41 IST" duration-ms="5547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWFtoSequentialTest(java.lang.reflect.Method)[pri:1051, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:18:41 IST" name="validateEditWFtoSequentialTest" finished-at="2023-04-19T00:19:50 IST" duration-ms="68453" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateEditWFtoSequentialTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
at com.ae.qa.util.CommonWebElements.changePageSize(CommonWebElements.java:65)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateEditWFtoSequential(WorkflowListPageTA.java:1260)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateEditWFtoSequentialTest(WorkflowListPageTestTA.java:264)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWFtoSequentialTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:19:50 IST" name="getResult" finished-at="2023-04-19T00:19:52 IST" duration-ms="2174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWFtoSequentialTest status=FAILURE method=WorkflowListPageTestTA.validateEditWFtoSequentialTest(java.lang.reflect.Method)[pri:1051, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:27:40 IST" name="initialization" finished-at="2023-04-19T00:27:45 IST" duration-ms="5640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWFAssistedAgent(java.lang.reflect.Method)[pri:2006, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:27:45 IST" name="validateImportWFAssistedAgent" finished-at="2023-04-19T00:28:57 IST" duration-ms="72011" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWFAssistedAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using id=popup-button-ok
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using id=popup-button-ok
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.CataloguePageTA.validateSubmitRequest(CataloguePageTA.java:95)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateImportWFAssistedAgent(WorkflowListPageTA.java:788)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWFAssistedAgent(WorkflowListPageTestTA.java:168)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[assisted Workflow is selected]]>
            </line>
            <line>
              <![CDATA[assisted Workflow is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWFAssistedAgent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123]" started-at="2023-04-19T00:28:57 IST" name="getResult" finished-at="2023-04-19T00:28:57 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWFAssistedAgent status=FAILURE method=WorkflowListPageTestTA.validateImportWFAssistedAgent(java.lang.reflect.Method)[pri:2006, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@3c435123] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:57847}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 62350e6ac7cc42b739c35ef58f096dcf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:57847}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 62350e6ac7cc42b739c35ef58f096dcf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA -->
      <class name="com.ae.qa.testcases.PluginAssignmentsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:43:02 IST" name="initialization" finished-at="2023-04-18T22:43:08 IST" duration-ms="6260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignPluginSingleTenantTest(java.lang.reflect.Method)[pri:129, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:43:08 IST" name="validateAssignPluginSingleTenantTest" finished-at="2023-04-18T22:44:27 IST" duration-ms="79017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignPluginSingleTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[Tenant is created successfully, now assign specific plugin to that tenant]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin assigned to single tenant]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignPluginSingleTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:44:27 IST" name="getResult" finished-at="2023-04-18T22:44:32 IST" duration-ms="4154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignPluginSingleTenantTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignPluginSingleTenantTest(java.lang.reflect.Method)[pri:129, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:44:32 IST" name="initialization" finished-at="2023-04-18T22:44:38 IST" duration-ms="6359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignTenantSinglePluginTest(java.lang.reflect.Method)[pri:130, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:44:38 IST" name="validateAssignTenantSinglePluginTest" finished-at="2023-04-18T22:45:21 IST" duration-ms="43288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignTenantSinglePluginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single plugin assigned to desired tenant]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignTenantSinglePluginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:45:21 IST" name="getResult" finished-at="2023-04-18T22:45:23 IST" duration-ms="1974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignTenantSinglePluginTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignTenantSinglePluginTest(java.lang.reflect.Method)[pri:130, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:45:23 IST" name="initialization" finished-at="2023-04-18T22:45:31 IST" duration-ms="7367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignPluginAllTenantTest(java.lang.reflect.Method)[pri:131, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:45:31 IST" name="validateAssignPluginAllTenantTest" finished-at="2023-04-18T22:46:34 IST" duration-ms="63882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignPluginAllTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
            <line>
              <![CDATA[New plugin jar is uploaded now we will assign it to all tenants]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin assigned to all tenant successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignPluginAllTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T22:46:34 IST" name="getResult" finished-at="2023-04-18T22:46:39 IST" duration-ms="4812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignPluginAllTenantTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignPluginAllTenantTest(java.lang.reflect.Method)[pri:131, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:07:32 IST" name="initialization" finished-at="2023-04-18T23:07:39 IST" duration-ms="7622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePluginAssignmentsPageTest(java.lang.reflect.Method)[pri:159, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:07:39 IST" name="validatePluginAssignmentsPageTest" finished-at="2023-04-18T23:07:55 IST" duration-ms="15573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validatePluginAssignmentsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Plugin Assignments and Expected page title is: Plugin Assignments]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePluginAssignmentsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:07:55 IST" name="getResult" finished-at="2023-04-18T23:08:18 IST" duration-ms="23240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePluginAssignmentsPageTest status=SUCCESS method=PluginAssignmentsPageTest.validatePluginAssignmentsPageTest(java.lang.reflect.Method)[pri:159, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:45:13 IST" name="initialization" finished-at="2023-04-18T23:45:20 IST" duration-ms="6722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:45:20 IST" name="validateWFInActiveAfterSysadminRemovesPluginPermissionTest" finished-at="2023-04-18T23:47:41 IST" duration-ms="140874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin Tab is Selected]]>
            </line>
            <line>
              <![CDATA[Plugin Assignment tab is Selected]]>
            </line>
            <line>
              <![CDATA[Save Button is Clicked]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[HexColor of WF Slider:-#ced4da]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFInActiveAfterSysadminRemovesPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:47:41 IST" name="getResult" finished-at="2023-04-18T23:47:43 IST" duration-ms="2519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFInActiveAfterSysadminRemovesPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:47:43 IST" name="initialization" finished-at="2023-04-18T23:47:51 IST" duration-ms="7109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:47:51 IST" name="validateWFFailureAfterSysadminRemovesPluginPermissionTest" finished-at="2023-04-18T23:48:10 IST" depends-on-methods="com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest" duration-ms="19357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Plugin permission is removed so workflow cannot be made inactive]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFFailureAfterSysadminRemovesPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:48:10 IST" name="getResult" finished-at="2023-04-18T23:48:22 IST" duration-ms="12167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFFailureAfterSysadminRemovesPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:48:22 IST" name="initialization" finished-at="2023-04-18T23:48:29 IST" duration-ms="6753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:48:29 IST" name="validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest" finished-at="2023-04-18T23:49:20 IST" depends-on-methods="com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest" duration-ms="51244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin Tab is Selected]]>
            </line>
            <line>
              <![CDATA[Plugin Assignment tab is Selected]]>
            </line>
            <line>
              <![CDATA[Save Button is Clicked]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[HexColor of WF Slider:-#4492d6]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc]" started-at="2023-04-18T23:49:20 IST" name="getResult" finished-at="2023-04-18T23:49:22 IST" duration-ms="1767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@c260bdc] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PluginAssignmentsPageTest -->
      <class name="com.ae.qa.testcases.TenantsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:38:43 IST" name="initialization" finished-at="2023-04-18T20:38:52 IST" duration-ms="8857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddNewTenant(java.lang.reflect.Method)[pri:2, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:38:52 IST" name="validateAddNewTenant" finished-at="2023-04-18T20:39:28 IST" duration-ms="36022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAddNewTenant(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddNewTenant -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:39:28 IST" name="getResult" finished-at="2023-04-18T20:39:31 IST" duration-ms="2401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewTenant status=SUCCESS method=TenantsPageTest.validateAddNewTenant(java.lang.reflect.Method)[pri:2, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:39:31 IST" name="initialization" finished-at="2023-04-18T20:39:39 IST" duration-ms="8001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method)[pri:3, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:39:39 IST" name="validateaddNewTenantsWithDuplicateOrgCode" finished-at="2023-04-18T20:40:19 IST" duration-ms="40705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Failure message after entering same org code : Duplicate org code [KG01].]]>
            </line>
            <line>
              <![CDATA[New Usernot created due to duplicate orgcode.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateaddNewTenantsWithDuplicateOrgCode -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:40:19 IST" name="getResult" finished-at="2023-04-18T20:40:22 IST" duration-ms="2650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateaddNewTenantsWithDuplicateOrgCode status=SUCCESS method=TenantsPageTest.validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method)[pri:3, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:40:22 IST" name="initialization" finished-at="2023-04-18T20:40:31 IST" duration-ms="9219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifyLicenseInfoTest(java.lang.reflect.Method)[pri:4, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:40:31 IST" name="verifyLicenseInfoTest" finished-at="2023-04-18T20:40:55 IST" duration-ms="23312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.verifyLicenseInfoTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[License status verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyLicenseInfoTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T20:40:55 IST" name="getResult" finished-at="2023-04-18T20:41:03 IST" duration-ms="8871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLicenseInfoTest status=SUCCESS method=TenantsPageTest.verifyLicenseInfoTest(java.lang.reflect.Method)[pri:4, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:03:00 IST" name="initialization" finished-at="2023-04-18T23:03:10 IST" duration-ms="9331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTenantsPageTest(java.lang.reflect.Method)[pri:152, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:03:10 IST" name="validateTenantsPageTest" finished-at="2023-04-18T23:03:35 IST" duration-ms="25594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateTenantsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenants tab is clicked]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Tenants and Expected page title is: Tenants]]>
            </line>
            <line>
              <![CDATA[Search Functionality working fine for Tenants & Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTenantsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:03:35 IST" name="getResult" finished-at="2023-04-18T23:03:44 IST" duration-ms="8696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTenantsPageTest status=SUCCESS method=TenantsPageTest.validateTenantsPageTest(java.lang.reflect.Method)[pri:152, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:28:02 IST" name="initialization" finished-at="2023-04-18T23:28:17 IST" duration-ms="15005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method)[pri:702, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:28:17 IST" name="validateCreateAllotmentBasedTenantTest" finished-at="2023-04-18T23:28:25 IST" duration-ms="8489" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
*** Element info: {Using=xpath, value=//span[(text()='Tenants')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
*** Element info: {Using=xpath, value=//span[(text()='Tenants')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pages.TenantsPage.validateCreateAllotmentBasedTenant(TenantsPage.java:361)
at com.ae.qa.testcases.TenantsPageTest.validateCreateAllotmentBasedTenantTest(TenantsPageTest.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateAllotmentBasedTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:28:25 IST" name="getResult" finished-at="2023-04-18T23:28:25 IST" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateAllotmentBasedTenantTest status=FAILURE method=TenantsPageTest.validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method)[pri:702, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateAmendLicenseTest(java.lang.reflect.Method)[pri:706, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="validateAmendLicenseTest" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAmendLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmendLicenseTest -->
        <test-method signature="validateAllocateConsumptionBasedTest(java.lang.reflect.Method)[pri:705, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="validateAllocateConsumptionBasedTest" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAllocateConsumptionBasedTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAllocateConsumptionBasedTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="initialization" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="initialization" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="getResult" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:29:14 IST" name="getResult" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisableTenantTest(java.lang.reflect.Method)[pri:1013, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="validateDisableTenantTest" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateDisableTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableTenantTest -->
        <test-method signature="validateSubmitRequestDisabledTenantTest(java.lang.reflect.Method)[pri:1014, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="validateSubmitRequestDisabledTenantTest" finished-at="2023-04-18T23:50:43 IST" depends-on-methods="com.ae.qa.testcases.TenantsPageTest.validateDisableTenantTest" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateSubmitRequestDisabledTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestDisabledTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateEnableAllomentBasedTenantTest(java.lang.reflect.Method)[pri:1017, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="validateEnableAllomentBasedTenantTest" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateEnableAllomentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEnableAllomentBasedTenantTest -->
        <test-method signature="validateDisableAllomentBasedTenantTest(java.lang.reflect.Method)[pri:1016, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="validateDisableAllomentBasedTenantTest" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateDisableAllomentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableAllomentBasedTenantTest -->
        <test-method signature="validateSubmitRequestEnableTenantTest(java.lang.reflect.Method)[pri:1015, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="validateSubmitRequestEnableTenantTest" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateSubmitRequestEnableTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62203}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 040a59f708dddfd409e60e7632eed92b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestEnableTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@1eb6749b]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.TenantsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:46:33 IST" name="initialization" finished-at="2023-04-18T21:46:42 IST" duration-ms="8784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadAgentTest(java.lang.reflect.Method)[pri:70, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:46:42 IST" name="validateDownloadAgentTest" finished-at="2023-04-18T21:49:02 IST" duration-ms="139496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDownloadAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to workflow assignment Tab]]>
            </line>
            <line>
              <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
            </line>
            <line>
              <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
            </line>
            <line>
              <![CDATA[Now User needs to download agent first]]>
            </line>
            <line>
              <![CDATA[User navigated to Agent List Tab]]>
            </line>
            <line>
              <![CDATA[Agent download started]]>
            </line>
            <line>
              <![CDATA[File unzipped properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:49:02 IST" name="getResult" finished-at="2023-04-18T21:49:29 IST" duration-ms="27734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadAgentTest status=SUCCESS method=AgentListPageTestTA.validateDownloadAgentTest(java.lang.reflect.Method)[pri:70, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:49:29 IST" name="initialization" finished-at="2023-04-18T21:49:39 IST" duration-ms="9667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCheckStatusOfAgent(java.lang.reflect.Method)[pri:71, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:49:39 IST" name="validateCheckStatusOfAgent" finished-at="2023-04-18T21:50:04 IST" duration-ms="24973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateCheckStatusOfAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCheckStatusOfAgent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T21:50:04 IST" name="getResult" finished-at="2023-04-18T21:50:12 IST" duration-ms="7834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckStatusOfAgent status=SUCCESS method=AgentListPageTestTA.validateCheckStatusOfAgent(java.lang.reflect.Method)[pri:71, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:04:19 IST" name="initialization" finished-at="2023-04-18T22:04:30 IST" duration-ms="11672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAgentList(java.lang.reflect.Method)[pri:88, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:04:30 IST" name="validatecheckColumnsInAgentList" finished-at="2023-04-18T22:04:51 IST" duration-ms="20993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatecheckColumnsInAgentList(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAgentList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:04:51 IST" name="getResult" finished-at="2023-04-18T22:04:57 IST" duration-ms="5613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAgentList status=SUCCESS method=AgentListPageTestTA.validatecheckColumnsInAgentList(java.lang.reflect.Method)[pri:88, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:04:57 IST" name="initialization" finished-at="2023-04-18T22:05:04 IST" duration-ms="6726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAgentListTA(java.lang.reflect.Method)[pri:89, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:05:04 IST" name="validatedeselectAllInAgentListTA" finished-at="2023-04-18T22:05:25 IST" duration-ms="21185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatedeselectAllInAgentListTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 3]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 3]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Agent Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Resource Utilization]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Agent Name,Status and Resource Utilization.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAgentListTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:05:25 IST" name="getResult" finished-at="2023-04-18T22:05:27 IST" duration-ms="2082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAgentListTA status=SUCCESS method=AgentListPageTestTA.validatedeselectAllInAgentListTA(java.lang.reflect.Method)[pri:89, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:05:27 IST" name="initialization" finished-at="2023-04-18T22:05:35 IST" duration-ms="8318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSpecificColumnInAgentList(java.lang.reflect.Method)[pri:90, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:05:35 IST" name="validateSpecificColumnInAgentList" finished-at="2023-04-18T22:06:03 IST" duration-ms="27356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateSpecificColumnInAgentList(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Agent Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Execution Threads]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Executing Workflows]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Resource Utilization]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSpecificColumnInAgentList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T22:06:03 IST" name="getResult" finished-at="2023-04-18T22:06:06 IST" duration-ms="2983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecificColumnInAgentList status=SUCCESS method=AgentListPageTestTA.validateSpecificColumnInAgentList(java.lang.reflect.Method)[pri:90, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:49 IST" duration-ms="6660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentRestartTest(java.lang.reflect.Method)[pri:1019, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T23:50:49 IST" name="validateAgentRestartTest" finished-at="2023-04-18T23:51:58 IST" duration-ms="68578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateAgentRestartTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[Restart button is clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Restart Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Restart button is clicked and agent is going in Stopped Status successfully]]>
            </line>
            <line>
              <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
            </line>
            <line>
              <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in Stopped mode]]>
            </line>
            <line>
              <![CDATA[Current status of Agent after being Restart is: Stopped]]>
            </line>
            <line>
              <![CDATA[Current status of Agent after being Restart is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode after being restart]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentRestartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-18T23:51:58 IST" name="getResult" finished-at="2023-04-18T23:52:00 IST" duration-ms="1920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentRestartTest status=SUCCESS method=AgentListPageTestTA.validateAgentRestartTest(java.lang.reflect.Method)[pri:1019, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:20:33 IST" name="initialization" finished-at="2023-04-19T00:20:38 IST" duration-ms="5308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteAgentTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:20:38 IST" name="validateDeleteAgentTest" finished-at="2023-04-19T00:21:40 IST" duration-ms="62017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDeleteAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[Stop Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Stop Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Actual_Message:-Stopping agent [kalyani.gomkale@aedbserver] is in progress]]>
            </line>
            <line>
              <![CDATA[Expected Message:- Stopping agent [kalyani.gomkale@aedbserver] is in progress]]>
            </line>
            <line>
              <![CDATA[Agent is stopped successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in Stopped mode]]>
            </line>
            <line>
              <![CDATA[Delete Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Delete Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Agent is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:21:40 IST" name="getResult" finished-at="2023-04-19T00:21:42 IST" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteAgentTest status=SUCCESS method=AgentListPageTestTA.validateDeleteAgentTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:21:42 IST" name="initialization" finished-at="2023-04-19T00:21:48 IST" duration-ms="6016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2001, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:21:48 IST" name="validateassignAssistedAgentToUser" finished-at="2023-04-19T00:22:15 IST" duration-ms="27251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateassignAssistedAgentToUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateassignAssistedAgentToUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:22:15 IST" name="getResult" finished-at="2023-04-19T00:22:18 IST" duration-ms="2341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateassignAssistedAgentToUser status=SUCCESS method=AgentListPageTestTA.validateassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2001, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:22:18 IST" name="initialization" finished-at="2023-04-19T00:22:24 IST" duration-ms="6302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadAssistedAgentTest(java.lang.reflect.Method)[pri:2002, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:22:24 IST" name="validateDownloadAssistedAgentTest" finished-at="2023-04-19T00:24:33 IST" duration-ms="128890" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDownloadAssistedAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.io.File.<init>(File.java:278)
at com.ae.qa.pagesTenantAdmin.AgentListPageTA.downloadAssistedAgent(AgentListPageTA.java:310)
at com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDownloadAssistedAgentTest(AgentListPageTestTA.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to workflow assignment Tab]]>
            </line>
            <line>
              <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
            </line>
            <line>
              <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
            </line>
            <line>
              <![CDATA[Now User needs to download agent first]]>
            </line>
            <line>
              <![CDATA[User navigated to Agent List Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agent Tab]]>
            </line>
            <line>
              <![CDATA[Assisted Agent download started]]>
            </line>
            <line>
              <![CDATA[File unzipped properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadAssistedAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:24:33 IST" name="getResult" finished-at="2023-04-19T00:24:39 IST" duration-ms="5740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadAssistedAgentTest status=FAILURE method=AgentListPageTestTA.validateDownloadAssistedAgentTest(java.lang.reflect.Method)[pri:2002, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:24:39 IST" name="initialization" finished-at="2023-04-19T00:24:46 IST" duration-ms="7099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckStatusOfAssistedAgent(java.lang.reflect.Method)[pri:2003, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:24:46 IST" name="validatecheckStatusOfAssistedAgent" finished-at="2023-04-19T00:25:21 IST" duration-ms="35209" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatecheckStatusOfAssistedAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:57152}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4aa1b79fd32f1ebd7d389ffc8f3eb820]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:57152}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4aa1b79fd32f1ebd7d389ffc8f3eb820
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pagesTenantAdmin.AgentListPageTA.checkStatusOfAssistedAgent(AgentListPageTA.java:331)
at com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatecheckStatusOfAssistedAgent(AgentListPageTestTA.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Assisted Agent is: Stopped]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckStatusOfAssistedAgent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:25:21 IST" name="getResult" finished-at="2023-04-19T00:25:35 IST" duration-ms="14454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckStatusOfAssistedAgent status=FAILURE method=AgentListPageTestTA.validatecheckStatusOfAssistedAgent(java.lang.reflect.Method)[pri:2003, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:25:35 IST" name="initialization" finished-at="2023-04-19T00:25:41 IST" duration-ms="5714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateunassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2004, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:25:41 IST" name="validateunassignAssistedAgentToUser" finished-at="2023-04-19T00:27:03 IST" duration-ms="82310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateunassignAssistedAgentToUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Agents and Found is: Agents]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User is not assigned to Assisted agent so Agent tab is not visible]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateunassignAssistedAgentToUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:27:03 IST" name="getResult" finished-at="2023-04-19T00:27:05 IST" duration-ms="1627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateunassignAssistedAgentToUser status=SUCCESS method=AgentListPageTestTA.validateunassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2004, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:27:05 IST" name="initialization" finished-at="2023-04-19T00:27:10 IST" duration-ms="4942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditAssistedAgentName(java.lang.reflect.Method)[pri:2005, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:27:10 IST" name="ValidateEditAssistedAgentName" finished-at="2023-04-19T00:27:38 IST" duration-ms="28194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.ValidateEditAssistedAgentName(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Agentslist Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User clicked on Edit Btn]]>
            </line>
            <line>
              <![CDATA[Actual message displayed on screen is: Changes saved to the agent and Expected message is: Changes saved to the agent]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked and Assisted agent name is changed successfully]]>
            </line>
            <line>
              <![CDATA[Edited Assisted Agent Name:- kalyani.gomkale@aedbserver]]>
            </line>
            <line>
              <![CDATA[Agent Name Changed successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditAssistedAgentName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58]" started-at="2023-04-19T00:27:38 IST" name="getResult" finished-at="2023-04-19T00:27:40 IST" duration-ms="1786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditAssistedAgentName status=SUCCESS method=AgentListPageTestTA.ValidateEditAssistedAgentName(java.lang.reflect.Method)[pri:2005, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@5ce33a58] output=User navigated to Agents Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.HomePageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T21:25:02 IST" name="initialization" finished-at="2023-04-18T21:25:09 IST" duration-ms="6895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadLicenseTest(java.lang.reflect.Method)[pri:43, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T21:25:09 IST" name="validateUploadLicenseTest" finished-at="2023-04-18T21:25:45 IST" duration-ms="35897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateUploadLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Import is not possible w/o License ]]>
            </line>
            <line>
              <![CDATA[HomeTab is clicked]]>
            </line>
            <line>
              <![CDATA[Upload Licens ebox is clicked]]>
            </line>
            <line>
              <![CDATA[License file submitted]]>
            </line>
            <line>
              <![CDATA[Upload button is clicked]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully for Tenant]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadLicenseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T21:25:45 IST" name="getResult" finished-at="2023-04-18T21:25:52 IST" duration-ms="7638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadLicenseTest status=SUCCESS method=HomePageTestTA.validateUploadLicenseTest(java.lang.reflect.Method)[pri:43, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T22:58:30 IST" name="initialization" finished-at="2023-04-18T22:58:39 IST" duration-ms="8892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSearchFunctionalityTATest(java.lang.reflect.Method)[pri:145, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T22:58:39 IST" name="validateSearchFunctionalityTATest" finished-at="2023-04-18T22:58:52 IST" duration-ms="12976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateSearchFunctionalityTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Single Sign-On and Found is: Single Sign-On]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSearchFunctionalityTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T22:58:52 IST" name="getResult" finished-at="2023-04-18T22:58:55 IST" duration-ms="2880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchFunctionalityTATest status=SUCCESS method=HomePageTestTA.validateSearchFunctionalityTATest(java.lang.reflect.Method)[pri:145, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:29:14 IST" name="initialization" finished-at="2023-04-18T23:29:27 IST" duration-ms="12227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLicenseDetailTabTest(java.lang.reflect.Method)[pri:707, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:29:27 IST" name="validateLicenseDetailTabTest" finished-at="2023-04-18T23:30:15 IST" duration-ms="48113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateLicenseDetailTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Home Tab is clicked]]>
            </line>
            <line>
              <![CDATA[License Details Tab is clicked]]>
            </line>
            <line>
              <![CDATA[DEVELOPMENT]]>
            </line>
            <line>
              <![CDATA[10]]>
            </line>
            <line>
              <![CDATA[20]]>
            </line>
            <line>
              <![CDATA[3]]>
            </line>
            <line>
              <![CDATA[10000]]>
            </line>
            <line>
              <![CDATA[30]]>
            </line>
            <line>
              <![CDATA[15-Sep-2022]]>
            </line>
            <line>
              <![CDATA[14-Sep-2023]]>
            </line>
            <line>
              <![CDATA[Actual License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
            </line>
            <line>
              <![CDATA[Expected License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
            </line>
            <line>
              <![CDATA[License details are validated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLicenseDetailTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:30:15 IST" name="getResult" finished-at="2023-04-18T23:30:22 IST" duration-ms="6880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLicenseDetailTabTest status=SUCCESS method=HomePageTestTA.validateLicenseDetailTabTest(java.lang.reflect.Method)[pri:707, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:30:22 IST" name="initialization" finished-at="2023-04-18T23:30:43 IST" duration-ms="21096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLicenseDetailHomepageTest(java.lang.reflect.Method)[pri:708, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:30:43 IST" name="validateLicenseDetailHomepageTest" finished-at="2023-04-18T23:30:55 IST" duration-ms="11711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateLicenseDetailHomepageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Agent Thread count:-20]]>
            </line>
            <line>
              <![CDATA[Actual Step Units count:-10000]]>
            </line>
            <line>
              <![CDATA[Actual Expiry Date:-14-Sep-2023]]>
            </line>
            <line>
              <![CDATA[License details on Homepage are validated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLicenseDetailHomepageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45]" started-at="2023-04-18T23:30:55 IST" name="getResult" finished-at="2023-04-18T23:31:01 IST" duration-ms="6202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLicenseDetailHomepageTest status=SUCCESS method=HomePageTestTA.validateLicenseDetailHomepageTest(java.lang.reflect.Method)[pri:708, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@71b3bc45] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.HomePageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.InformationPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:39:08 IST" name="initialization" finished-at="2023-04-18T22:39:14 IST" duration-ms="6148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLastLoginTATest(java.lang.reflect.Method)[pri:123, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:39:14 IST" name="validateLastLoginTATest" finished-at="2023-04-18T22:39:36 IST" duration-ms="21328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateLastLoginTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Last login time displayed successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLastLoginTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:39:36 IST" name="getResult" finished-at="2023-04-18T22:39:38 IST" duration-ms="2370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLastLoginTATest status=SUCCESS method=InformationPageTestTA.validateLastLoginTATest(java.lang.reflect.Method)[pri:123, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:39:38 IST" name="initialization" finished-at="2023-04-18T22:39:44 IST" duration-ms="6026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateViewProfileTATest(java.lang.reflect.Method)[pri:124, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:39:44 IST" name="validateViewProfileTATest" finished-at="2023-04-18T22:40:30 IST" duration-ms="45784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateViewProfileTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Profile details validation successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateViewProfileTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:40:30 IST" name="getResult" finished-at="2023-04-18T22:40:37 IST" duration-ms="7030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateViewProfileTATest status=SUCCESS method=InformationPageTestTA.validateViewProfileTATest(java.lang.reflect.Method)[pri:124, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:40:37 IST" name="initialization" finished-at="2023-04-18T22:40:44 IST" duration-ms="7092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSetTenantLogo(java.lang.reflect.Method)[pri:125, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:40:44 IST" name="validateSetTenantLogo" finished-at="2023-04-18T22:41:06 IST" duration-ms="22172" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateSetTenantLogo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Logo not uploaded expected [Logo uploaded successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Logo not uploaded expected [Logo uploaded successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.InformationPageTA.setTenantLogo(InformationPageTA.java:199)
at com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateSetTenantLogo(InformationPageTestTA.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSetTenantLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:41:06 IST" name="getResult" finished-at="2023-04-18T22:41:09 IST" duration-ms="3261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSetTenantLogo status=FAILURE method=InformationPageTestTA.validateSetTenantLogo(java.lang.reflect.Method)[pri:125, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:41:09 IST" name="initialization" finished-at="2023-04-18T22:41:17 IST" duration-ms="7790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveTenantLogo(java.lang.reflect.Method)[pri:126, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:41:17 IST" name="validateRemoveTenantLogo" finished-at="2023-04-18T22:41:39 IST" duration-ms="21309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateRemoveTenantLogo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[Tenant logo removed successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveTenantLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T22:41:39 IST" name="getResult" finished-at="2023-04-18T22:41:40 IST" duration-ms="1905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveTenantLogo status=SUCCESS method=InformationPageTestTA.validateRemoveTenantLogo(java.lang.reflect.Method)[pri:126, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T23:16:05 IST" name="initialization" finished-at="2023-04-18T23:16:10 IST" duration-ms="5635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAboutTabTest(java.lang.reflect.Method)[pri:300, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T23:16:10 IST" name="validateAboutTabTest" finished-at="2023-04-18T23:16:38 IST" duration-ms="27406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateAboutTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAboutTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258]" started-at="2023-04-18T23:16:38 IST" name="getResult" finished-at="2023-04-18T23:16:41 IST" duration-ms="3066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAboutTabTest status=SUCCESS method=InformationPageTestTA.validateAboutTabTest(java.lang.reflect.Method)[pri:300, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@6bb75258] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.InformationPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@4264b240]" started-at="2023-04-18T22:31:54 IST" name="initialization" finished-at="2023-04-18T22:32:02 IST" duration-ms="7796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method)[pri:117, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@4264b240]" started-at="2023-04-18T22:32:02 IST" name="validateUpdationPurgePolicyDurationTATest" finished-at="2023-04-18T22:32:35 IST" duration-ms="33362" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA.validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Purge policy not UPDATED successfully expected [Policy saved successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Purge policy not UPDATED successfully expected [Policy saved successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.PurgePolicyPageTA.validateUpdationPurgePolicyDurationTA(PurgePolicyPageTA.java:98)
at com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA.validateUpdationPurgePolicyDurationTATest(PurgePolicyPageTestTA.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdationPurgePolicyDurationTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@4264b240]" started-at="2023-04-18T22:32:35 IST" name="getResult" finished-at="2023-04-18T22:33:04 IST" duration-ms="28934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdationPurgePolicyDurationTATest status=FAILURE method=PurgePolicyPageTestTA.validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method)[pri:117, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@4264b240] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA -->
      <class name="com.ae.qa.testcases.InformationPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:12:44 IST" name="initialization" finished-at="2023-04-18T21:12:55 IST" duration-ms="10534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLastLoginTest(java.lang.reflect.Method)[pri:29, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:12:55 IST" name="validateLastLoginTest" finished-at="2023-04-18T21:13:24 IST" duration-ms="29531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateLastLoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Last login time displayed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLastLoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:13:24 IST" name="getResult" finished-at="2023-04-18T21:13:39 IST" duration-ms="14733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLastLoginTest status=SUCCESS method=InformationPageTest.validateLastLoginTest(java.lang.reflect.Method)[pri:29, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:13:39 IST" name="initialization" finished-at="2023-04-18T21:13:52 IST" duration-ms="12679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateViewProfileTest(java.lang.reflect.Method)[pri:30, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:13:52 IST" name="validateViewProfileTest" finished-at="2023-04-18T21:14:38 IST" duration-ms="46081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateViewProfileTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Profile details validation successfully.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateViewProfileTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:14:38 IST" name="getResult" finished-at="2023-04-18T21:14:50 IST" duration-ms="12285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateViewProfileTest status=SUCCESS method=InformationPageTest.validateViewProfileTest(java.lang.reflect.Method)[pri:30, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:14:50 IST" name="initialization" finished-at="2023-04-18T21:15:02 IST" duration-ms="12138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateChangePasswordTest(java.lang.reflect.Method)[pri:31, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:15:02 IST" name="validateChangePasswordTest" finished-at="2023-04-18T21:15:32 IST" duration-ms="30146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateChangePasswordTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateChangePasswordTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T21:15:32 IST" name="getResult" finished-at="2023-04-18T21:15:46 IST" duration-ms="13740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateChangePasswordTest status=SUCCESS method=InformationPageTest.validateChangePasswordTest(java.lang.reflect.Method)[pri:31, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T23:16:41 IST" name="initialization" finished-at="2023-04-18T23:16:49 IST" duration-ms="8388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAboutTabTest(java.lang.reflect.Method)[pri:301, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T23:16:49 IST" name="validateAboutTabTest" finished-at="2023-04-18T23:17:17 IST" duration-ms="28218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateAboutTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAboutTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9]" started-at="2023-04-18T23:17:17 IST" name="getResult" finished-at="2023-04-18T23:17:29 IST" duration-ms="11723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAboutTabTest status=SUCCESS method=InformationPageTest.validateAboutTabTest(java.lang.reflect.Method)[pri:301, instance:com.ae.qa.testcases.InformationPageTest@24d4d7c9] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.InformationPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:57:23 IST" name="initialization" finished-at="2023-04-18T23:57:29 IST" duration-ms="6055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadandAssignPSTest(java.lang.reflect.Method)[pri:1034, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:57:29 IST" name="validateDownloadandAssignPSTest" finished-at="2023-04-18T23:57:51 IST" duration-ms="21909" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateDownloadandAssignPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button type="button" class="btn btn-primary btn-height">...</button> is not clickable at point (1225, 157). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:61963}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3d7959e232427d4fffe573eb1d984d77]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button type="button" class="btn btn-primary btn-height">...</button> is not clickable at point (1225, 157). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:61963}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3d7959e232427d4fffe573eb1d984d77
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.ProcessStudioPageTA.validateDownloadandAssignPS(ProcessStudioPageTA.java:70)
at com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateDownloadandAssignPSTest(ProcessStudioPageTestTA.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Process-studio download started]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadandAssignPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:57:51 IST" name="getResult" finished-at="2023-04-18T23:58:07 IST" duration-ms="16076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadandAssignPSTest status=FAILURE method=ProcessStudioPageTestTA.validateDownloadandAssignPSTest(java.lang.reflect.Method)[pri:1034, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:58:07 IST" name="initialization" finished-at="2023-04-18T23:58:15 IST" duration-ms="7388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUnAssignPSTest(java.lang.reflect.Method)[pri:1035, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:58:15 IST" name="validateUnAssignPSTest" finished-at="2023-04-18T23:58:43 IST" duration-ms="28100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateUnAssignPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Process studio license is unassigned correctly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUnAssignPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:58:43 IST" name="getResult" finished-at="2023-04-18T23:58:47 IST" duration-ms="3904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAssignPSTest status=SUCCESS method=ProcessStudioPageTestTA.validateUnAssignPSTest(java.lang.reflect.Method)[pri:1035, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:58:47 IST" name="initialization" finished-at="2023-04-18T23:58:53 IST" duration-ms="6519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateProcessStudioPageTATest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:58:53 IST" name="validateProcessStudioPageTATest" finished-at="2023-04-18T23:59:12 IST" duration-ms="18572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateProcessStudioPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Process Studio and Expected page title is: Process Studio]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProcessStudioPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-18T23:59:12 IST" name="getResult" finished-at="2023-04-18T23:59:13 IST" duration-ms="1036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProcessStudioPageTATest status=SUCCESS method=ProcessStudioPageTestTA.validateProcessStudioPageTATest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-19T00:01:46 IST" name="initialization" finished-at="2023-04-19T00:02:11 IST" duration-ms="25671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-19T00:02:11 IST" name="validateProcessStudioDownloadLinuxTest" finished-at="2023-04-19T00:02:39 IST" duration-ms="27340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[PS download button for Linux is clicked successfully]]>
            </line>
            <line>
              <![CDATA[PS for Linux is downloaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProcessStudioDownloadLinuxTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a]" started-at="2023-04-19T00:02:39 IST" name="getResult" finished-at="2023-04-19T00:02:44 IST" duration-ms="4965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProcessStudioDownloadLinuxTest status=SUCCESS method=ProcessStudioPageTestTA.validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4baf352a] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA -->
      <class name="com.ae.qa.testcases.SystemUsersPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:41:03 IST" name="initialization" finished-at="2023-04-18T20:41:10 IST" duration-ms="6536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="creatingSystemAdminTest(java.lang.reflect.Method)[pri:5, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:41:10 IST" name="creatingSystemAdminTest" finished-at="2023-04-18T20:42:21 IST" duration-ms="70813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.creatingSystemAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[System Admin is verified and present in the webtable]]>
            </line>
          </reporter-output>
        </test-method> <!-- creatingSystemAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:42:21 IST" name="getResult" finished-at="2023-04-18T20:42:24 IST" duration-ms="3314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=creatingSystemAdminTest status=SUCCESS method=SystemUsersPageTest.creatingSystemAdminTest(java.lang.reflect.Method)[pri:5, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:42:24 IST" name="initialization" finished-at="2023-04-18T20:42:31 IST" duration-ms="6934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditSystemUsers(java.lang.reflect.Method)[pri:6, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:42:31 IST" name="validateEditSystemUsers" finished-at="2023-04-18T20:43:37 IST" duration-ms="66514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateEditSystemUsers(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[System User details got edited.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditSystemUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:43:37 IST" name="getResult" finished-at="2023-04-18T20:43:39 IST" duration-ms="1645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditSystemUsers status=SUCCESS method=SystemUsersPageTest.validateEditSystemUsers(java.lang.reflect.Method)[pri:6, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:43:39 IST" name="initialization" finished-at="2023-04-18T20:43:47 IST" duration-ms="8183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordMismatch(java.lang.reflect.Method)[pri:7, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:43:47 IST" name="validatePasswordMismatch" finished-at="2023-04-18T20:44:48 IST" duration-ms="60234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validatePasswordMismatch(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Actual message when user both passwords are not same: Passwords Mismatch!]]>
            </line>
            <line>
              <![CDATA[Got correct error when there is mismatch in password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordMismatch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T20:44:48 IST" name="getResult" finished-at="2023-04-18T20:45:01 IST" duration-ms="13632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMismatch status=SUCCESS method=SystemUsersPageTest.validatePasswordMismatch(java.lang.reflect.Method)[pri:7, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:03:44 IST" name="initialization" finished-at="2023-04-18T23:03:51 IST" duration-ms="6722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSystemUsersPageTest(java.lang.reflect.Method)[pri:153, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:03:51 IST" name="validateSystemUsersPageTest" finished-at="2023-04-18T23:04:17 IST" duration-ms="26478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateSystemUsersPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: System Users and Expected page title is: System Users]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSystemUsersPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:04:17 IST" name="getResult" finished-at="2023-04-18T23:04:24 IST" duration-ms="7164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSystemUsersPageTest status=SUCCESS method=SystemUsersPageTest.validateSystemUsersPageTest(java.lang.reflect.Method)[pri:153, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:28:25 IST" name="initialization" finished-at="2023-04-18T23:28:38 IST" duration-ms="12889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method)[pri:703, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:28:38 IST" name="validateCreatingTenantLicenseAdminTest" finished-at="2023-04-18T23:29:14 IST" duration-ms="36342" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using xpath=//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.ae.qa.pages.SystemUsersPage.creation(SystemUsersPage.java:114)
at com.ae.qa.pages.SystemUsersPage.creatingTenantLicenseAdmin(SystemUsersPage.java:162)
at com.ae.qa.testcases.SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(SystemUsersPageTest.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreatingTenantLicenseAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:29:14 IST" name="getResult" finished-at="2023-04-18T23:29:14 IST" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreatingTenantLicenseAdminTest status=FAILURE method=SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method)[pri:703, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateEditTenantLicenseAdminTest(java.lang.reflect.Method)[pri:704, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:29:14 IST" name="validateEditTenantLicenseAdminTest" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateEditTenantLicenseAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditTenantLicenseAdminTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:29:14 IST" name="initialization" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:29:14 IST" name="getResult" finished-at="2023-04-18T23:29:14 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDeleteSystemAdminTest(java.lang.reflect.Method)[pri:1018, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:50:43 IST" name="validateDeleteSystemAdminTest" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateDeleteSystemAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62228}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a67f6b6c8932f7a16d8d48648d8b427c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteSystemAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:50:43 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@652a7737]" started-at="2023-04-18T23:50:43 IST" name="initialization" finished-at="2023-04-18T23:50:43 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
      </class> <!-- com.ae.qa.testcases.SystemUsersPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T22:58:55 IST" name="initialization" finished-at="2023-04-18T22:59:02 IST" duration-ms="6859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationTypesTATest(java.lang.reflect.Method)[pri:149, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T22:59:02 IST" name="validateAddIntegrationTypesTATest" finished-at="2023-04-18T22:59:33 IST" duration-ms="31213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateAddIntegrationTypesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationTypesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T22:59:33 IST" name="getResult" finished-at="2023-04-18T22:59:36 IST" duration-ms="2698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationTypesTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateAddIntegrationTypesTATest(java.lang.reflect.Method)[pri:149, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:15:14 IST" name="initialization" finished-at="2023-04-18T23:15:20 IST" duration-ms="5933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationTypesPageTATest(java.lang.reflect.Method)[pri:196, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:15:20 IST" name="validateIntegrationTypesPageTATest" finished-at="2023-04-18T23:15:37 IST" duration-ms="16814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateIntegrationTypesPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationTypesPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:15:37 IST" name="getResult" finished-at="2023-04-18T23:15:40 IST" duration-ms="2707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationTypesPageTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateIntegrationTypesPageTATest(java.lang.reflect.Method)[pri:196, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:56:14 IST" name="initialization" finished-at="2023-04-18T23:56:20 IST" duration-ms="6243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationTypesTATest(java.lang.reflect.Method)[pri:1031, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:56:20 IST" name="validateEditIntegrationTypesTATest" finished-at="2023-04-18T23:56:50 IST" duration-ms="30005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateEditIntegrationTypesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationTypesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:56:50 IST" name="getResult" finished-at="2023-04-18T23:56:57 IST" duration-ms="7677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationTypesTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateEditIntegrationTypesTATest(java.lang.reflect.Method)[pri:1031, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:56:57 IST" name="initialization" finished-at="2023-04-18T23:57:04 IST" duration-ms="6234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteIntegrationTypeTATest(java.lang.reflect.Method)[pri:1032, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:57:04 IST" name="validateDeleteIntegrationTypeTATest" finished-at="2023-04-18T23:57:19 IST" duration-ms="14934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateDeleteIntegrationTypeTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Integration type is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteIntegrationTypeTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8]" started-at="2023-04-18T23:57:19 IST" name="getResult" finished-at="2023-04-18T23:57:23 IST" duration-ms="4560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteIntegrationTypeTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateDeleteIntegrationTypeTATest(java.lang.reflect.Method)[pri:1032, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@1bb1fde8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:52:20 IST" name="initialization" finished-at="2023-04-18T21:52:29 IST" duration-ms="8398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedownloadingAuditLogsTA(java.lang.reflect.Method)[pri:75, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:52:29 IST" name="validatedownloadingAuditLogsTA" finished-at="2023-04-18T21:53:01 IST" duration-ms="32057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatedownloadingAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked the download button]]>
            </line>
            <line>
              <![CDATA[Audit logs download started Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedownloadingAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:01 IST" name="getResult" finished-at="2023-04-18T21:53:07 IST" duration-ms="6028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedownloadingAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatedownloadingAuditLogsTA(java.lang.reflect.Method)[pri:75, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:07 IST" name="initialization" finished-at="2023-04-18T21:53:14 IST" duration-ms="7291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method)[pri:76, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:14 IST" name="validatecheckColumnsInAuditLogsTA" finished-at="2023-04-18T21:53:35 IST" duration-ms="21046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:35 IST" name="getResult" finished-at="2023-04-18T21:53:45 IST" duration-ms="10175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method)[pri:76, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:45 IST" name="initialization" finished-at="2023-04-18T21:53:52 IST" duration-ms="6773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAuditLogsTA(java.lang.reflect.Method)[pri:77, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:53:52 IST" name="validatedeselectAllInAuditLogsTA" finished-at="2023-04-18T21:54:11 IST" duration-ms="19101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatedeselectAllInAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 2]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 2]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Entity and ObjectId.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:54:11 IST" name="getResult" finished-at="2023-04-18T21:54:16 IST" duration-ms="4604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatedeselectAllInAuditLogsTA(java.lang.reflect.Method)[pri:77, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:54:16 IST" name="initialization" finished-at="2023-04-18T21:54:22 IST" duration-ms="5897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifySpecificColumnTestTA(java.lang.reflect.Method)[pri:78, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:54:22 IST" name="verifySpecificColumnTestTA" finished-at="2023-04-18T21:54:41 IST" duration-ms="19204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.verifySpecificColumnTestTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Description]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Source]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifySpecificColumnTestTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f]" started-at="2023-04-18T21:54:41 IST" name="getResult" finished-at="2023-04-18T21:54:45 IST" duration-ms="3971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecificColumnTestTA status=SUCCESS method=AuditLogsPageTestTA.verifySpecificColumnTestTA(java.lang.reflect.Method)[pri:78, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@1623134f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA -->
      <class name="com.ae.qa.testcases.PluginsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T20:53:23 IST" name="initialization" finished-at="2023-04-18T20:53:32 IST" duration-ms="8546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadPluginsTest(java.lang.reflect.Method)[pri:15, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T20:53:32 IST" name="validateUploadPluginsTest" finished-at="2023-04-18T20:57:29 IST" duration-ms="236628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadPluginsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[Upload zip button clicked]]>
            </line>
            <line>
              <![CDATA[Plugin zip started uploading]]>
            </line>
            <line>
              <![CDATA[Upgrade all plugin checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Assign to all checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Save button is selected]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[Upload zip button clicked]]>
            </line>
            <line>
              <![CDATA[Plugin zip started uploading]]>
            </line>
            <line>
              <![CDATA[Upgrade all plugin checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Assign to all checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Save button is selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadPluginsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T20:57:29 IST" name="getResult" finished-at="2023-04-18T20:57:31 IST" duration-ms="2595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadPluginsTest status=SUCCESS method=PluginsPageTest.validateUploadPluginsTest(java.lang.reflect.Method)[pri:15, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T22:42:22 IST" name="initialization" finished-at="2023-04-18T22:42:29 IST" duration-ms="7100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSinglePluginsTest(java.lang.reflect.Method)[pri:128, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T22:42:29 IST" name="validateUploadSinglePluginsTest" finished-at="2023-04-18T22:43:00 IST" duration-ms="30900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSinglePluginsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSinglePluginsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T22:43:00 IST" name="getResult" finished-at="2023-04-18T22:43:02 IST" duration-ms="2430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSinglePluginsTest status=SUCCESS method=PluginsPageTest.validateUploadSinglePluginsTest(java.lang.reflect.Method)[pri:128, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:06:56 IST" name="initialization" finished-at="2023-04-18T23:07:04 IST" duration-ms="7387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePluginsPageTest(java.lang.reflect.Method)[pri:158, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:07:04 IST" name="validatePluginsPageTest" finished-at="2023-04-18T23:07:28 IST" duration-ms="24681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validatePluginsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Plugins and Expected page title is: Plugins]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePluginsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:07:28 IST" name="getResult" finished-at="2023-04-18T23:07:32 IST" duration-ms="3297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePluginsPageTest status=SUCCESS method=PluginsPageTest.validatePluginsPageTest(java.lang.reflect.Method)[pri:158, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:41:29 IST" name="initialization" finished-at="2023-04-18T23:41:38 IST" duration-ms="8773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSameSinglePluginTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:41:38 IST" name="validateUploadSameSinglePluginTest" finished-at="2023-04-18T23:42:08 IST" duration-ms="30341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSameSinglePluginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Same plugin jar not uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSameSinglePluginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:42:08 IST" name="getResult" finished-at="2023-04-18T23:42:11 IST" duration-ms="2185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSameSinglePluginTest status=SUCCESS method=PluginsPageTest.validateUploadSameSinglePluginTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:42:11 IST" name="initialization" finished-at="2023-04-18T23:42:18 IST" duration-ms="6898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:42:18 IST" name="validateUploadSinglePluginSameVersionTest" finished-at="2023-04-18T23:42:55 IST" duration-ms="37520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[actual success msg is: Duplicate plugin name [GUI-Automation]]]>
            </line>
            <line>
              <![CDATA[expected success msg is: Duplicate plugin name [GUI-Automation]]]>
            </line>
            <line>
              <![CDATA[Single plugin jar with same version is not uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSinglePluginSameVersionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:42:55 IST" name="getResult" finished-at="2023-04-18T23:43:16 IST" duration-ms="20614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSinglePluginSameVersionTest status=SUCCESS method=PluginsPageTest.validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:43:16 IST" name="initialization" finished-at="2023-04-18T23:43:24 IST" duration-ms="8438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method)[pri:1002, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:43:24 IST" name="validateSinglePluginUploadLowerVersionTest" finished-at="2023-04-18T23:43:58 IST" duration-ms="34007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single plugin jar of lower version is uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSinglePluginUploadLowerVersionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a]" started-at="2023-04-18T23:43:58 IST" name="getResult" finished-at="2023-04-18T23:44:00 IST" duration-ms="2045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSinglePluginUploadLowerVersionTest status=SUCCESS method=PluginsPageTest.validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method)[pri:1002, instance:com.ae.qa.testcases.PluginsPageTest@30f5a68a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PluginsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:41:00 IST" name="initialization" finished-at="2023-04-18T21:41:07 IST" duration-ms="6720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCredentialsTest(java.lang.reflect.Method)[pri:64, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:41:07 IST" name="ValidateCreateCredentialsTest" finished-at="2023-04-18T21:41:49 IST" duration-ms="41875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateCreateCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for KG_Private1 credential found in table]]>
            </line>
            <line>
              <![CDATA[Credentials created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:41:49 IST" name="getResult" finished-at="2023-04-18T21:42:00 IST" duration-ms="11295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateCreateCredentialsTest(java.lang.reflect.Method)[pri:64, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:42:00 IST" name="initialization" finished-at="2023-04-18T21:42:08 IST" duration-ms="8286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditCredentialsTest(java.lang.reflect.Method)[pri:65, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:42:08 IST" name="ValidateEditCredentialsTest" finished-at="2023-04-18T21:43:04 IST" duration-ms="56009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateEditCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button corresponding to credentials clicked]]>
            </line>
            <line>
              <![CDATA[Year selected from Calender]]>
            </line>
            <line>
              <![CDATA[Month selected from Calender]]>
            </line>
            <line>
              <![CDATA[Expiry Date selected from Calender]]>
            </line>
            <line>
              <![CDATA[Update button is clicked]]>
            </line>
            <line>
              <![CDATA[Credentials edited succesfully with all fields]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:43:04 IST" name="getResult" finished-at="2023-04-18T21:43:06 IST" duration-ms="1584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateEditCredentialsTest(java.lang.reflect.Method)[pri:65, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:43:06 IST" name="initialization" finished-at="2023-04-18T21:43:14 IST" duration-ms="8571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateCredentialsTest(java.lang.reflect.Method)[pri:66, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:43:14 IST" name="ValidateDuplicateCredentialsTest" finished-at="2023-04-18T21:43:55 IST" duration-ms="40243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDuplicateCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
            </line>
            <line>
              <![CDATA[Expected Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
            </line>
            <line>
              <![CDATA[Credentials with duplicate name can't created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:43:55 IST" name="getResult" finished-at="2023-04-18T21:43:59 IST" duration-ms="4140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateDuplicateCredentialsTest(java.lang.reflect.Method)[pri:66, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:43:59 IST" name="initialization" finished-at="2023-04-18T21:44:06 IST" duration-ms="6750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCredentialPoolTest(java.lang.reflect.Method)[pri:67, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:44:06 IST" name="ValidateCreateCredentialPoolTest" finished-at="2023-04-18T21:44:41 IST" duration-ms="35418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateCreateCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential Pool button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for AE1 credential Pool found in table]]>
            </line>
            <line>
              <![CDATA[Credential Pool created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:44:41 IST" name="getResult" finished-at="2023-04-18T21:44:46 IST" duration-ms="4724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCredentialPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateCreateCredentialPoolTest(java.lang.reflect.Method)[pri:67, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:44:46 IST" name="initialization" finished-at="2023-04-18T21:44:54 IST" duration-ms="8229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method)[pri:68, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:44:54 IST" name="ValidateDuplicateCredentialPoolTest" finished-at="2023-04-18T21:45:25 IST" duration-ms="30927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential Pool button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
            </line>
            <line>
              <![CDATA[Expected Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
            </line>
            <line>
              <![CDATA[Credential Pool with duplicate name can't created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:45:25 IST" name="getResult" finished-at="2023-04-18T21:45:29 IST" duration-ms="3757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateCredentialPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method)[pri:68, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:45:29 IST" name="initialization" finished-at="2023-04-18T21:45:59 IST" duration-ms="30342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateMoveCredentialToPoolTest(java.lang.reflect.Method)[pri:69, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:45:59 IST" name="ValidateMoveCredentialToPoolTest" finished-at="2023-04-18T21:46:26 IST" duration-ms="26853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateMoveCredentialToPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential which needs to add in crenetial pool is selcted]]>
            </line>
            <line>
              <![CDATA[Credential pool in which redential needs to move is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Move Button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual message is :Credential(s) moved successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential(s) moved successfully]]>
            </line>
            <line>
              <![CDATA[Credential moved to credential pool successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateMoveCredentialToPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T21:46:26 IST" name="getResult" finished-at="2023-04-18T21:46:33 IST" duration-ms="7415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateMoveCredentialToPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateMoveCredentialToPoolTest(java.lang.reflect.Method)[pri:69, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:25:29 IST" name="initialization" finished-at="2023-04-18T23:25:42 IST" duration-ms="13563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCredentialPoolTest(java.lang.reflect.Method)[pri:551, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:25:42 IST" name="ValidateDeleteCredentialPoolTest" finished-at="2023-04-18T23:26:01 IST" duration-ms="18585" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDeleteCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Credential Pool deletion unsuccessful expected [Credential pool [AE1] deleted successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Credential Pool deletion unsuccessful expected [Credential pool [AE1] deleted successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.CredentialsPageTA.ValidateDeleteCredentialPool(CredentialsPageTA.java:332)
at com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDeleteCredentialPoolTest(CredentialsPageTestTA.java:91)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button on popup is confirmed]]>
            </line>
            <line>
              <![CDATA[Actual message is :]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential pool [AE1] deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:26:01 IST" name="getResult" finished-at="2023-04-18T23:26:04 IST" duration-ms="3437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCredentialPoolTest status=FAILURE method=CredentialsPageTestTA.ValidateDeleteCredentialPoolTest(java.lang.reflect.Method)[pri:551, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:26:04 IST" name="initialization" finished-at="2023-04-18T23:26:13 IST" duration-ms="8535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCredentialTest(java.lang.reflect.Method)[pri:552, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:26:13 IST" name="ValidateDeleteCredentialTest" finished-at="2023-04-18T23:26:43 IST" duration-ms="30075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDeleteCredentialTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button on popup is confirmed]]>
            </line>
            <line>
              <![CDATA[Actual message is :Credential [KG_Private1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential [KG_Private1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Credential deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCredentialTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663]" started-at="2023-04-18T23:26:43 IST" name="getResult" finished-at="2023-04-18T23:26:48 IST" duration-ms="5097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCredentialTest status=SUCCESS method=CredentialsPageTestTA.ValidateDeleteCredentialTest(java.lang.reflect.Method)[pri:552, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@7a8fa663] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.LoginPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@73db4768]" started-at="2023-04-18T21:24:35 IST" name="initialization" finished-at="2023-04-18T21:24:43 IST" duration-ms="7939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateFirstTimeTALoginTest(java.lang.reflect.Method)[pri:42, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@73db4768]" started-at="2023-04-18T21:24:43 IST" name="ValidateFirstTimeTALoginTest" finished-at="2023-04-18T21:24:55 IST" duration-ms="11978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.LoginPageTestTA.ValidateFirstTimeTALoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateFirstTimeTALoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@73db4768]" started-at="2023-04-18T21:24:55 IST" name="getResult" finished-at="2023-04-18T21:25:02 IST" duration-ms="6664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateFirstTimeTALoginTest status=SUCCESS method=LoginPageTestTA.ValidateFirstTimeTALoginTest(java.lang.reflect.Method)[pri:42, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@73db4768] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.LoginPageTestTA -->
      <class name="com.ae.qa.testcases.PurgePolicyPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:16:51 IST" name="initialization" finished-at="2023-04-18T21:17:02 IST" duration-ms="10142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFReqLessThanNotfTest(java.lang.reflect.Method)[pri:33, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:17:02 IST" name="validateWFReqLessThanNotfTest" finished-at="2023-04-18T21:17:37 IST" duration-ms="35305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validateWFReqLessThanNotfTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Error when notification history is gretaer than wf requestNotification History Duration has be less than or equal to Workflow Requests Duration]]>
            </line>
            <line>
              <![CDATA[Expected Error when notification history is gretaer than wf request:Notification History Duration has be less than or equal to Workflow Requests Duration]]>
            </line>
            <line>
              <![CDATA[Getting correct error message.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFReqLessThanNotfTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:17:37 IST" name="getResult" finished-at="2023-04-18T21:17:40 IST" duration-ms="3274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFReqLessThanNotfTest status=SUCCESS method=PurgePolicyPageTest.validateWFReqLessThanNotfTest(java.lang.reflect.Method)[pri:33, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:17:40 IST" name="initialization" finished-at="2023-04-18T21:17:51 IST" duration-ms="10766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgePolicyDurationTest(java.lang.reflect.Method)[pri:34, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:17:51 IST" name="validatePurgePolicyDurationTest" finished-at="2023-04-18T21:18:18 IST" duration-ms="26575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyDurationTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Purge policy saved successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgePolicyDurationTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:18:18 IST" name="getResult" finished-at="2023-04-18T21:18:20 IST" duration-ms="2121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgePolicyDurationTest status=SUCCESS method=PurgePolicyPageTest.validatePurgePolicyDurationTest(java.lang.reflect.Method)[pri:34, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:18:20 IST" name="initialization" finished-at="2023-04-18T21:18:26 IST" duration-ms="6596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method)[pri:35, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:18:26 IST" name="validateUpdatePurgePolicyEntityTest" finished-at="2023-04-18T21:18:57 IST" depends-on-methods="com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyDurationTest" duration-ms="31023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Purge policy saved successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatePurgePolicyEntityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T21:18:57 IST" name="getResult" finished-at="2023-04-18T21:19:00 IST" duration-ms="2905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatePurgePolicyEntityTest status=SUCCESS method=PurgePolicyPageTest.validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method)[pri:35, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T23:08:18 IST" name="initialization" finished-at="2023-04-18T23:08:27 IST" duration-ms="8867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgePolicyPageTest(java.lang.reflect.Method)[pri:160, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T23:08:27 IST" name="validatePurgePolicyPageTest" finished-at="2023-04-18T23:08:51 IST" duration-ms="24515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgePolicyPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e]" started-at="2023-04-18T23:08:51 IST" name="getResult" finished-at="2023-04-18T23:08:56 IST" duration-ms="4157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgePolicyPageTest status=SUCCESS method=PurgePolicyPageTest.validatePurgePolicyPageTest(java.lang.reflect.Method)[pri:160, instance:com.ae.qa.testcases.PurgePolicyPageTest@f0e995e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PurgePolicyPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@2b43529a]" started-at="2023-04-18T22:30:50 IST" name="initialization" finished-at="2023-04-18T22:30:56 IST" duration-ms="5978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateDataSourcePostgresTest(java.lang.reflect.Method)[pri:116, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@2b43529a]" started-at="2023-04-18T22:30:56 IST" name="validateCreateDataSourcePostgresTest" finished-at="2023-04-18T22:31:51 IST" duration-ms="55482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA.validateCreateDataSourcePostgresTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Report tab clicked]]>
            </line>
            <line>
              <![CDATA[DataSource  tab clicked]]>
            </line>
            <line>
              <![CDATA[Data-Source Form opened]]>
            </line>
            <line>
              <![CDATA[Button Clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked.]]>
            </line>
            <line>
              <![CDATA[Datsource created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateDataSourcePostgresTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@2b43529a]" started-at="2023-04-18T22:31:51 IST" name="getResult" finished-at="2023-04-18T22:31:54 IST" duration-ms="2521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateDataSourcePostgresTest status=SUCCESS method=DataSourcesPageTestTA.validateCreateDataSourcePostgresTest(java.lang.reflect.Method)[pri:116, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@2b43529a] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:37:35 IST" name="initialization" finished-at="2023-04-18T21:37:41 IST" duration-ms="6061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCategoryTest(java.lang.reflect.Method)[pri:59, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:37:42 IST" name="ValidateCreateCategoryTest" finished-at="2023-04-18T21:38:26 IST" duration-ms="44086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category name is entered which is only mandatory field]]>
            </line>
            <line>
              <![CDATA[Actual Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Category created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:38:26 IST" name="getResult" finished-at="2023-04-18T21:38:27 IST" duration-ms="1853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateCreateCategoryTest(java.lang.reflect.Method)[pri:59, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:38:27 IST" name="initialization" finished-at="2023-04-18T21:38:34 IST" duration-ms="6157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditCategoryTest(java.lang.reflect.Method)[pri:60, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:38:34 IST" name="ValidateEditCategoryTest" finished-at="2023-04-18T21:39:18 IST" duration-ms="44338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateEditCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit Button corresponding to required category is clicked]]>
            </line>
            <line>
              <![CDATA[Category Description is entered]]>
            </line>
            <line>
              <![CDATA[Actual Category edited message is :Workflow category updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category edited message is :Workflow category updated successfully]]>
            </line>
            <line>
              <![CDATA[Category edited succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:39:18 IST" name="getResult" finished-at="2023-04-18T21:39:20 IST" duration-ms="2350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateEditCategoryTest(java.lang.reflect.Method)[pri:60, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:39:20 IST" name="initialization" finished-at="2023-04-18T21:39:27 IST" duration-ms="6979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateAssignWFToCategoryTest(java.lang.reflect.Method)[pri:61, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:39:27 IST" name="ValidateAssignWFToCategoryTest" finished-at="2023-04-18T21:39:59 IST" duration-ms="31898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateAssignWFToCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Workflow which needs to move is checked]]>
            </line>
            <line>
              <![CDATA[category in which wf needs to move is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Actual message is :Workflow(s) category changed successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Workflow(s) category changed successfully]]>
            </line>
            <line>
              <![CDATA[Workflow assigned to category succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateAssignWFToCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:39:59 IST" name="getResult" finished-at="2023-04-18T21:40:05 IST" duration-ms="5946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateAssignWFToCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateAssignWFToCategoryTest(java.lang.reflect.Method)[pri:61, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:40:05 IST" name="initialization" finished-at="2023-04-18T21:40:13 IST" duration-ms="7854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method)[pri:63, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:40:13 IST" name="ValidateCreateDuplicateCategoryTest" finished-at="2023-04-18T21:40:49 IST" duration-ms="36476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category name is entered which is only mandatory field]]>
            </line>
            <line>
              <![CDATA[Actual message is :Duplicate category name [WebGUI]]]>
            </line>
            <line>
              <![CDATA[Expected message is :Duplicate category name [WebGUI]]]>
            </line>
            <line>
              <![CDATA[Category can't be created with duplicate name]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateDuplicateCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-18T21:40:49 IST" name="getResult" finished-at="2023-04-18T21:41:00 IST" duration-ms="10683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateDuplicateCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method)[pri:63, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:19:52 IST" name="initialization" finished-at="2023-04-19T00:19:58 IST" duration-ms="5928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:19:58 IST" name="ValidateRemoveWFFromCategoryTest" finished-at="2023-04-19T00:20:32 IST" duration-ms="33931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category from which wf needs to remove is selected]]>
            </line>
            <line>
              <![CDATA[Workflow assigned to category is removed]]>
            </line>
            <line>
              <![CDATA[Actual message is :Workflow removed from this category successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Workflow removed from this category successfully]]>
            </line>
            <line>
              <![CDATA[Workflow removed from category succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateRemoveWFFromCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:20:32 IST" name="getResult" finished-at="2023-04-19T00:20:33 IST" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateRemoveWFFromCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:31:00 IST" name="initialization" finished-at="2023-04-19T00:31:06 IST" duration-ms="6345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCategoryTest(java.lang.reflect.Method)[pri:2021, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:31:06 IST" name="ValidateDeleteCategoryTest" finished-at="2023-04-19T00:31:40 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateCategoryTest" duration-ms="33857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateDeleteCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Category  tab clicked]]>
            </line>
            <line>
              <![CDATA[Actual Category deleted message is :Workflow category deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category deleted message is :Workflow category deleted successfully]]>
            </line>
            <line>
              <![CDATA[Category Deleted succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e]" started-at="2023-04-19T00:31:40 IST" name="getResult" finished-at="2023-04-19T00:31:45 IST" duration-ms="5097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateDeleteCategoryTest(java.lang.reflect.Method)[pri:2021, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@3a62c01e] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA -->
      <class name="com.ae.qa.testcases.IntegrationTypesPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:56:30 IST" name="initialization" finished-at="2023-04-18T22:56:39 IST" duration-ms="9017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationTypesTest(java.lang.reflect.Method)[pri:142, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:56:39 IST" name="validateAddIntegrationTypesTest" finished-at="2023-04-18T22:57:17 IST" duration-ms="38201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateAddIntegrationTypesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationTypesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:57:17 IST" name="getResult" finished-at="2023-04-18T22:57:21 IST" duration-ms="4361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationTypesTest status=SUCCESS method=IntegrationTypesPageTest.validateAddIntegrationTypesTest(java.lang.reflect.Method)[pri:142, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:57:21 IST" name="initialization" finished-at="2023-04-18T22:57:30 IST" duration-ms="8449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationTypesTest(java.lang.reflect.Method)[pri:143, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:57:30 IST" name="validateEditIntegrationTypesTest" finished-at="2023-04-18T22:57:53 IST" duration-ms="23295" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateEditIntegrationTypesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Integration type not updated. expected [Integration type jar for [remedyforce] updated successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Integration type not updated. expected [Integration type jar for [remedyforce] updated successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pages.IntegrationTypesPage.validateEditIntegrationTypes(IntegrationTypesPage.java:108)
at com.ae.qa.testcases.IntegrationTypesPageTest.validateEditIntegrationTypesTest(IntegrationTypesPageTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationTypesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T22:57:53 IST" name="getResult" finished-at="2023-04-18T22:57:56 IST" duration-ms="2832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationTypesTest status=FAILURE method=IntegrationTypesPageTest.validateEditIntegrationTypesTest(java.lang.reflect.Method)[pri:143, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:10:07 IST" name="initialization" finished-at="2023-04-18T23:10:13 IST" duration-ms="6057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationTypePageTest(java.lang.reflect.Method)[pri:163, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:10:13 IST" name="validateIntegrationTypePageTest" finished-at="2023-04-18T23:10:37 IST" duration-ms="24585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateIntegrationTypePageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationTypePageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:10:37 IST" name="getResult" finished-at="2023-04-18T23:10:42 IST" duration-ms="4315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationTypePageTest status=SUCCESS method=IntegrationTypesPageTest.validateIntegrationTypePageTest(java.lang.reflect.Method)[pri:163, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:50:00 IST" name="initialization" finished-at="2023-04-18T23:50:06 IST" duration-ms="6051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteIntegrationTypeTest(java.lang.reflect.Method)[pri:1012, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:50:06 IST" name="validateDeleteIntegrationTypeTest" finished-at="2023-04-18T23:50:35 IST" duration-ms="28774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateDeleteIntegrationTypeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success msg is: Integration type [RemedyForce] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected success msg is: Integration type [RemedyForce] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Integration type is deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteIntegrationTypeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5]" started-at="2023-04-18T23:50:35 IST" name="getResult" finished-at="2023-04-18T23:50:43 IST" duration-ms="7855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteIntegrationTypeTest status=SUCCESS method=IntegrationTypesPageTest.validateDeleteIntegrationTypeTest(java.lang.reflect.Method)[pri:1012, instance:com.ae.qa.testcases.IntegrationTypesPageTest@3f363cf5] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.IntegrationTypesPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T21:50:12 IST" name="initialization" finished-at="2023-04-18T21:50:22 IST" duration-ms="9997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSingleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:72, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T21:50:22 IST" name="validateSingleWorkflowAssignmentTest" finished-at="2023-04-18T21:50:53 IST" duration-ms="31346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA.validateSingleWorkflowAssignmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSingleWorkflowAssignmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T21:50:53 IST" name="getResult" finished-at="2023-04-18T21:50:58 IST" duration-ms="4942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSingleWorkflowAssignmentTest status=SUCCESS method=WorkflowAssignmentPageTestTA.validateSingleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:72, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T23:31:01 IST" name="initialization" finished-at="2023-04-18T23:31:08 IST" duration-ms="7636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:709, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T23:31:08 IST" name="validateMultipleWorkflowAssignmentTest" finished-at="2023-04-18T23:31:37 IST" duration-ms="28472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA.validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflows checkbox is clicked]]>
            </line>
            <line>
              <![CDATA[All workflow are selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMultipleWorkflowAssignmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed]" started-at="2023-04-18T23:31:37 IST" name="getResult" finished-at="2023-04-18T23:31:54 IST" duration-ms="16787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMultipleWorkflowAssignmentTest status=SUCCESS method=WorkflowAssignmentPageTestTA.validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:709, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@78a287ed] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA -->
      <class name="com.ae.qa.testcases.SmtpPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T21:00:57 IST" name="initialization" finished-at="2023-04-18T21:01:05 IST" duration-ms="7470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddSmtpServerTest(java.lang.reflect.Method)[pri:20, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T21:01:05 IST" name="validateAddSmtpServerTest" finished-at="2023-04-18T21:02:00 IST" duration-ms="55031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SmtpPageTest.validateAddSmtpServerTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Add smtp config button clicked]]>
            </line>
            <line>
              <![CDATA[Test connection successfully]]>
            </line>
            <line>
              <![CDATA[SMTP configured successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddSmtpServerTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T21:02:00 IST" name="getResult" finished-at="2023-04-18T21:02:07 IST" duration-ms="7313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddSmtpServerTest status=SUCCESS method=SmtpPageTest.validateAddSmtpServerTest(java.lang.reflect.Method)[pri:20, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T23:11:50 IST" name="initialization" finished-at="2023-04-18T23:11:56 IST" duration-ms="6232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSMTPPageTest(java.lang.reflect.Method)[pri:166, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T23:11:56 IST" name="validateSMTPPageTest" finished-at="2023-04-18T23:12:23 IST" duration-ms="26571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SmtpPageTest.validateSMTPPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Email Configuration and Expected page title is: Email Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSMTPPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6]" started-at="2023-04-18T23:12:23 IST" name="getResult" finished-at="2023-04-18T23:12:25 IST" duration-ms="2457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSMTPPageTest status=SUCCESS method=SmtpPageTest.validateSMTPPageTest(java.lang.reflect.Method)[pri:166, instance:com.ae.qa.testcases.SmtpPageTest@4f2c9ba6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SmtpPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@22d6f11]" started-at="2023-04-18T23:00:20 IST" name="initialization" finished-at="2023-04-18T23:00:28 IST" duration-ms="7769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method)[pri:151, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@22d6f11]" started-at="2023-04-18T23:00:28 IST" name="ValidateConfigureOKTAwidOpenIDTest" finished-at="2023-04-18T23:02:33 IST" duration-ms="125205" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.sendKeys(Unknown Source)
at com.ae.qa.pagesTenantAdmin.TenantUserSSOPageTA.ValidateConfigureOKTAwidOpenID(TenantUserSSOPageTA.java:127)
at com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(TenantUserSSOPageTestTA.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single Sign-on Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateConfigureOKTAwidOpenIDTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@22d6f11]" started-at="2023-04-18T23:02:33 IST" name="getResult" finished-at="2023-04-18T23:03:00 IST" duration-ms="27644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateConfigureOKTAwidOpenIDTest status=FAILURE method=TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method)[pri:151, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@22d6f11] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@15eebbff]" started-at="2023-04-18T22:59:36 IST" name="initialization" finished-at="2023-04-18T22:59:46 IST" duration-ms="10147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTypeConfBothTATest(java.lang.reflect.Method)[pri:150, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@15eebbff]" started-at="2023-04-18T22:59:46 IST" name="validateTypeConfBothTATest" finished-at="2023-04-18T23:00:17 IST" duration-ms="31562" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: IntService1ForMadhuRani2
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: IntService1ForMadhuRani2
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
at com.ae.qa.pagesTenantAdmin.IntegrationTypeConfigPageTA.validateTypeConfBothTA(IntegrationTypeConfigPageTA.java:114)
at com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(IntegrationTypeConfigPageTestTA.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Type selected from dropdown]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTypeConfBothTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@15eebbff]" started-at="2023-04-18T23:00:17 IST" name="getResult" finished-at="2023-04-18T23:00:20 IST" duration-ms="2514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTypeConfBothTATest status=FAILURE method=IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(java.lang.reflect.Method)[pri:150, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@15eebbff] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:31:54 IST" name="initialization" finished-at="2023-04-18T23:32:16 IST" duration-ms="22547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateHolidayCalenderTest(java.lang.reflect.Method)[pri:716, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:32:16 IST" name="validateCreateHolidayCalenderTest" finished-at="2023-04-18T23:33:00 IST" duration-ms="43659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:33:00 IST" name="getResult" finished-at="2023-04-18T23:33:23 IST" duration-ms="22682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateCreateHolidayCalenderTest(java.lang.reflect.Method)[pri:716, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:33:23 IST" name="initialization" finished-at="2023-04-18T23:33:31 IST" duration-ms="8962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method)[pri:717, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:33:31 IST" name="validateCreateHolidayCalenderUpcomingYearTest" finished-at="2023-04-18T23:34:15 IST" duration-ms="43139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateHolidayCalenderUpcomingYearTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:34:15 IST" name="getResult" finished-at="2023-04-18T23:34:21 IST" duration-ms="6212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateHolidayCalenderUpcomingYearTest status=SUCCESS method=HolidayCalenderPageTestTA.validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method)[pri:717, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:34:21 IST" name="initialization" finished-at="2023-04-18T23:34:29 IST" duration-ms="8161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditHolidayCalenderTest(java.lang.reflect.Method)[pri:718, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:34:29 IST" name="validateEditHolidayCalenderTest" finished-at="2023-04-18T23:35:02 IST" duration-ms="32599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:35:02 IST" name="getResult" finished-at="2023-04-18T23:35:04 IST" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateEditHolidayCalenderTest(java.lang.reflect.Method)[pri:718, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:35:04 IST" name="initialization" finished-at="2023-04-18T23:35:11 IST" duration-ms="7039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveHolidayListDatesTest(java.lang.reflect.Method)[pri:719, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:35:11 IST" name="validateRemoveHolidayListDatesTest" finished-at="2023-04-18T23:35:55 IST" duration-ms="44525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRemoveHolidayListDatesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveHolidayListDatesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:35:55 IST" name="getResult" finished-at="2023-04-18T23:35:57 IST" duration-ms="1601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveHolidayListDatesTest status=SUCCESS method=HolidayCalenderPageTestTA.validateRemoveHolidayListDatesTest(java.lang.reflect.Method)[pri:719, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:35:57 IST" name="initialization" finished-at="2023-04-18T23:36:03 IST" duration-ms="5550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:720, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:36:03 IST" name="validateCreateCloneHolidayCalenderTest" finished-at="2023-04-18T23:36:28 IST" duration-ms="25318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateCloneHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:36:28 IST" name="getResult" finished-at="2023-04-18T23:36:29 IST" duration-ms="1333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCloneHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:720, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:36:29 IST" name="initialization" finished-at="2023-04-18T23:36:36 IST" duration-ms="7072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:721, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:36:36 IST" name="validateEditCloneHolidayCalenderTest" finished-at="2023-04-18T23:37:08 IST" duration-ms="31541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditCloneHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditCloneHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:37:08 IST" name="getResult" finished-at="2023-04-18T23:37:12 IST" duration-ms="4434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditCloneHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateEditCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:721, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:37:12 IST" name="initialization" finished-at="2023-04-18T23:37:21 IST" duration-ms="8237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRenewHoildayCalenderTest(java.lang.reflect.Method)[pri:722, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:37:21 IST" name="validateRenewHoildayCalenderTest" finished-at="2023-04-18T23:38:15 IST" duration-ms="54091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRenewHoildayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRenewHoildayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:38:15 IST" name="getResult" finished-at="2023-04-18T23:38:19 IST" duration-ms="4037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRenewHoildayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateRenewHoildayCalenderTest(java.lang.reflect.Method)[pri:722, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:38:19 IST" name="initialization" finished-at="2023-04-18T23:38:30 IST" duration-ms="11706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditRenewHolidayCalenderTest(java.lang.reflect.Method)[pri:723, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:38:30 IST" name="validateEditRenewHolidayCalenderTest" finished-at="2023-04-18T23:38:36 IST" duration-ms="5275" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditRenewHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64364}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05efa1fec10efe522b57bd28da551b99]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:64364}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05efa1fec10efe522b57bd28da551b99
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at com.ae.qa.pagesTenantAdmin.HolidayCalenderPageTA.validateEditRenewHolidayCalender(HolidayCalenderPageTA.java:339)
at com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditRenewHolidayCalenderTest(HolidayCalenderPageTestTA.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditRenewHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:38:36 IST" name="getResult" finished-at="2023-04-18T23:38:57 IST" duration-ms="21566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditRenewHolidayCalenderTest status=FAILURE method=HolidayCalenderPageTestTA.validateEditRenewHolidayCalenderTest(java.lang.reflect.Method)[pri:723, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:38:57 IST" name="initialization" finished-at="2023-04-18T23:39:06 IST" duration-ms="8576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method)[pri:724, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:39:06 IST" name="validateRemoveHoildayDatesRenewTest" finished-at="2023-04-18T23:39:58 IST" duration-ms="51740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveHoildayDatesRenewTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:39:58 IST" name="getResult" finished-at="2023-04-18T23:39:59 IST" duration-ms="1681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveHoildayDatesRenewTest status=SUCCESS method=HolidayCalenderPageTestTA.validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method)[pri:724, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:39:59 IST" name="initialization" finished-at="2023-04-18T23:40:06 IST" duration-ms="6561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteHolidayCalenderTest(java.lang.reflect.Method)[pri:725, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:40:06 IST" name="validateDeleteHolidayCalenderTest" finished-at="2023-04-18T23:40:31 IST" duration-ms="25065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateDeleteHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:40:31 IST" name="getResult" finished-at="2023-04-18T23:40:33 IST" duration-ms="2235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateDeleteHolidayCalenderTest(java.lang.reflect.Method)[pri:725, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:40:33 IST" name="initialization" finished-at="2023-04-18T23:40:41 IST" duration-ms="7697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateHolidayCalenderPageTest(java.lang.reflect.Method)[pri:726, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:40:41 IST" name="validateHolidayCalenderPageTest" finished-at="2023-04-18T23:40:56 IST" duration-ms="15588" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateHolidayCalenderPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Holiday Calendar and Expected page title is: Holiday Calendar]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateHolidayCalenderPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b]" started-at="2023-04-18T23:40:56 IST" name="getResult" finished-at="2023-04-18T23:40:59 IST" duration-ms="2452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateHolidayCalenderPageTest status=SUCCESS method=HolidayCalenderPageTestTA.validateHolidayCalenderPageTest(java.lang.reflect.Method)[pri:726, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@30990c1b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA -->
      <class name="com.ae.qa.testcases.FileManagementPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T22:46:39 IST" name="initialization" finished-at="2023-04-18T22:46:45 IST" duration-ms="5928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadDriverTest(java.lang.reflect.Method)[pri:132, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T22:46:45 IST" name="validateUploadDriverTest" finished-at="2023-04-18T22:47:26 IST" duration-ms="40876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Upload Button is clicked]]>
            </line>
            <line>
              <![CDATA[Plugin Name is selected]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Chrome driver uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T22:47:26 IST" name="getResult" finished-at="2023-04-18T22:47:28 IST" duration-ms="2441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateUploadDriverTest(java.lang.reflect.Method)[pri:132, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:10:42 IST" name="initialization" finished-at="2023-04-18T23:10:47 IST" duration-ms="5805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateFileManagmentPageTest(java.lang.reflect.Method)[pri:164, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:10:47 IST" name="validateFileManagmentPageTest" finished-at="2023-04-18T23:11:12 IST" duration-ms="24636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateFileManagmentPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Plugin Files and Expected page title is: Plugin Files]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateFileManagmentPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:11:12 IST" name="getResult" finished-at="2023-04-18T23:11:14 IST" duration-ms="1923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFileManagmentPageTest status=SUCCESS method=FileManagementPageTest.validateFileManagmentPageTest(java.lang.reflect.Method)[pri:164, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:44:00 IST" name="initialization" finished-at="2023-04-18T23:44:06 IST" duration-ms="6068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditUploadDriverTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:44:06 IST" name="validateEditUploadDriverTest" finished-at="2023-04-18T23:44:37 IST" duration-ms="30518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateEditUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Chrome driver is edited successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:44:37 IST" name="getResult" finished-at="2023-04-18T23:44:38 IST" duration-ms="1379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateEditUploadDriverTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:44:38 IST" name="initialization" finished-at="2023-04-18T23:44:44 IST" duration-ms="6142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUploadDriverTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:44:44 IST" name="validateDeleteUploadDriverTest" finished-at="2023-04-18T23:45:11 IST" duration-ms="26644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateDeleteUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Chrome driver is deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201]" started-at="2023-04-18T23:45:11 IST" name="getResult" finished-at="2023-04-18T23:45:13 IST" duration-ms="2428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateDeleteUploadDriverTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcases.FileManagementPageTest@75e01201] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.FileManagementPageTest -->
      <class name="com.ae.qa.testcases.SystemSettingsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:57:31 IST" name="initialization" finished-at="2023-04-18T20:57:39 IST" duration-ms="8016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentServerNotSetTest(java.lang.reflect.Method)[pri:16, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:57:39 IST" name="validateAgentServerNotSetTest" finished-at="2023-04-18T20:58:39 IST" duration-ms="59577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateAgentServerNotSetTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Server Settings are not done, validated successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[When server settings are not done & user try to download agent.Popup is : It seems you have not configured the server URL for this server. Please contact administrator]]>
            </line>
            <line>
              <![CDATA[Agent can't be download due ro server settings,Error validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentServerNotSetTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:58:39 IST" name="getResult" finished-at="2023-04-18T20:58:51 IST" duration-ms="12593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentServerNotSetTest status=SUCCESS method=SystemSettingsPageTest.validateAgentServerNotSetTest(java.lang.reflect.Method)[pri:16, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:58:51 IST" name="initialization" finished-at="2023-04-18T20:58:59 IST" duration-ms="8094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateInvalidURLTest(java.lang.reflect.Method)[pri:17, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:58:59 IST" name="validateInvalidURLTest" finished-at="2023-04-18T20:59:27 IST" duration-ms="27264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateInvalidURLTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateInvalidURLTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:59:27 IST" name="getResult" finished-at="2023-04-18T20:59:29 IST" duration-ms="2558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInvalidURLTest status=SUCCESS method=SystemSettingsPageTest.validateInvalidURLTest(java.lang.reflect.Method)[pri:17, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:59:29 IST" name="initialization" finished-at="2023-04-18T20:59:37 IST" duration-ms="7658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateServerUrlTest(java.lang.reflect.Method)[pri:18, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T20:59:37 IST" name="validateServerUrlTest" finished-at="2023-04-18T21:00:06 IST" duration-ms="29067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateServerUrlTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateServerUrlTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T21:00:06 IST" name="getResult" finished-at="2023-04-18T21:00:10 IST" duration-ms="4002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateServerUrlTest status=SUCCESS method=SystemSettingsPageTest.validateServerUrlTest(java.lang.reflect.Method)[pri:18, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T21:00:10 IST" name="initialization" finished-at="2023-04-18T21:00:18 IST" duration-ms="7584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditCleanUpRequest(java.lang.reflect.Method)[pri:19, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T21:00:18 IST" name="validateEditCleanUpRequest" finished-at="2023-04-18T21:00:48 IST" duration-ms="30024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateEditCleanUpRequest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Server URL field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Clean Up Requests Hours field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditCleanUpRequest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T21:00:48 IST" name="getResult" finished-at="2023-04-18T21:00:57 IST" duration-ms="9454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditCleanUpRequest status=SUCCESS method=SystemSettingsPageTest.validateEditCleanUpRequest(java.lang.reflect.Method)[pri:19, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T23:11:14 IST" name="initialization" finished-at="2023-04-18T23:11:19 IST" duration-ms="5136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSystemSettingsPageTest(java.lang.reflect.Method)[pri:165, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T23:11:19 IST" name="validateSystemSettingsPageTest" finished-at="2023-04-18T23:11:43 IST" duration-ms="24414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateSystemSettingsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: System Settings and Expected page title is: System Settings]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSystemSettingsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956]" started-at="2023-04-18T23:11:43 IST" name="getResult" finished-at="2023-04-18T23:11:50 IST" duration-ms="6509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSystemSettingsPageTest status=SUCCESS method=SystemSettingsPageTest.validateSystemSettingsPageTest(java.lang.reflect.Method)[pri:165, instance:com.ae.qa.testcases.SystemSettingsPageTest@1e1d3956] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SystemSettingsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:56:52 IST" name="initialization" finished-at="2023-04-18T21:57:01 IST" duration-ms="8659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDailyScheduleTest(java.lang.reflect.Method)[pri:81, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:57:01 IST" name="validateDailyScheduleTest" finished-at="2023-04-18T21:58:04 IST" duration-ms="63234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateDailyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Daily Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDailyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:58:04 IST" name="getResult" finished-at="2023-04-18T21:58:15 IST" duration-ms="10910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDailyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateDailyScheduleTest(java.lang.reflect.Method)[pri:81, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:58:15 IST" name="initialization" finished-at="2023-04-18T21:58:23 IST" duration-ms="8529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDailyScheduleTest(java.lang.reflect.Method)[pri:82, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:58:23 IST" name="validateEditDailyScheduleTest" finished-at="2023-04-18T21:59:03 IST" duration-ms="39939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditDailyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[End date changed]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDailyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:59:03 IST" name="getResult" finished-at="2023-04-18T21:59:05 IST" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDailyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditDailyScheduleTest(java.lang.reflect.Method)[pri:82, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:59:05 IST" name="initialization" finished-at="2023-04-18T21:59:11 IST" duration-ms="6467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWeeklyScheduleTest(java.lang.reflect.Method)[pri:83, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T21:59:11 IST" name="validateWeeklyScheduleTest" finished-at="2023-04-18T22:00:34 IST" duration-ms="82683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateWeeklyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Start day selected]]>
            </line>
            <line>
              <![CDATA[End day selected]]>
            </line>
            <line>
              <![CDATA[Schedule type selected]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[End Time is selected]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWeeklyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:00:34 IST" name="getResult" finished-at="2023-04-18T22:00:37 IST" duration-ms="2845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWeeklyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateWeeklyScheduleTest(java.lang.reflect.Method)[pri:83, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:00:37 IST" name="initialization" finished-at="2023-04-18T22:00:45 IST" duration-ms="7828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMonthlyScheduleTest(java.lang.reflect.Method)[pri:84, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:00:45 IST" name="validateMonthlyScheduleTest" finished-at="2023-04-18T22:02:08 IST" duration-ms="83003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateMonthlyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[End Time is selected]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMonthlyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:02:08 IST" name="getResult" finished-at="2023-04-18T22:02:11 IST" duration-ms="3425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMonthlyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateMonthlyScheduleTest(java.lang.reflect.Method)[pri:84, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:02:11 IST" name="initialization" finished-at="2023-04-18T22:02:22 IST" duration-ms="10875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateInfineScheduleTest(java.lang.reflect.Method)[pri:85, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:02:22 IST" name="validateInfineScheduleTest" finished-at="2023-04-18T22:03:35 IST" duration-ms="73438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateInfineScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Run Schedule Infinitely checbox selected]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Infinite Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateInfineScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:03:35 IST" name="getResult" finished-at="2023-04-18T22:03:38 IST" duration-ms="2591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInfineScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateInfineScheduleTest(java.lang.reflect.Method)[pri:85, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:03:38 IST" name="initialization" finished-at="2023-04-18T22:03:47 IST" duration-ms="9030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTransferScheduleTest(java.lang.reflect.Method)[pri:87, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:03:47 IST" name="validateTransferScheduleTest" finished-at="2023-04-18T22:04:15 IST" duration-ms="28140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateTransferScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add Transfer Schedule button is clicked]]>
            </line>
            <line>
              <![CDATA[User from whom schedule needs to transfer is selcted]]>
            </line>
            <line>
              <![CDATA[User to whom schedule needs to is selcted]]>
            </line>
            <line>
              <![CDATA[Transfer button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedules transferred successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedules transferred successfully]]>
            </line>
            <line>
              <![CDATA[Schedule transfered successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTransferScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T22:04:15 IST" name="getResult" finished-at="2023-04-18T22:04:19 IST" duration-ms="3570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransferScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateTransferScheduleTest(java.lang.reflect.Method)[pri:87, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:13:48 IST" name="initialization" finished-at="2023-04-18T23:13:54 IST" duration-ms="6717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSchedulerPageTATest(java.lang.reflect.Method)[pri:174, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:13:54 IST" name="validateSchedulerPageTATest" finished-at="2023-04-18T23:14:10 IST" duration-ms="15781" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateSchedulerPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Scheduler and Expected page title is: Scheduler]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSchedulerPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:14:10 IST" name="getResult" finished-at="2023-04-18T23:14:19 IST" duration-ms="8622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSchedulerPageTATest status=SUCCESS method=SchedulerPageTestTA.validateSchedulerPageTATest(java.lang.reflect.Method)[pri:174, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:40:59 IST" name="initialization" finished-at="2023-04-18T23:41:04 IST" duration-ms="5558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteScheduleTest(java.lang.reflect.Method)[pri:999, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:41:04 IST" name="validateDeleteScheduleTest" finished-at="2023-04-18T23:41:27 IST" duration-ms="22845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateDeleteScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Schedule got disable]]>
            </line>
            <line>
              <![CDATA[Delete schedule button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:For automation deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:For automation deleted successfully]]>
            </line>
            <line>
              <![CDATA[Schedule deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-18T23:41:27 IST" name="getResult" finished-at="2023-04-18T23:41:29 IST" duration-ms="2074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateDeleteScheduleTest(java.lang.reflect.Method)[pri:999, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:05:50 IST" name="initialization" finished-at="2023-04-19T00:05:56 IST" duration-ms="6434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWeeklyScheduleTest(java.lang.reflect.Method)[pri:1039, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:05:56 IST" name="validateEditWeeklyScheduleTest" finished-at="2023-04-19T00:06:25 IST" duration-ms="28465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditWeeklyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWeeklyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:06:25 IST" name="getResult" finished-at="2023-04-19T00:06:31 IST" duration-ms="5804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWeeklyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditWeeklyScheduleTest(java.lang.reflect.Method)[pri:1039, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:06:31 IST" name="initialization" finished-at="2023-04-19T00:06:37 IST" duration-ms="5980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditMonthlyScheduleTest(java.lang.reflect.Method)[pri:1040, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:06:37 IST" name="validateEditMonthlyScheduleTest" finished-at="2023-04-19T00:07:01 IST" duration-ms="24643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditMonthlyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditMonthlyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:07:01 IST" name="getResult" finished-at="2023-04-19T00:07:06 IST" duration-ms="4916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditMonthlyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditMonthlyScheduleTest(java.lang.reflect.Method)[pri:1040, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:07:06 IST" name="initialization" finished-at="2023-04-19T00:07:12 IST" duration-ms="5580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditInfineScheduleTest(java.lang.reflect.Method)[pri:1041, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:07:12 IST" name="validateEditInfineScheduleTest" finished-at="2023-04-19T00:07:43 IST" duration-ms="31132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditInfineScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditInfineScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389]" started-at="2023-04-19T00:07:43 IST" name="getResult" finished-at="2023-04-19T00:07:55 IST" duration-ms="12366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditInfineScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditInfineScheduleTest(java.lang.reflect.Method)[pri:1041, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@7a527389] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:25:52 IST" name="initialization" finished-at="2023-04-18T21:26:00 IST" duration-ms="7609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method)[pri:44, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:26:00 IST" name="ValidateCreatingWorkflowAdminTest" finished-at="2023-04-18T21:26:49 IST" duration-ms="48791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Workflow Admin]]>
            </line>
            <line>
              <![CDATA[Workflow Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Workflow Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingWorkflowAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:26:49 IST" name="getResult" finished-at="2023-04-18T21:27:12 IST" duration-ms="23299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingWorkflowAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method)[pri:44, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:27:12 IST" name="initialization" finished-at="2023-04-18T21:27:19 IST" duration-ms="6930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:45, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:27:19 IST" name="ValidateCreatingTenantAdminTest" finished-at="2023-04-18T21:28:07 IST" duration-ms="48294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingTenantAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant Admin]]>
            </line>
            <line>
              <![CDATA[Tenant Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:28:07 IST" name="getResult" finished-at="2023-04-18T21:28:11 IST" duration-ms="4141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:45, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:28:11 IST" name="initialization" finished-at="2023-04-18T21:28:22 IST" duration-ms="10967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingUserAdminTest(java.lang.reflect.Method)[pri:46, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:28:22 IST" name="ValidateCreatingUserAdminTest" finished-at="2023-04-18T21:29:11 IST" duration-ms="49183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingUserAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Admin]]>
            </line>
            <line>
              <![CDATA[User Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[User Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingUserAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:29:11 IST" name="getResult" finished-at="2023-04-18T21:29:16 IST" duration-ms="4124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingUserAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingUserAdminTest(java.lang.reflect.Method)[pri:46, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:29:16 IST" name="initialization" finished-at="2023-04-18T21:29:23 IST" duration-ms="7948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantUserTest(java.lang.reflect.Method)[pri:47, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:29:23 IST" name="ValidateCreatingTenantUserTest" finished-at="2023-04-18T21:30:14 IST" duration-ms="50699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:30:14 IST" name="getResult" finished-at="2023-04-18T21:30:31 IST" duration-ms="16810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantUserTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingTenantUserTest(java.lang.reflect.Method)[pri:47, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:54:45 IST" name="initialization" finished-at="2023-04-18T21:54:52 IST" duration-ms="7282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUnverifiedStatusTest(java.lang.reflect.Method)[pri:79, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:54:52 IST" name="ValidateUnverifiedStatusTest" finished-at="2023-04-18T21:55:56 IST" duration-ms="64007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateUnverifiedStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Status of New Tenant user is :UNVERIFIED]]>
            </line>
            <line>
              <![CDATA[Expected Status of New Tenant user is :UNVERIFIED]]>
            </line>
            <line>
              <![CDATA[Status of newly created user is UNVERIFIED, verified successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUnverifiedStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:55:56 IST" name="getResult" finished-at="2023-04-18T21:55:59 IST" duration-ms="2626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUnverifiedStatusTest status=SUCCESS method=TenantUsersPageTestTA.ValidateUnverifiedStatusTest(java.lang.reflect.Method)[pri:79, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:55:59 IST" name="initialization" finished-at="2023-04-18T21:56:06 IST" duration-ms="6615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateActiveStatusTest(java.lang.reflect.Method)[pri:80, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:56:06 IST" name="ValidateActiveStatusTest" finished-at="2023-04-18T21:56:50 IST" duration-ms="44572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateActiveStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Login into TA to verify status]]>
            </line>
            <line>
              <![CDATA[Actual Status of Tenant user after changing password is :ACTIVE]]>
            </line>
            <line>
              <![CDATA[Expected Status of Tenant user after changing password is :ACTIVE]]>
            </line>
            <line>
              <![CDATA[Status of user whose First time password changed is ACTIVE, verified successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateActiveStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T21:56:50 IST" name="getResult" finished-at="2023-04-18T21:56:52 IST" duration-ms="1847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateActiveStatusTest status=SUCCESS method=TenantUsersPageTestTA.ValidateActiveStatusTest(java.lang.reflect.Method)[pri:80, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T22:41:40 IST" name="initialization" finished-at="2023-04-18T22:41:48 IST" duration-ms="7251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="valiateEnableLockedUserTest(java.lang.reflect.Method)[pri:127, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T22:41:48 IST" name="valiateEnableLockedUserTest" finished-at="2023-04-18T22:42:20 IST" duration-ms="32352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.valiateEnableLockedUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Locked button clicked]]>
            </line>
            <line>
              <![CDATA[Action is selected to UNLOCK user and next button is clicked]]>
            </line>
            <line>
              <![CDATA[MadhuRani1enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- valiateEnableLockedUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T22:42:20 IST" name="getResult" finished-at="2023-04-18T22:42:22 IST" duration-ms="1568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valiateEnableLockedUserTest status=SUCCESS method=TenantUsersPageTestTA.valiateEnableLockedUserTest(java.lang.reflect.Method)[pri:127, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:17:29 IST" name="initialization" finished-at="2023-04-18T23:17:35 IST" duration-ms="6113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method)[pri:303, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:17:35 IST" name="ValidateBulkUserUploadWithEmailTest" finished-at="2023-04-18T23:19:03 IST" duration-ms="87547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dropdown Selector button is selected]]>
            </line>
            <line>
              <![CDATA[Native Users is Selected]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Rohil]]>
            </line>
            <line>
              <![CDATA[Omkar]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateBulkUserUploadWithEmailTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:19:03 IST" name="getResult" finished-at="2023-04-18T23:19:14 IST" duration-ms="10915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateBulkUserUploadWithEmailTest status=SUCCESS method=TenantUsersPageTestTA.ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method)[pri:303, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:19:14 IST" name="initialization" finished-at="2023-04-18T23:19:21 IST" duration-ms="7525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method)[pri:304, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:19:21 IST" name="ValidateBulkUserUploadWithoutEmailTest" finished-at="2023-04-18T23:20:49 IST" duration-ms="87910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dropdown Selector button is selected]]>
            </line>
            <line>
              <![CDATA[Native Users is Selected]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Suyash]]>
            </line>
            <line>
              <![CDATA[Jitin]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateBulkUserUploadWithoutEmailTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-18T23:20:49 IST" name="getResult" finished-at="2023-04-18T23:20:51 IST" duration-ms="2077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateBulkUserUploadWithoutEmailTest status=SUCCESS method=TenantUsersPageTestTA.ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method)[pri:304, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:07:55 IST" name="initialization" finished-at="2023-04-19T00:08:03 IST" duration-ms="7890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method)[pri:1043, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:08:03 IST" name="ValidateUnlockUserAccessApplicationTest" finished-at="2023-04-19T00:08:28 IST" duration-ms="25366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User is able to access the application as per his role]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUnlockUserAccessApplicationTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:08:28 IST" name="getResult" finished-at="2023-04-19T00:08:32 IST" duration-ms="3663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUnlockUserAccessApplicationTest status=SUCCESS method=TenantUsersPageTestTA.ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method)[pri:1043, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:08:32 IST" name="initialization" finished-at="2023-04-19T00:08:39 IST" duration-ms="7126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEnableUser(java.lang.reflect.Method)[pri:1044, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:08:39 IST" name="ValidateEnableUser" finished-at="2023-04-19T00:10:37 IST" duration-ms="117772" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateEnableUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Appropriate message is not loaded expected [Your account is inaccessible . Please contact your Administrator.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Appropriate message is not loaded expected [Your account is inaccessible . Please contact your Administrator.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.TenantUsersPageTA.validateEnableUser(TenantUsersPageTA.java:545)
at com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateEnableUser(TenantUsersPageTestTA.java:146)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant User]]>
            </line>
            <line>
              <![CDATA[Tenant User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User signed in successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Active button is clicked]]>
            </line>
            <line>
              <![CDATA[Disabled button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Actual Message on screen is:  and Expected message is: Your account is inaccessible . Please contact your Administrator.]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEnableUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:10:37 IST" name="getResult" finished-at="2023-04-19T00:10:39 IST" duration-ms="1619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEnableUser status=FAILURE method=TenantUsersPageTestTA.ValidateEnableUser(java.lang.reflect.Method)[pri:1044, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:10:39 IST" name="initialization" finished-at="2023-04-19T00:10:44 IST" duration-ms="5001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDisabledUserTuserTest(java.lang.reflect.Method)[pri:1045, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:10:44 IST" name="ValidateDisabledUserTuserTest" finished-at="2023-04-19T00:12:23 IST" duration-ms="99083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateDisabledUserTuserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Active button is clicked]]>
            </line>
            <line>
              <![CDATA[Disabled button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDisabledUserTuserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:12:23 IST" name="getResult" finished-at="2023-04-19T00:12:24 IST" duration-ms="775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDisabledUserTuserTest status=SUCCESS method=TenantUsersPageTestTA.ValidateDisabledUserTuserTest(java.lang.reflect.Method)[pri:1045, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:12:24 IST" name="initialization" finished-at="2023-04-19T00:12:29 IST" duration-ms="5275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisabledDeleteTuserTest(java.lang.reflect.Method)[pri:1046, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:12:29 IST" name="validateDisabledDeleteTuserTest" finished-at="2023-04-19T00:12:58 IST" duration-ms="29351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateDisabledDeleteTuserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Delete this user checkbox is selected]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDisabledDeleteTuserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:12:58 IST" name="getResult" finished-at="2023-04-19T00:13:00 IST" duration-ms="1612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisabledDeleteTuserTest status=SUCCESS method=TenantUsersPageTestTA.validateDisabledDeleteTuserTest(java.lang.reflect.Method)[pri:1046, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:13:00 IST" name="initialization" finished-at="2023-04-19T00:13:05 IST" duration-ms="5400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditTenantUserTest(java.lang.reflect.Method)[pri:1047, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:13:05 IST" name="validateEditTenantUserTest" finished-at="2023-04-19T00:14:31 IST" duration-ms="85901" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateEditTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Tenant User details not edited successfully expected [User updated successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Tenant User details not edited successfully expected [User updated successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.TenantUsersPageTA.validateEditTenantUser(TenantUsersPageTA.java:722)
at com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateEditTenantUserTest(TenantUsersPageTestTA.java:179)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Workflow Admin]]>
            </line>
            <line>
              <![CDATA[Workflow Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Workflow Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Current Tenant Role is Workflow Admin]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Users Tab is Clicked]]>
            </line>
            <line>
              <![CDATA[TenantUsers Tab is Clicked]]>
            </line>
            <line>
              <![CDATA[Edit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Email Id is edited successfully]]>
            </line>
            <line>
              <![CDATA[New Role is edited successfully]]>
            </line>
            <line>
              <![CDATA[Save Button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:14:31 IST" name="getResult" finished-at="2023-04-19T00:14:37 IST" duration-ms="5674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditTenantUserTest status=FAILURE method=TenantUsersPageTestTA.validateEditTenantUserTest(java.lang.reflect.Method)[pri:1047, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:14:37 IST" name="initialization" finished-at="2023-04-19T00:14:44 IST" duration-ms="6824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method)[pri:1048, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:14:44 IST" name="validateCreateActivityMonitorSpaceInUsernameTest" finished-at="2023-04-19T00:15:57 IST" duration-ms="72952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Activity Monitor]]>
            </line>
            <line>
              <![CDATA[Activity Monitor is created successfully]]>
            </line>
            <line>
              <![CDATA[Activity Monitor created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Activity Monitor role with space in username is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateActivityMonitorSpaceInUsernameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:15:57 IST" name="getResult" finished-at="2023-04-19T00:15:59 IST" duration-ms="2266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateActivityMonitorSpaceInUsernameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method)[pri:1048, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:15:59 IST" name="initialization" finished-at="2023-04-19T00:16:04 IST" duration-ms="5109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method)[pri:1049, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:16:04 IST" name="validateCreateAgentAdminApostropheLastnameTest" finished-at="2023-04-19T00:17:16 IST" duration-ms="72162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Agent Admin]]>
            </line>
            <line>
              <![CDATA[Agent Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Agent Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Agent admin role with Apostrophe in last name is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateAgentAdminApostropheLastnameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:17:16 IST" name="getResult" finished-at="2023-04-19T00:17:17 IST" duration-ms="574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateAgentAdminApostropheLastnameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method)[pri:1049, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:17:17 IST" name="initialization" finished-at="2023-04-19T00:17:22 IST" duration-ms="5771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method)[pri:1050, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:17:22 IST" name="validateCreateUserAdminEmailidUsernameTest" finished-at="2023-04-19T00:18:35 IST" duration-ms="72353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Admin]]>
            </line>
            <line>
              <![CDATA[User Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[User Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User admin role with Email id in username is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateUserAdminEmailidUsernameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44]" started-at="2023-04-19T00:18:35 IST" name="getResult" finished-at="2023-04-19T00:18:36 IST" duration-ms="865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateUserAdminEmailidUsernameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method)[pri:1050, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@a8c1f44] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA -->
      <class name="com.ae.qa.testcases.TenantUsersPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:45:01 IST" name="initialization" finished-at="2023-04-18T20:45:10 IST" duration-ms="9281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:8, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:45:10 IST" name="ValidateCreatingTenantAdminTest" finished-at="2023-04-18T20:46:10 IST" duration-ms="59503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.ValidateCreatingTenantAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:46:10 IST" name="getResult" finished-at="2023-04-18T20:46:21 IST" duration-ms="11291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantAdminTest status=SUCCESS method=TenantUsersPageTest.ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:8, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:46:21 IST" name="initialization" finished-at="2023-04-18T20:46:29 IST" duration-ms="8152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditTenantUserTest(java.lang.reflect.Method)[pri:9, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:46:29 IST" name="ValidateEditTenantUserTest" finished-at="2023-04-18T20:48:47 IST" duration-ms="137553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.ValidateEditTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User details got edited.]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T20:48:47 IST" name="getResult" finished-at="2023-04-18T20:48:49 IST" duration-ms="1732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditTenantUserTest status=SUCCESS method=TenantUsersPageTest.ValidateEditTenantUserTest(java.lang.reflect.Method)[pri:9, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T23:04:24 IST" name="initialization" finished-at="2023-04-18T23:04:33 IST" duration-ms="8353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTenantUsersPageTest(java.lang.reflect.Method)[pri:154, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T23:04:33 IST" name="validateTenantUsersPageTest" finished-at="2023-04-18T23:05:03 IST" duration-ms="30349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.validateTenantUsersPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Tenant Users and Expected page title is: Tenant Users]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTenantUsersPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d]" started-at="2023-04-18T23:05:03 IST" name="getResult" finished-at="2023-04-18T23:05:06 IST" duration-ms="3205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTenantUsersPageTest status=SUCCESS method=TenantUsersPageTest.validateTenantUsersPageTest(java.lang.reflect.Method)[pri:154, instance:com.ae.qa.testcases.TenantUsersPageTest@5b7ea70d] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.TenantUsersPageTest -->
      <class name="com.ae.qa.testcases.ArtifactsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T20:51:28 IST" name="initialization" finished-at="2023-04-18T20:51:37 IST" duration-ms="8690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadPSTest(java.lang.reflect.Method)[pri:14, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T20:51:37 IST" name="validateUploadPSTest" finished-at="2023-04-18T20:53:21 IST" duration-ms="104057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.validateUploadPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Upload button is clicked]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[Failure message for Invalid Artifact name: Artifact name for Process Studio distribution is case-sensitive. Please enter name as "Process Studio".]]>
            </line>
            <line>
              <![CDATA[Please upload artifacts with valid name]]>
            </line>
            <line>
              <![CDATA[Artifact name has given correctly]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[Success message for valid Artifact name: Artifact uploaded successfully]]>
            </line>
            <line>
              <![CDATA[Artifact uploaded successfully]]>
            </line>
            <line>
              <![CDATA[Actual Entity after uploading PS Upload: ARTIFACT]]>
            </line>
            <line>
              <![CDATA[Actual Operation after uploading PS Upload: UPLOAD]]>
            </line>
            <line>
              <![CDATA[Entry and Operation in Logs after uploading PS is verified]]>
            </line>
            <line>
              <![CDATA[Entity after uploading PS is verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T20:53:21 IST" name="getResult" finished-at="2023-04-18T20:53:23 IST" duration-ms="2676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadPSTest status=SUCCESS method=ArtifactsPageTest.validateUploadPSTest(java.lang.reflect.Method)[pri:14, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8] output=Upload button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T22:50:10 IST" name="initialization" finished-at="2023-04-18T22:50:18 IST" duration-ms="7503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUpdatePSTest(java.lang.reflect.Method)[pri:135, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T22:50:18 IST" name="ValidateUpdatePSTest" finished-at="2023-04-18T22:51:10 IST" duration-ms="51735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.ValidateUpdatePSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[ Actual message after updating artifact: Artifact updated successfully]]>
            </line>
            <line>
              <![CDATA[Artifact updated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUpdatePSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T22:51:10 IST" name="getResult" finished-at="2023-04-18T22:51:17 IST" duration-ms="7182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUpdatePSTest status=SUCCESS method=ArtifactsPageTest.ValidateUpdatePSTest(java.lang.reflect.Method)[pri:135, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8] output=Edit button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T23:06:20 IST" name="initialization" finished-at="2023-04-18T23:06:29 IST" duration-ms="8936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateArtifactsPageTest(java.lang.reflect.Method)[pri:157, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T23:06:29 IST" name="validateArtifactsPageTest" finished-at="2023-04-18T23:06:53 IST" duration-ms="24444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.validateArtifactsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Artifacts and Expected page title is: Artifacts]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateArtifactsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-18T23:06:53 IST" name="getResult" finished-at="2023-04-18T23:06:56 IST" duration-ms="2892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateArtifactsPageTest status=SUCCESS method=ArtifactsPageTest.validateArtifactsPageTest(java.lang.reflect.Method)[pri:157, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-19T00:30:22 IST" name="initialization" finished-at="2023-04-19T00:30:28 IST" duration-ms="6725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeletePSTest(java.lang.reflect.Method)[pri:2020, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-19T00:30:28 IST" name="ValidateDeletePSTest" finished-at="2023-04-19T00:30:52 IST" duration-ms="23839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.ValidateDeletePSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Delete button is clicked]]>
            </line>
            <line>
              <![CDATA[Confirmed for deletion of Artifact]]>
            </line>
            <line>
              <![CDATA[ Actual message after deletion of artifact: Artifact <Process Studio> deleted successfully]]>
            </line>
            <line>
              <![CDATA[Artifact deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeletePSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8]" started-at="2023-04-19T00:30:52 IST" name="getResult" finished-at="2023-04-19T00:31:00 IST" duration-ms="7573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeletePSTest status=SUCCESS method=ArtifactsPageTest.ValidateDeletePSTest(java.lang.reflect.Method)[pri:2020, instance:com.ae.qa.testcases.ArtifactsPageTest@650eab8] output=Delete button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.ArtifactsPageTest -->
      <class name="com.ae.qa.testcases.AuditLogsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:48:49 IST" name="initialization" finished-at="2023-04-18T20:48:56 IST" duration-ms="7607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedownloadingAuditLogs(java.lang.reflect.Method)[pri:10, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:48:56 IST" name="validatedownloadingAuditLogs" finished-at="2023-04-18T20:49:22 IST" duration-ms="25457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatedownloadingAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked the download button]]>
            </line>
            <line>
              <![CDATA[Audit logs download started Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedownloadingAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:49:22 IST" name="getResult" finished-at="2023-04-18T20:49:27 IST" duration-ms="5463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedownloadingAuditLogs status=SUCCESS method=AuditLogsPageTest.validatedownloadingAuditLogs(java.lang.reflect.Method)[pri:10, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:49:27 IST" name="initialization" finished-at="2023-04-18T20:49:36 IST" duration-ms="8724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAuditLogs(java.lang.reflect.Method)[pri:11, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:49:36 IST" name="validatecheckColumnsInAuditLogs" finished-at="2023-04-18T20:50:02 IST" duration-ms="26048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatecheckColumnsInAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:02 IST" name="getResult" finished-at="2023-04-18T20:50:08 IST" duration-ms="6447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAuditLogs status=SUCCESS method=AuditLogsPageTest.validatecheckColumnsInAuditLogs(java.lang.reflect.Method)[pri:11, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:08 IST" name="initialization" finished-at="2023-04-18T20:50:15 IST" duration-ms="6674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAuditLogs(java.lang.reflect.Method)[pri:12, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:15 IST" name="validatedeselectAllInAuditLogs" finished-at="2023-04-18T20:50:41 IST" duration-ms="25919" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatedeselectAllInAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 2]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 2]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Entity and ObjectId.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:41 IST" name="getResult" finished-at="2023-04-18T20:50:49 IST" duration-ms="8034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAuditLogs status=SUCCESS method=AuditLogsPageTest.validatedeselectAllInAuditLogs(java.lang.reflect.Method)[pri:12, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:49 IST" name="initialization" finished-at="2023-04-18T20:50:57 IST" duration-ms="7622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifySpecificColumnTest(java.lang.reflect.Method)[pri:13, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:50:57 IST" name="verifySpecificColumnTest" finished-at="2023-04-18T20:51:23 IST" duration-ms="26310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.verifySpecificColumnTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Description]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Source]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifySpecificColumnTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T20:51:23 IST" name="getResult" finished-at="2023-04-18T20:51:28 IST" duration-ms="4974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecificColumnTest status=SUCCESS method=AuditLogsPageTest.verifySpecificColumnTest(java.lang.reflect.Method)[pri:13, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T21:15:46 IST" name="initialization" finished-at="2023-04-18T21:15:53 IST" duration-ms="7220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifycheckLogsTest(java.lang.reflect.Method)[pri:32, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T21:15:53 IST" name="verifycheckLogsTest" finished-at="2023-04-18T21:16:33 IST" duration-ms="40112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.verifycheckLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Server URL field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Clean Up Requests Hours field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[LOGOUT]]>
            </line>
            <line>
              <![CDATA[UPDATE]]>
            </line>
            <line>
              <![CDATA[AUTHENTICATE]]>
            </line>
            <line>
              <![CDATA[Operations in audit logs validated in table]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifycheckLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T21:16:33 IST" name="getResult" finished-at="2023-04-18T21:16:51 IST" duration-ms="18148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifycheckLogsTest status=SUCCESS method=AuditLogsPageTest.verifycheckLogsTest(java.lang.reflect.Method)[pri:32, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T23:05:43 IST" name="initialization" finished-at="2023-04-18T23:05:51 IST" duration-ms="8755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLogsPageTest(java.lang.reflect.Method)[pri:156, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T23:05:51 IST" name="validateLogsPageTest" finished-at="2023-04-18T23:06:18 IST" duration-ms="26732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validateLogsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Audit Logs and Expected page title is: Audit Logs]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLogsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2]" started-at="2023-04-18T23:06:18 IST" name="getResult" finished-at="2023-04-18T23:06:20 IST" duration-ms="1831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogsPageTest status=SUCCESS method=AuditLogsPageTest.validateLogsPageTest(java.lang.reflect.Method)[pri:156, instance:com.ae.qa.testcases.AuditLogsPageTest@2bef51f2] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.AuditLogsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:30:31 IST" name="initialization" finished-at="2023-04-18T21:30:40 IST" duration-ms="9217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateUserGroup(java.lang.reflect.Method)[pri:48, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:30:40 IST" name="validateCreateUserGroup" finished-at="2023-04-18T21:31:08 IST" duration-ms="28053" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateCreateUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Group]]>
            </line>
            <line>
              <![CDATA[Actual Username:User group created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User group created successfully]]>
            </line>
            <line>
              <![CDATA[New user group is created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:08 IST" name="getResult" finished-at="2023-04-18T21:31:11 IST" duration-ms="2678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateCreateUserGroup(java.lang.reflect.Method)[pri:48, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:11 IST" name="initialization" finished-at="2023-04-18T21:31:19 IST" duration-ms="7994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditUserGroup(java.lang.reflect.Method)[pri:49, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:19 IST" name="validateEditUserGroup" finished-at="2023-04-18T21:31:43 IST" duration-ms="24202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateEditUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Description of user group updated]]>
            </line>
            <line>
              <![CDATA[Actual Username:Changes saved to user group]]>
            </line>
            <line>
              <![CDATA[Expected Username:Changes saved to user group]]>
            </line>
            <line>
              <![CDATA[User group got edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:43 IST" name="getResult" finished-at="2023-04-18T21:31:51 IST" duration-ms="7413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateEditUserGroup(java.lang.reflect.Method)[pri:49, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:51 IST" name="initialization" finished-at="2023-04-18T21:31:59 IST" duration-ms="8370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddUserToGroup(java.lang.reflect.Method)[pri:50, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:31:59 IST" name="validateAddUserToGroup" finished-at="2023-04-18T21:32:35 IST" duration-ms="36378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateAddUserToGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users Tab clicked]]>
            </line>
            <line>
              <![CDATA[UsersGroup Tab clicked]]>
            </line>
            <line>
              <![CDATA[Show Member button is clicked]]>
            </line>
            <line>
              <![CDATA[assigning user1]]>
            </line>
            <line>
              <![CDATA[Actual Username:User(s) added to the group successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User(s) added to the group successfully]]>
            </line>
            <line>
              <![CDATA[User1 assigned and validated]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddUserToGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:32:35 IST" name="getResult" finished-at="2023-04-18T21:32:40 IST" duration-ms="4767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddUserToGroup status=SUCCESS method=UserGroupsPageTestTA.validateAddUserToGroup(java.lang.reflect.Method)[pri:50, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:32:40 IST" name="initialization" finished-at="2023-04-18T21:32:47 IST" duration-ms="6830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveUserFromGroup(java.lang.reflect.Method)[pri:51, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:32:47 IST" name="validateRemoveUserFromGroup" finished-at="2023-04-18T21:33:19 IST" duration-ms="32087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateRemoveUserFromGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab clicked]]>
            </line>
            <line>
              <![CDATA[Users group tab clicked]]>
            </line>
            <line>
              <![CDATA[Show Member button is clicked]]>
            </line>
            <line>
              <![CDATA[Removing user1]]>
            </line>
            <line>
              <![CDATA[Actual Username:User(s) removed from the group successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User(s) removed from the group successfully]]>
            </line>
            <line>
              <![CDATA[User1 removed]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveUserFromGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:33:19 IST" name="getResult" finished-at="2023-04-18T21:33:35 IST" duration-ms="15573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveUserFromGroup status=SUCCESS method=UserGroupsPageTestTA.validateRemoveUserFromGroup(java.lang.reflect.Method)[pri:51, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:33:35 IST" name="initialization" finished-at="2023-04-18T21:33:44 IST" duration-ms="9476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateUserGroupTest(java.lang.reflect.Method)[pri:52, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:33:44 IST" name="ValidateDuplicateUserGroupTest" finished-at="2023-04-18T21:34:11 IST" duration-ms="26739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.ValidateDuplicateUserGroupTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Group]]>
            </line>
            <line>
              <![CDATA[Actual Username:Duplicate user group name [HRGroup]]]>
            </line>
            <line>
              <![CDATA[Expected Username:Duplicate user group name [HRGroup]]]>
            </line>
            <line>
              <![CDATA[User group with duplicate name can not be created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateUserGroupTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T21:34:11 IST" name="getResult" finished-at="2023-04-18T21:34:17 IST" duration-ms="6192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateUserGroupTest status=SUCCESS method=UserGroupsPageTestTA.ValidateDuplicateUserGroupTest(java.lang.reflect.Method)[pri:52, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T23:26:48 IST" name="initialization" finished-at="2023-04-18T23:26:54 IST" duration-ms="6414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUserGroup(java.lang.reflect.Method)[pri:560, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T23:26:54 IST" name="validateDeleteUserGroup" finished-at="2023-04-18T23:27:18 IST" duration-ms="24125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateDeleteUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab clicked]]>
            </line>
            <line>
              <![CDATA[Users group tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Username:User group deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User group deleted successfully]]>
            </line>
            <line>
              <![CDATA[User group deleted]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed]" started-at="2023-04-18T23:27:18 IST" name="getResult" finished-at="2023-04-18T23:27:36 IST" duration-ms="18079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateDeleteUserGroup(java.lang.reflect.Method)[pri:560, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@150ab4ed] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T21:51:30 IST" name="initialization" finished-at="2023-04-18T21:51:39 IST" duration-ms="8613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestStatusTest(java.lang.reflect.Method)[pri:74, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T21:51:39 IST" name="validateRequestStatusTest" finished-at="2023-04-18T21:52:18 IST" duration-ms="39161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Additional status details is clicked]]>
            </line>
            <line>
              <![CDATA[Message after execution of wf:Message : Execution Successful]]>
            </line>
            <line>
              <![CDATA[Workflow status is:Complete]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T21:52:18 IST" name="getResult" finished-at="2023-04-18T21:52:20 IST" duration-ms="2641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestStatusTest status=SUCCESS method=RequestsPageTestTA.validateRequestStatusTest(java.lang.reflect.Method)[pri:74, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:06:06 IST" name="initialization" finished-at="2023-04-18T22:06:13 IST" duration-ms="7567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInRequests(java.lang.reflect.Method)[pri:91, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:06:13 IST" name="validatecheckColumnsInRequests" finished-at="2023-04-18T22:06:34 IST" duration-ms="20838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validatecheckColumnsInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:06:34 IST" name="getResult" finished-at="2023-04-18T22:06:40 IST" duration-ms="5569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInRequests status=SUCCESS method=RequestsPageTestTA.validatecheckColumnsInRequests(java.lang.reflect.Method)[pri:91, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:06:40 IST" name="initialization" finished-at="2023-04-18T22:06:48 IST" duration-ms="7929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInRequests(java.lang.reflect.Method)[pri:92, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:06:48 IST" name="validatedeselectAllInRequests" finished-at="2023-04-18T22:07:09 IST" duration-ms="21083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validatedeselectAllInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 3]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 3]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Workflow Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Id,Workflow Name,Status.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:07:09 IST" name="getResult" finished-at="2023-04-18T22:07:16 IST" duration-ms="7248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInRequests status=SUCCESS method=RequestsPageTestTA.validatedeselectAllInRequests(java.lang.reflect.Method)[pri:92, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:07:16 IST" name="initialization" finished-at="2023-04-18T22:07:24 IST" duration-ms="8019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSpecificColumnInRequests(java.lang.reflect.Method)[pri:93, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:07:24 IST" name="validateSpecificColumnInRequests" finished-at="2023-04-18T22:07:51 IST" duration-ms="27274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateSpecificColumnInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Workflow Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Priority]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Completed]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSpecificColumnInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:07:51 IST" name="getResult" finished-at="2023-04-18T22:07:54 IST" duration-ms="2663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecificColumnInRequests status=SUCCESS method=RequestsPageTestTA.validateSpecificColumnInRequests(java.lang.reflect.Method)[pri:93, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:07:54 IST" name="initialization" finished-at="2023-04-18T22:08:01 IST" duration-ms="7207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadRequestTest(java.lang.reflect.Method)[pri:94, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:08:01 IST" name="validateDownloadRequestTest" finished-at="2023-04-18T22:08:23 IST" duration-ms="21974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateDownloadRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Download button is clicked & request download started]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T22:08:23 IST" name="getResult" finished-at="2023-04-18T22:08:32 IST" duration-ms="8705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadRequestTest status=SUCCESS method=RequestsPageTestTA.validateDownloadRequestTest(java.lang.reflect.Method)[pri:94, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T23:14:19 IST" name="initialization" finished-at="2023-04-18T23:14:24 IST" duration-ms="5783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestsPageTATest(java.lang.reflect.Method)[pri:183, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T23:14:24 IST" name="validateRequestsPageTATest" finished-at="2023-04-18T23:14:44 IST" duration-ms="19646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestsPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Requests and Expected page title is: Requests]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestsPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T23:14:44 IST" name="getResult" finished-at="2023-04-18T23:14:48 IST" duration-ms="4044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestsPageTATest status=SUCCESS method=RequestsPageTestTA.validateRequestsPageTATest(java.lang.reflect.Method)[pri:183, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T23:59:13 IST" name="initialization" finished-at="2023-04-18T23:59:19 IST" duration-ms="5927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestFailureReasonTest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-18T23:59:19 IST" name="validateRequestFailureReasonTest" finished-at="2023-04-19T00:01:42 IST" duration-ms="143027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestFailureReasonTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Additional status details is clicked]]>
            </line>
            <line>
              <![CDATA[Message after execution of wf:Error!]]>
            </line>
            <line>
              <![CDATA[Workflow status is:Failure]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestFailureReasonTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:01:42 IST" name="getResult" finished-at="2023-04-19T00:01:46 IST" duration-ms="3996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestFailureReasonTest status=SUCCESS method=RequestsPageTestTA.validateRequestFailureReasonTest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:02:44 IST" name="initialization" finished-at="2023-04-19T00:02:56 IST" duration-ms="12380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRestartRequestTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:02:56 IST" name="validateRestartRequestTest" finished-at="2023-04-19T00:03:16 IST" duration-ms="20002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRestartRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Restart icon is clicked]]>
            </line>
            <line>
              <![CDATA[Request Status is Failure So Restart button is visible and clicked]]>
            </line>
            <line>
              <![CDATA[Request [4] has been restarted]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRestartRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:03:16 IST" name="getResult" finished-at="2023-04-19T00:03:36 IST" duration-ms="19942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRestartRequestTest status=SUCCESS method=RequestsPageTestTA.validateRestartRequestTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:03:36 IST" name="initialization" finished-at="2023-04-19T00:03:48 IST" duration-ms="12470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTerminateRequestTest(java.lang.reflect.Method)[pri:1038, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:03:48 IST" name="validateTerminateRequestTest" finished-at="2023-04-19T00:05:48 IST" duration-ms="119182" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateTerminateRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:61797}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f3c8e6d1ff124bd128ac2dc78000ea6e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:61797}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f3c8e6d1ff124bd128ac2dc78000ea6e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pagesTenantAdmin.RequestsPageTA.validateTerminateRequest(RequestsPageTA.java:497)
at com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateTerminateRequestTest(RequestsPageTestTA.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Config Parameter is clicked]]>
            </line>
            <line>
              <![CDATA[Config Parameter is entered]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTerminateRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287]" started-at="2023-04-19T00:05:48 IST" name="getResult" finished-at="2023-04-19T00:05:50 IST" duration-ms="2243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTerminateRequestTest status=FAILURE method=RequestsPageTestTA.validateTerminateRequestTest(java.lang.reflect.Method)[pri:1038, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@5357c287] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA -->
      <class name="com.ae.qa.testcases.HomePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T22:57:56 IST" name="initialization" finished-at="2023-04-18T22:58:03 IST" duration-ms="6521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSearchFunctionalityTest(java.lang.reflect.Method)[pri:144, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T22:58:03 IST" name="validateSearchFunctionalityTest" finished-at="2023-04-18T22:58:26 IST" duration-ms="23087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateSearchFunctionalityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Logs and Found is: Logs]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSearchFunctionalityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T22:58:26 IST" name="getResult" finished-at="2023-04-18T22:58:30 IST" duration-ms="4443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchFunctionalityTest status=SUCCESS method=HomePageTest.validateSearchFunctionalityTest(java.lang.reflect.Method)[pri:144, instance:com.ae.qa.testcases.HomePageTest@3829ac1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:27:36 IST" name="initialization" finished-at="2023-04-18T23:27:44 IST" duration-ms="7360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateHomePageForConsumptionTabTest(java.lang.reflect.Method)[pri:700, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:27:44 IST" name="validateHomePageForConsumptionTabTest" finished-at="2023-04-18T23:28:02 IST" duration-ms="17937" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateHomePageForConsumptionTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using xpath=//span[text()='Home']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=//span[text()='Home']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at com.ae.qa.pages.HomePage.validateHomePageForConsumptionTab(HomePage.java:68)
at com.ae.qa.testcases.HomePageTest.validateHomePageForConsumptionTabTest(HomePageTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateHomePageForConsumptionTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:28:02 IST" name="getResult" finished-at="2023-04-18T23:28:02 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateHomePageForConsumptionTabTest status=FAILURE method=HomePageTest.validateHomePageForConsumptionTabTest(java.lang.reflect.Method)[pri:700, instance:com.ae.qa.testcases.HomePageTest@3829ac1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f6897bad0411d3a49998c7e8166f5a6a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f6897bad0411d3a49998c7e8166f5a6a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUploadLicenseTest(java.lang.reflect.Method)[pri:701, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:28:02 IST" name="validateUploadLicenseTest" finished-at="2023-04-18T23:28:02 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateUploadLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f6897bad0411d3a49998c7e8166f5a6a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:62169}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f6897bad0411d3a49998c7e8166f5a6a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUploadLicenseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:28:02 IST" name="getResult" finished-at="2023-04-18T23:28:02 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@3829ac1]" started-at="2023-04-18T23:28:02 IST" name="initialization" finished-at="2023-04-18T23:28:02 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
      </class> <!-- com.ae.qa.testcases.HomePageTest -->
      <class name="com.ae.qa.testcases.WorkflowsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:47:28 IST" name="initialization" finished-at="2023-04-18T22:47:35 IST" duration-ms="6046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisableWorkflowsTest(java.lang.reflect.Method)[pri:133, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:47:35 IST" name="validateDisableWorkflowsTest" finished-at="2023-04-18T22:48:46 IST" duration-ms="71683" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateDisableWorkflowsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:59757}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 55b01cd4944d6cc470d4736093b313e7
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:59757}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 55b01cd4944d6cc470d4736093b313e7
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pages.WorkflowsPage.validateDisableWorkflows(WorkflowsPage.java:64)
at com.ae.qa.testcases.WorkflowsPageTest.validateDisableWorkflowsTest(WorkflowsPageTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Opertaion of Disable all workflows is selected from dropdown]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDisableWorkflowsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:48:46 IST" name="getResult" finished-at="2023-04-18T22:48:50 IST" duration-ms="3703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisableWorkflowsTest status=FAILURE method=WorkflowsPageTest.validateDisableWorkflowsTest(java.lang.reflect.Method)[pri:133, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:48:50 IST" name="initialization" finished-at="2023-04-18T22:48:56 IST" duration-ms="5635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEnableWorkflowsTest(java.lang.reflect.Method)[pri:134, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:48:56 IST" name="validateEnableWorkflowsTest" finished-at="2023-04-18T22:50:07 IST" duration-ms="71623" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateEnableWorkflowsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:49501}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7b742fe13c55a4eacf19e90e72d7dd2b
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='mul-dorpdown-button']"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:49501}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7b742fe13c55a4eacf19e90e72d7dd2b
*** Element info: {Using=xpath, value=//span[@class='mul-dorpdown-button']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pages.WorkflowsPage.validateEnableWorkflows(WorkflowsPage.java:90)
at com.ae.qa.testcases.WorkflowsPageTest.validateEnableWorkflowsTest(WorkflowsPageTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Opertaion of Enable all workflows is selected from dropdown]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEnableWorkflowsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T22:50:07 IST" name="getResult" finished-at="2023-04-18T22:50:10 IST" duration-ms="3327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEnableWorkflowsTest status=FAILURE method=WorkflowsPageTest.validateEnableWorkflowsTest(java.lang.reflect.Method)[pri:134, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T23:05:06 IST" name="initialization" finished-at="2023-04-18T23:05:13 IST" duration-ms="6598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWorkflowsPageTest(java.lang.reflect.Method)[pri:155, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T23:05:13 IST" name="validateWorkflowsPageTest" finished-at="2023-04-18T23:05:37 IST" duration-ms="24414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateWorkflowsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Workflow Operations and Expected page title is: Workflow Operations]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWorkflowsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241]" started-at="2023-04-18T23:05:37 IST" name="getResult" finished-at="2023-04-18T23:05:43 IST" duration-ms="5302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWorkflowsPageTest status=SUCCESS method=WorkflowsPageTest.validateWorkflowsPageTest(java.lang.reflect.Method)[pri:155, instance:com.ae.qa.testcases.WorkflowsPageTest@76f7d241] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.WorkflowsPageTest -->
      <class name="com.ae.qa.testcases.LoginPageTest">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T20:38:06 IST" name="setExtent" finished-at="2023-04-18T20:38:06 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T20:38:06 IST" name="initialization" finished-at="2023-04-18T20:38:17 IST" duration-ms="10202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateFirstTimeLoginTest(java.lang.reflect.Method)[pri:1, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T20:38:17 IST" name="ValidateFirstTimeLoginTest" finished-at="2023-04-18T20:38:35 IST" duration-ms="17874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateFirstTimeLoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateFirstTimeLoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T20:38:35 IST" name="getResult" finished-at="2023-04-18T20:38:43 IST" duration-ms="8817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateFirstTimeLoginTest status=SUCCESS method=LoginPageTest.ValidateFirstTimeLoginTest(java.lang.reflect.Method)[pri:1, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:20:39 IST" name="initialization" finished-at="2023-04-18T21:20:47 IST" duration-ms="8859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateForgotPswdTest(java.lang.reflect.Method)[pri:38, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:20:47 IST" name="validateForgotPswdTest" finished-at="2023-04-18T21:20:48 IST" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.validateForgotPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgotten password link is Present]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateForgotPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:20:48 IST" name="getResult" finished-at="2023-04-18T21:20:57 IST" duration-ms="8330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateForgotPswdTest status=SUCCESS method=LoginPageTest.validateForgotPswdTest(java.lang.reflect.Method)[pri:38, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output=Forgotten password link is Present]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:20:57 IST" name="initialization" finished-at="2023-04-18T21:21:06 IST" duration-ms="9421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method)[pri:39, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:21:06 IST" name="ValidateSettingPwdWOComplexityTest" finished-at="2023-04-18T21:22:13 IST" duration-ms="66574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateSettingPwdWOComplexityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:22:13 IST" name="getResult" finished-at="2023-04-18T21:22:17 IST" duration-ms="3821" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateSettingPwdWOComplexityTest status=SUCCESS method=LoginPageTest.ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method)[pri:39, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:22:17 IST" name="initialization" finished-at="2023-04-18T21:22:25 IST" duration-ms="8719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateResetPswdTest(java.lang.reflect.Method)[pri:40, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:22:25 IST" name="ValidateResetPswdTest" finished-at="2023-04-18T21:23:12 IST" duration-ms="46558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
            <line>
              <![CDATA[Set new password successfully]]>
            </line>
            <line>
              <![CDATA[Password set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:23:12 IST" name="getResult" finished-at="2023-04-18T21:23:22 IST" duration-ms="9983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateResetPswdTest status=SUCCESS method=LoginPageTest.ValidateResetPswdTest(java.lang.reflect.Method)[pri:40, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output=Forgot password link clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:23:22 IST" name="initialization" finished-at="2023-04-18T21:23:28 IST" duration-ms="6107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLoginWithResetPswdTest(java.lang.reflect.Method)[pri:41, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:23:28 IST" name="ValidateLoginWithResetPswdTest" finished-at="2023-04-18T21:24:32 IST" depends-on-methods="com.ae.qa.testcases.LoginPageTest.ValidateResetPswdTest" duration-ms="63594" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateLoginWithResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[contains(text(),'Home')]"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:55416}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82a4387a816491b5ca0b49c7b5e1dcd6
*** Element info: {Using=xpath, value=//div/h2[contains(text(),'Home')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[contains(text(),'Home')]"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:55416}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 82a4387a816491b5ca0b49c7b5e1dcd6
*** Element info: {Using=xpath, value=//div/h2[contains(text(),'Home')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pages.LoginPage.ValidateLoginWithResetPswd(LoginPage.java:194)
at com.ae.qa.testcases.LoginPageTest.ValidateLoginWithResetPswdTest(LoginPageTest.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLoginWithResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T21:24:32 IST" name="getResult" finished-at="2023-04-18T21:24:35 IST" duration-ms="3632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLoginWithResetPswdTest status=FAILURE method=LoginPageTest.ValidateLoginWithResetPswdTest(java.lang.reflect.Method)[pri:41, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:51:17 IST" name="initialization" finished-at="2023-04-18T22:51:26 IST" duration-ms="9108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method)[pri:136, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:51:26 IST" name="validateUnlockUserWithSecQueAndResetPswdTest" finished-at="2023-04-18T22:52:12 IST" duration-ms="45570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
            <line>
              <![CDATA[Set new password successfully]]>
            </line>
            <line>
              <![CDATA[Password set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUnlockUserWithSecQueAndResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:52:12 IST" name="getResult" finished-at="2023-04-18T22:52:14 IST" duration-ms="2069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnlockUserWithSecQueAndResetPswdTest status=SUCCESS method=LoginPageTest.validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method)[pri:136, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output=Forgot password link clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:52:14 IST" name="initialization" finished-at="2023-04-18T22:52:20 IST" duration-ms="5904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLoginOfUnlockUserTest(java.lang.reflect.Method)[pri:137, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:52:20 IST" name="ValidateLoginOfUnlockUserTest" finished-at="2023-04-18T22:53:23 IST" duration-ms="63467" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateLoginOfUnlockUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[contains(text(),'Home')]"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:56353}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 633080ea82185c2d90b0f5513d3e3e8d
*** Element info: {Using=xpath, value=//div/h2[contains(text(),'Home')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div/h2[contains(text(),'Home')]"}
  (Session info: chrome=112.0.5615.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AEDBSERVER', ip: '10.41.5.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.121, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:56353}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 633080ea82185c2d90b0f5513d3e3e8d
*** Element info: {Using=xpath, value=//div/h2[contains(text(),'Home')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pages.LoginPage.ValidateLoginWithResetPswd(LoginPage.java:194)
at com.ae.qa.testcases.LoginPageTest.ValidateLoginOfUnlockUserTest(LoginPageTest.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLoginOfUnlockUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-18T22:53:23 IST" name="getResult" finished-at="2023-04-18T22:53:30 IST" duration-ms="6734" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLoginOfUnlockUserTest status=FAILURE method=LoginPageTest.ValidateLoginOfUnlockUserTest(java.lang.reflect.Method)[pri:137, instance:com.ae.qa.testcases.LoginPageTest@654d8173] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@654d8173]" started-at="2023-04-19T00:32:12 IST" name="endReport" finished-at="2023-04-19T00:32:13 IST" duration-ms="1075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.ae.qa.testcases.LoginPageTest -->
    </test> <!-- AESanity -->
  </suite> <!-- TestSuite -->
</testng-results>
